{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Welcome to my blog! Hi, this is Yifan Kang, or you might also know me as ETK in coding competitions. I am an undergraduate student at MIT majoring in Course 6-4 (Artificial Intelligence) and Course 18 Math.</p>"},{"location":"#contents","title":"Contents","text":"<p>Algorithms - my blogs on CS algorithms and interesting competitive programming problems!</p> <p>Friend links - some personal blog links of my friends!</p> <p>GTAC - my notes on Graph Theory and Additive Combinatorics!</p> <p>Math - math olympiad notes and solutions!</p> <p>Old Posts - Old posts on competitive programming written in Chinese!</p> <p>Physics - Physics competition notes!</p>"},{"location":"Algorithms/Berlekamp-Massey%20Algorithm/","title":"Berlekamp Massey Algorithm","text":"<p>In this blog, I will be sharing some notes related to Berlekamp-Massey Algorithm, a powerful algorithm that will help you to find the shortest linear recurrence relation in a sequence.</p>"},{"location":"Algorithms/Berlekamp-Massey%20Algorithm/#what-is-linear-recurrence","title":"What is linear recurrence?","text":"<p>Though it might be the first time to see such a fancy term, most people have actually encountered linear recurrence relations many times. For example, the sequence</p> \\[ 1,2,4,8,16,\\dots \\] <p>is a linear recurrence sequence because of the recurrence relationship</p> \\[ a_n=2\\times a_{n-1} \\] <p>Another famous example would be the Fibonacci numbers \\(F_0,F_1,F_2,\\dots\\) where \\(F_0=0,F_1=1,F_n=F_{n-1}+F_{n-2}\\) for \\(n\\ge 2\\) . so, the sequence begins</p> \\[ 0,1,1,2,3,5,8,\\dots \\] <p>Basically, a sequence \\(a_0,a_1,\\dots,a_{n-1}\\) satisfies a linear recurrence relation \\(c_1,c_2,\\dots,c_m\\) if for all \\(i\\ge m\\), we have</p> \\[ a_i=\\sum_{j=1}^m c_ja_{i-j} \\]"},{"location":"Algorithms/Berlekamp-Massey%20Algorithm/#berlekamp-massey-algorithm","title":"Berlekamp-Massey Algorithm","text":"<p>Back to the main topic, how does the algorithm find a linear recurrence relation for a given sequence?</p> <p>We can use the idea of induction. </p> <ul> <li>First, finding such relation for a sequence of length 1 is trivial.</li> <li>It is also meaningless to find a recurrence relation for an all-zero sequence, so we want to start with the first non-zero element in the sequence.</li> <li>Suppose \\(a_i\\) is the first non-zero element, by definition, the recurrence relation has to begin with \\(m=i\\) . WLOG, set all \\(c_i\\) to be zero for now.</li> <li>Suppose for all \\(0\\le i &lt; k\\) ,  we now find the linear recurrence relation \\(C_i\\) for the sequence \\(\\{a_0,a_1,\\dots,a_i\\}\\) . We want to find a linear recurrence relation for \\(\\{a_0,a_1,\\dots,a_k\\}\\) .</li> <li>Let's say for \\(C_{k-1}\\) , we get \\(a_k'\\) based on the recurrence. If \\(a_k'=a_k\\) , then \\(C_k=C_{k-1}\\) .</li> <li>Otherwise, we need to make some adjustments to find the new relation. Say \\(\\Delta = a_k-a_k'\\) . It suffices to find a relation \\(C=\\{c_1,c_2,\\dots,c_m\\}\\) such that \\(\\sum_{j=1}^m c_ja_{t-j}=0\\) for all \\(t &lt; k\\) (or it could be undefined when \\(t &lt; m\\)) , and for \\(k\\) we get the value \\(1\\) .</li> <li>Define the addition between two relation as adding their elements accordingly. It's not difficult to see that \\(C_k=C_{k-1}+\\Delta\\times C\\) satisfies the constraint.</li> <li>Finally, how do we find such \\(C\\) ?</li> <li>Suppose we have also run into this case at position \\(k'\\) with error \\(\\Delta'\\) and relation \\(C'\\). Then \\(\\{1,-c_1',-c_2',\\dots,-c_{m'}'\\}\\) will have the value \\(\\Delta'\\) at position \\(k'+1\\) and \\(0\\) otherwise. By dividing the whole sequence by \\(\\Delta'\\) and adding \\(k - k'-1\\) zeroes in front, we get the \\(C\\) !</li> <li>Finally, by checking all the position \\(k'\\) , we can find the shortest recurrence relation.</li> </ul> <p>Here's a sample code of Berlekamp-Massey Algorithm under modular arithmetic:</p> <pre><code>void add(ll &amp;x,const ll y){x += y;x %= P;}\nvoid BM(ll *a,int n,vector &lt;ll&gt; &amp;C){\n    C.clear();\n    //C' that leads to the shortest C\n    vector &lt;ll&gt; lstC;\n    //k' and delta' in the description\n    int k = 0;ll delta = 0;\n    rep(i,1,n){\n        ll val = 0;\n        rep(j,0,sz(C) - 1){\n            //C is the last recurrence relation we have\n            add(val,a[i - 1 - j] * C[j]);\n        }\n        if((a[i] - val) % P == 0)continue;\n        if(k == 0){//first non-zero element\n            k = i,delta = a[i] - val;\n            rep(j,1,i)C.pb(0);\n            continue;\n        }\n        vector &lt;ll&gt; now = C;\n        ll t = (a[i] - val) * inv(delta) % P;\n        if(sz(C) &lt; sz(lstC) + i - k)C.resize(sz(lstC) + i - k);\n        //incrementing\n        add(C[i - k - 1],t);\n        rep(j,0,sz(lstC) - 1)add(C[i - k + j],-t * lstC[j]);\n        if(sz(now) - i &lt; sz(lstC) - k){\n            k = i,delta = a[i] - val,lstC = now;\n        }\n    }\n}\n</code></pre>"},{"location":"Algorithms/Berlekamp-Massey%20Algorithm/#how-to-find-the-k-th-term-of-a-sequence-with-the-linear-recurrence-relation","title":"How to find the k-th term of a sequence with the linear recurrence relation?","text":"<p>Suppose we have a magic function \\(G\\) that maps a polynomial to a real number in this way:</p> \\[ G(\\sum_{i=0}^n c_ix^i)=\\sum_{i=0}^nc_ia_i \\] <p>Notice that for the polynomial \\(f(x)=x^{m}-\\sum_{i=1}^m c_ix^{m-i}\\) ,  we have</p> \\[ G(x^kf(x))=a_{k+m}-\\sum_{i=1}^m c_ia_{m+k-i}=0 \\] <p>By the definition of linear recurrence relation. Thus,</p> \\[ G(g(x)f(x))=0 \\] <p>for any polynomial \\(g(x)\\) .</p> \\[ a_k=G(x^k)=G(r(x)) \\] <p>where \\(r(x)\\) is the remainder of \\(x^k\\) when divided by \\(f(x)\\) . We can calculate \\(x^k\\) in a binary-exponentiation manner then calculate \\(x^k\\mod f\\) . Time complexity will be \\(O(m^2\\log k)\\) or \\(O(m\\log m\\log k)\\) if we speed up the polynomial multiplication part by using FFT.</p>"},{"location":"Friend%20Links/Friend%20Links/","title":"Friend Links","text":"<p>Enonya' Blog</p> <p>Cry_For_theMoon's Blog</p> <p>KarL05's Blog</p>"},{"location":"GTAC/0.%20Introduction%20to%20Graph%20Theory/","title":"0. Introduction to Graph Theory","text":"<p>I will be creating a series of blog posts as well as presentations on graph theory. The blog post is inspired by Prof. Yufei Zhao's book Graph Theory and Additive Combinatorics. The goal for my blog posts is to provide a more friendly introduction to concepts in graph theory. If you are a high school student interested in math outside of your currilum, if you are a math olympiad enthusiast, or if you are a college student taking an introductory graph theory class, I hope you all can find my blogs useful. I will be discussing selected topics and problems of graph theory as well as providing solutions to some exercises.</p> <p>So, what is graph theory?</p> <p>ChatGPT: \"Graph theory is a branch of mathematics that studies the properties and structures of graphs, which are mathematical representations of networks of objects or relationships between them. Graphs can be used to model a wide range of problems in various fields, including computer science, engineering, social sciences, biology, physics, and more. Some of the basic concepts in graph theory include vertices (or nodes), edges, and various types of graph such as directed, undirected, weighted and unweighted.\"</p> <p>First, we introduce some notations to define a graph.</p>"},{"location":"GTAC/0.%20Introduction%20to%20Graph%20Theory/#notations","title":"Notations","text":"<p>We write a graph as \\(G=(V,E)\\), where \\(V\\) is the set of vertices and \\(E\\subseteq \\{(x,y)|x,y\\in V\\}\\) is the set of edges. </p> <p>When there's a direction for the edges (e.g. \\(x\\to y\\)), we say the graph is directed, otherwise it's undirected. We will focus on undirected graphs in our future posts. </p> <p>For example, when \\(V=\\{1,2,3,4\\},E=\\{(1,3),(1,4),(2,3),(2,4)\\}\\). The graph looks like this:</p> <p></p> <p>This is also known as a \\(K_{2,2}\\) graph, which means we have two vertices on the left and other two on the right, and every vertex on the left is connected with every vertex on the right.</p> <p>Generally, we define the complete bipartite graph \\(K_{s,t}\\) to be a graph with \\(s\\) vertices in one part and \\(t\\) on the other, and any edges in between the two parts are connected. Below is an example of \\(K_{5,3}\\):</p> <p></p> <p>Moreover, \\(K_r\\) is the complete graph on \\(r\\) vertices, which means \\(E=\\{(x,y)|1\\le x &lt; y\\le r \\}\\) . It is also known as a \\(r\\)-clique. Below is the graph \\(K_7\\). </p> <p></p> <p>In a graph \\(G=(V,E)\\), we say two vertices \\(u\\) and \\(v\\) are neighbors or adjacent if there exist an edge \\((u,v)\\in E\\) . In the above example, \\(1\\) is a neighbor of \\(4\\) but not a neighbor of \\(2\\). </p> <p>A neighborhood of \\(u\\) is defined as the set of all \\(u\\)'s neighbors. Formally, \\(N(u)=\\{v|(u,v)\\in E\\}\\). In the above example, \\(1\\)'s neighborhood contains \\(3\\) and \\(4\\), so \\(N(1)=\\{3,4\\}\\).</p> <p>The degree of \\(v\\) is the number of edges that contains \\(v\\), denoted as \\(\\deg v\\) . In undirected graphs without self-loops (weird edges like \\((u,u)\\)), it's clear that \\(\\deg v = |N(v)|\\).</p>"},{"location":"GTAC/0.%20Introduction%20to%20Graph%20Theory/#handshaking-lemma","title":"Handshaking Lemma","text":"<p>Claim: For a graph with \\(m\\) edges, we have</p> \\[ \\sum_v \\deg v  = 2m \\] <p>Proof: For each edge \\((u,v)\\), we count it twice on the left hand side (in \\(\\deg u\\) and \\(\\deg v\\)), thus it sums up to \\(2m\\).</p> <p>Handshaking Lemma: In a undirected graph, the number of vertices with odd degree is even.</p> <p>The name of this theorem comes from a famous mathematical problem, which is proving that: in a party, the number of people who shake hands an odd number of times must be even.</p> <p>Proof: Assume that that number is odd, then for the left hand side you get \\(1\\times 1 + 0\\equiv 1\\pmod 2\\) (odd times odd + even = odd). However, the right hand side is even. Contradiction! Thus the statement holds.</p>"},{"location":"GTAC/0.%20Introduction%20to%20Graph%20Theory/#walks-paths-and-cycles","title":"Walks, Paths, and Cycles","text":"<p>In an actual graph, we might want to travel from a point to another point along some roads conneting them. We also have similar concepts in graph theory, called a walk, which is defined as a sequence of edges \\((e_1,e_2,\\dots,e_{n-1})\\) and vertices \\((v_1,v_2,\\dots,v_n)\\) in a graph such that \\(e_i = (v_i,v_{i+1})\\) is the edge connecting \\(v_i\\) and \\(v_{i+1}\\) in the graph.</p> <p></p> <p>For example, in our previous graph, if we walk along \\((1,3),(3,2),(2,4)\\), then we passes through the vertices \\(1,3,2,4\\), and these two sets together forms a walk.</p> <p>Moreover, a graph is called connected if there is a walk from any vertex \\(x\\) to any other vertex \\(y\\).</p> <p>We can define more terms based on our walk! What if we never travel through the same edge twice? A trail is a walk in which all edges are distinct \\((e_i\\ne e_j)\\).</p> <p>What if we never travel through the same vertex? A path is a walk in which all vertices are distinct \\((v_i\\ne v_j)\\).</p> <p>What if we are on a trail that travels back to our starting point? A trail where the first and the last vertex are the same is called a cycle. \\(1\\to3\\to2\\to4\\to 1\\) is a cycle, since it starts and ends at \\(1\\).</p> <p>Claim: If a graph has no cycles, it must have a vertex with degree \\(\\le 1\\).</p> <p>Proof: Let's prove by contradiction! Suppose none of the vertex has degree \\(\\le 1\\), then we can pick any vertex \\(v_0\\) and start our trail there, picking the next edge to be any untraveled edge from this point and continuing this process. Since there's no cycle, the trail will eventually end at some point \\(v_n\\ne v_0\\). However, this would mean that we traveled to \\(v_n\\) at least twice because \\(\\deg v_n &gt; 1\\)! We can just start at \\(v_n\\) and follow the same trail to form our cycle. Contradiction!</p> <p>We call a graph without cycles an acyclic graph.</p>"},{"location":"GTAC/0.%20Introduction%20to%20Graph%20Theory/#trees","title":"Trees","text":"<p>You might not learn anything about graph theory before, but you definitely have seen trees in graph theory. It looks like a mindmap:</p> <p></p> <p>There are several definitions about a tree in graph theory and they are indeed equivalent!</p> <ul> <li>A tree is a graph in which any two vertices are connected by exactly one path.</li> <li>A tree is a connected graph without any cycles.</li> <li>A tree is a connected graph without any cycles, but a cycle will form if any edge is added to it.</li> <li>A tree is connected, but would become disconnected if any edge is removed from it.</li> </ul> <p>We will not go into proving the equivalence of all these statements here but it will be left as an exercise. </p> <p>Next, draw your own trees and count the number of vertices and edges. What do you find?</p> <p>Claim: An \\(n\\)-vertices tree has \\(n-1\\) edges.</p> <p>Proof: We can prove by induction on \\(n\\). When \\(n=1\\) the tree has no edges so our claim holds.</p> <p>When \\(n &gt; 1\\), let \\(T\\) be a tree with \\(n\\) vertices. Since \\(T\\) has no cycles, there exists a vertex \\(v\\) in \\(T\\) such that \\(\\deg v\\le 1\\) by the previous claim we made about acyclic graph. \\(T\\) is connected so \\(\\deg v =1\\).</p> <p>Thus, we can consider the graph \\(T'=T-v\\) that we get by deleting the vertex \\(v\\) in \\(T\\). \\(T'\\) is still connected and has \\(n-1\\) vertices. By induction there are \\(n-2\\) edges in \\(T'\\) so \\(T\\) has \\(n-1\\) edges.</p>"},{"location":"GTAC/0.%20Introduction%20to%20Graph%20Theory/#problems","title":"Problems","text":"<ol> <li>If there exists a walk from \\(x\\) to \\(y\\), can you always find a path from \\(x\\) to \\(y\\)? What about trail?</li> <li>Let \\(\\delta\\) be the minimum degree of \\(G\\), and suppose that \\(\\delta \\ge 2\\). Prove that \\(G\\) contains a path with \\(\\ge \\delta + 1\\) edges.</li> <li>If \\(G\\) is a tree and the sum of the degree of all vertices is \\(S\\), how many vertices does \\(G\\) have?</li> <li>An Eulerian trail is a trail in a graph \\(G\\) that visits every edge exactly once. It was first discussed by Leonhard Euler while solving the famous Seven Bridges of K\u00f6nigsberg problem. Euler proved that such trail exists only when the degree of all vertices are even. Can you prove it?</li> <li>Prove that a connected graph has an Eulerian trail if every vertex has an even degree.</li> <li>Prove that the statements about trees are all equivalent.</li> <li>We call a graph bipartite if it is a subgraph of a complete bipartite graph. In other words, the vertices in a bipartite graph can be separated into two groups such that all of the group's edges only cross between the groups. Prove that a graph is bipartite if and only if it has no cycles of odd length.</li> <li>Let \\(G\\) be a graph. Prove that it is possible to partition the vertices into two groups such that for each vertex, at least half of its neighbors ended up in another group.</li> </ol>"},{"location":"GTAC/1.%20Graph%20Coloring/","title":"1. Graph Coloring","text":"<p>Complete disorder is impossible. - T.S. Motzkin, on the theme of Ramsey Theory</p>"},{"location":"GTAC/1.%20Graph%20Coloring/#ramseys-theorem","title":"Ramsey's Theorem","text":"<p>(Multicolor Triangle Ramsey's Theorem) For every positive integer \\(r\\), there is some integer \\(N=N_r\\) such that if each edge of \\(K_N\\) is colored using one of the \\(r\\) colors, then there will be a monochromatic (one color) triangle.</p> <p>First, it's clear that if \\(r=1\\), then \\(N_r=3\\) simply satisfy the condition since there is only one color. We want to prove a non-trivial case when \\(r=2\\). When \\(N=5\\), we can give a construction where there is no monochromatic triangle like this:</p> <p></p> <p>This graph suggest that \\(N_2 &gt; 5\\), since it provides a counterexample for \\(N_2 = 5\\). However, \\(N_2=6\\), which means that no matter how we color \\(K_6\\), there will be a triangle with edges sharing the same color! </p> <p>If we see people as vertices and mutual friendship as the edges of a graph, this theorem tells us that among any \\(6\\) people, there must be a group of \\(3\\) that are friends of one another or that are complete strangers.</p> <p>Interesting! But how do we prove this? First, we need to know pigeonhole principle:</p> <p>(Pigeonhole Principle) If \\(n=km+t\\) items \\((k,t&gt;0)\\) are put into \\(m\\) containers, at least one of the containers will contain \\(k+1\\) items.</p> <p>Proof: Suppose the \\(i\\)-th container contain \\(c_i\\) items and all containers contain less than \\(k+1\\) items, then:</p> \\[ n=c_1+c_2+\\cdots+c_m\\le k+k+k+\\cdots+k=km&lt;km+t=n \\] <p>Contradiction!</p> <p>It is not hard to further show that the maximum value of \\(k+1\\) in this theorem is \\(\\lceil n/m\\rceil\\) . Intuitively, the principle tells us that the larger number of items we have, there will be a container with more items in it. Now we can go back to the original problem.</p>"},{"location":"GTAC/1.%20Graph%20Coloring/#proof","title":"Proof","text":"<p>Proof: For the \\(5\\) edges that have vertex \\(1\\), by pigeonhole principle, at least \\(3\\) of them will have the same color! Since the labelings don't matter, let's say the three edges are \\((1,2),(1,4)\\) and \\((1,5)\\) are colored red.</p> <p></p> <p>Now:</p> <ul> <li>If \\((2,5)\\) is red. We have \\((1,2),(1,5),(2,5)\\) a red triangle. We can get similar red triangles if either \\((2,4)\\) or \\((4,5)\\) is red.</li> </ul> <p></p> <ul> <li>If none of \\((2,3),(2,4),(3,4)\\) is red, then they must be all blue. \\((2,3),(2,4),(3,4)\\) indeed forms a all blue triangle!</li> </ul> <p></p> <p>Thus, in all cases we have found a monochromatic triangle, and \\(N(2)=6\\) is proved! Now we can move on to the more generalized case and try proving it with the same idea and induction on \\(r\\). </p> <p>Suppose the claim is true for \\(r-1\\) colors, which means that we can find a monochromatic triangle in any \\(r-1\\) colored complete graph of \\(N_{r-1}\\) vertices. It is left to somehow reduce a larger graph into a case like that, then we are done.</p> <p>Notice how we reduce the \\(N=6,r=2\\) case to \\(N=3,r=1\\) by pigeonhole? We can do it again! If we take \\(N\\) large enough, there will be more than \\(N_{r-1}\\) edges of the same color coming out from vertex \\(1\\). Then for the \\(N_{r-1}\\) other vertices in these edges, the edges between them cannot be of the same color, which reduces the coloring among them into \\(r-1\\) colors. Finally, we can get a monochromatic triangle in them following by our induction. Numerically, the large enough \\(N\\) is \\(N_r=r(N_{r-1}-1)+2\\). The readers can verify that this suffices for our pigeonhole to work.</p>"},{"location":"GTAC/1.%20Graph%20Coloring/#variations","title":"Variations","text":"<p>There are some more variations of this theorem, which can be proven by applying the pigeonhole principle inductively in a similar style as above.</p> <ul> <li>(Ramsey's Theorem) For every \\(k\\) and \\(r\\) there exist some integer \\(N=N(k,r)\\) such that if each edge of \\(K_N\\) is colored using one of the \\(r\\) colors, then there is a monochromatic \\(K_k\\).</li> <li>(Ramsey's Number) For every \\(r\\) and \\(b\\) there exist an integer \\(n=R(r,b)\\) such that if each edge of \\(K_N\\) is colored either blue or red, either a red monochromatic subgraph \\(K_r\\) or a blue monochromatic subgraph \\(K_b\\) exists.</li> </ul> <p>Though it is not difficult proving such integer exists, finding the exact Ramsey number is extremely hard and mathematicians have been working on this problem for decades! In fact, people still haven't found the value of \\(R(5,5)\\) though it has been proven to be no less than 43 (Geoffrey Exoo (1989)) and no greater than 48 (Angeltveit and McKay (2017)).</p>"},{"location":"GTAC/1.%20Graph%20Coloring/#ramseys-number","title":"Ramsey's number","text":"<p>We can use an idea similar to pigeonhole principle to set up an upper bound for Ramsey's number!</p> <p>Lemma: \\(R(s,t)\\le R(s,t-1)+R(s-1,t)\\)</p> <p>Proof: Suppose \\(n=R(s,t-1)+R(s-1,t)\\) and we pick a vertex \\(v\\) from the complete graph \\(K_n\\). we can classify the other vertices into two different sets \\(A\\) and \\(B\\), based on the color of the edge that connects them with \\(v\\) are red or blue. Let \\(a,b\\) be the size of the two sets, we have \\(a+b=n-1\\).</p> <p>If \\(a&lt; R(s,t-1)\\) and \\(b&lt;R(s-1,t)\\), then \\(a+b\\le R(s,t-1)-1+R(s-1,t)-1=n-2\\), contradiction!</p> <p>Thus, either \\(a\\ge R(s,t-1)\\) or \\(b\\ge R(s-1,t)\\), by induction we will have a red \\(K_s\\) clique or a blue \\(K_t\\) clique.</p> <p>Claim: \\(R(s,t)=R(t,s)\\)</p> <p>This claim should be quite straightforward by symmetry.</p> <p>Claim: \\(R(2,t)=t\\)</p> <p>(Upper bound on Ramsey's numbers): \\(R(s,t)\\le \\binom{s+t-2}{s-1}\\)</p> <p>Hint: Try applying the lemma and notice that</p> \\[ \\binom{n}{m}=\\binom{n-1}{m}+\\binom{n-1}{m-1} \\] <p>Proof: This holds when \\(s=1,2\\), and we can continue by induction. Suppose the upper bound holds for \\(s+t\\le k\\), then for \\(s+t=k+1\\):</p> \\[ R(s,t)\\le R(s-1,t)+R(s,t-1)\\le \\binom{k-2}{s-2}+\\binom{k-2}{s-1}=\\binom{k-1}{s-1}=\\binom{s+t-2}{s-1} \\] <p>Examples: Let's compute some upperbounds using our formula! We have </p> \\[ R(3,3)\\le R(2,3)+R(3,2)=\\binom{3+3-2}{3-1}=6 \\] <p>Remember the party of 6 people where we must have a friend group or a stranger group of 3? This inequality is exactly what we did to prove that thing! In fact, we have equality in this case.</p>"},{"location":"GTAC/1.%20Graph%20Coloring/#schurs-theorem","title":"Schur's theorem","text":"<p>We will end this blog with another problem that seems unrelated to graph theory at all.</p> <p>(Schur's Theorem) For every positive integer \\(r\\), there exists a possible integer \\(N=N(r)\\) such that each element of \\([N]\\) is colored using oe of \\(r\\) colors, then there is a monochromatic solution to \\(x+y=z\\) (\\(x,y,z\\) have the same color).</p> <p>Proof: Assume we have the coloring \\(\\phi\\), for \\([N]\\), then for each edge of a complete graph we color the edge \\((i,j)\\) with the color \\(\\phi(j-i)\\) when \\(i&lt;j\\).</p> <p>By Ramsey's Theorem, there is a monochromatic triangle, so there exist \\(i&lt;j&lt;k\\) such that</p> \\[ \\phi(j-i)=\\phi(k-j)=\\phi(k-i) \\] <p>Take \\(x = j-i,y=k-j,z=k-i\\), then \\(\\phi(x)=\\phi(y)=\\phi(z)\\) and \\(x+y=z\\). </p> <p>\"Now that we proved Schur\u2019s theorem, let us pause and think about what did we gain by translating the problem to graph theory? We were able to apply Ramsey\u2019s theorem, whose proof considers restrictions to subgraphs, which would have been rather unnatural if we had worked exclusively in the integers. Graphs gave us greater flexibility.\" - Yufei Zhao</p>"},{"location":"GTAC/1.%20Graph%20Coloring/#problems","title":"Problems","text":"<p>Show that \\(R(t,t) \\le 2^{2t}\\) . Then show that \\(R(t,t)\\ge 2^{t/2}\\) for \\(t\\ge 3\\).</p> <p>Hint: For the second bound, think about random coloring of the edges of \\(K_{2^{t/2}}\\) . Then estimate the probability of having no monochromatic \\(K_t\\) in our graph. This is an application of probablistic method in combinatorics, which we will talk more about in future blogs.</p> <p>(IMO 1964/4) \\(17\\) people correspond by mail with one another\u2014each one with all the rest. In their letters only \\(3\\) different topics are discussed. Each pair of correspondents deals with only one of these topics. Prove that there are at least \\(3\\) people who write to each other about the same topic.</p> <p>Hint 1: Generalize the definition of Ramsey's number to 3-color so we have \\(R(a,b,c)\\). What are we trying to prove in this problem?</p> <p>Hint 2: Try to get an upper bound for \\(R(a,b,c)\\) expressed by \\(R(a-1,b,c),R(a,b-1,c),R(a,b,c-1)\\).</p>"},{"location":"GTAC/2.%20Extremal%20Graph%20Theory/","title":"2. Extremal Graph Theory","text":"<p>An interesting question that mathematicians are curious about is the maximum number of edges in a n-vertex graph \\(G\\) that forbids some other graph \\(H\\). In other words, \\(G\\) cannot contain \\(H\\) as a subgraph.</p>"},{"location":"GTAC/2.%20Extremal%20Graph%20Theory/#mantels-theorem","title":"Mantel's Theorem","text":"<p>We may also start from the simplest question, what is the maximum number of edges in a n-vertex graph without any triangle? This is a foundational problem in extremal graph theory, where people study how the global properties of a graph influence local substructure.</p> <p>Hint: Try solving the case when \\(n=3,4,5\\). Do you see any pattern?</p> <p>(Mantel's Theorem): \\(K_{\\lfloor n/2\\rfloor,\\lceil n/2\\rceil}\\) has the most number of edges among all triangle-free graphs. So every \\(n\\)-vertex triangle-free graph has at most \\(\\lfloor n^2/4\\rfloor\\) edges.</p> <p>We will give two different proofs of Mantel's theorem and each illustrates a different technique in combinatorics. The proof requires some knowledge of Cauchy-Schwarz Inequality, which states that for any two list of real numbers \\(a_1,a_2,\\dots,a_n\\) and \\(b_1,b_2,\\dots,b_n\\), we have:</p> \\[ (a_1^2+a_2^2+\\cdots+a_n^2)(b_1^2+b_2^2+\\cdots+b_n^2)\\ge(a_1b_1+a_2b_2+\\cdots+a_nb_n)^2 \\] <p>It has many proofs but I will not show them here since it's unrelated to our topics. Feel free to read one of my previous blog post on Olympiad Inequalities, in which I discuss more about these inequalities.</p> <p>First Proof of Mantel's Theorem: Let \\(G=(V,E)\\) be a triangle-free graph with \\(n\\) vertices and \\(m\\) edges. For any edge \\((x,y)\\) in the graph, by the triangle-free condition, \\(x\\) and \\(y\\) don't have common neighbors, otherwise suppose \\(z\\) is the neighbor of \\(x\\) and \\(y\\), \\(x,y,z\\) will form a triangle.</p> <p> </p> <p>Thus, we have \\(\\deg x + \\deg y\\le n\\). Go through all the edges of \\(G\\) and sum this up, we get:  </p> <p>On the other hand, for each vertex \\(x\\), the term \\(\\deg x\\) appears for every edge \\((x,y)\\) in \\(E\\) in the above inequality. Thus, in total \\(\\deg x\\) appears \\(\\deg x\\) times:</p> \\[\\sum_{(x,y)\\in E}(\\deg x + \\deg y)=\\sum_{x\\in V}(\\deg x)^2\\le mn\\] <p>However, by Cauchy-Schwarz inequality we can also get: </p> \\[ n\\sum_{x\\in V}(\\deg x) ^2 =(1+1+\\cdots + 1)\\sum_{x\\in V}(\\deg x) ^2\\ge (\\sum_{x\\in V}\\deg x)^2=(2m)^2 \\] <p>Combine the above two inequalities,</p> \\[ (2m)^2/n\\le mn\\implies m\\le n^2/4 \\] <p>as desired.</p> <p>Second Proof of Mantel's Theorem: Let \\(v\\) be a vertex of maximum degree in the graph \\(G\\). For any \\(x,y\\) in the neighborhood \\(N(v)\\) of \\(v\\), \\(x\\) and \\(y\\) are not adjacent by the triangle-free condition.</p> <p></p> <p>Let \\(A=N(v),B=V\\setminus A\\). All the edges in \\(G\\) have an endpoint in \\(B\\) (because the two vertices of the edge cannot be both in \\(A\\)). By this relation, we have the following inequality:</p> \\[ m\\le \\sum_{x\\in B}\\deg x\\le |B|\\max_{x\\in V}\\deg x \\le |B||N(v)|\\le (\\dfrac{|A|+|B|}{2})^2= \\dfrac{n^2}{4} \\] <p>where the last \\(\\le\\) sign is derived by AM-GM inequality.</p> <p>Exercise: Can you prove Mantel's theorem by induction?</p> <p>Proof: I will show the induction proof when \\(n\\) is even, so \\(n=2k\\). The odd case works similarly and is left to the readers.</p> <p>When \\(k=1\\), every graph with two vertices has at most \\(1\\) edge so the claim holds.</p> <p>For \\(k &gt; 1\\), we can pick an edge \\((x,y)\\) in the graph and let \\(G'\\) denote the subgraph using the other vertices. </p> <ul> <li> <p>if \\(G'\\) has more than \\((k-1)^2\\) edges, then \\(G'\\) is not triangle-free by induction.</p> </li> <li> <p>Otherwise, for any vertex \\(v\\) in \\(G'\\), we cannot have \\((x,v)\\) and \\((y,v)\\) both in our graph by triangle-free condition. So the total number of edges in \\(G\\) is at most </p> \\[(k-1)^2+2(k-1)+1=k^2-2k+1+2k-2+1=k^2\\] </li> </ul> <p>Thus the claim holds for all even \\(n\\).</p> <p>Exercise: Prove that a graph with \\(n\\) vertices and \\(m\\) edges has at least</p> \\[ \\dfrac{4m}{3n}(m-\\dfrac{n^2}{4})\\quad\\text{triangles} \\] <p>Hint: We can count the number of triangles by the same method as what we did in the first proof.</p> <p>Proof: The number of triangles with the edge \\((x,y)\\) is at least \\(\\deg x + \\deg y - n\\). If we count this way, every triangle is counted three times since it has three edges. Thus, the lower bound of the number of triangles is:</p> \\[ \\frac 13\\sum_{(x,y)\\in E}(\\deg x + \\deg y-n)=\\frac13\\bigg(\\sum_{x\\in V}(\\deg x)^2-mn\\bigg) \\] <p>Apply Cauchy-Schwarz inequality and we get:</p> \\[ \\frac13\\bigg(\\sum_{x\\in V}(\\deg x)^2-mn\\bigg)\\ge \\frac{1}{3n}\\bigg(\\sum_{x\\in V}\\deg x\\bigg)^2-\\frac{mn}{3}=\\frac{4m^2}{3n}-\\frac{mn}{3}=\\frac{4m}{3n}(m-\\frac{n^2}{4}) \\]"},{"location":"GTAC/2.%20Extremal%20Graph%20Theory/#turans-theorem","title":"Tura\u0301n's Theorem","text":"<p>Tura\u0301n's theorem is the generalization of Mantel's theorem from triangles to larger cliques. It provides the answer to this question:</p> <p>What is the maximum number of edges in a \\(K_{r+1}\\)-free graph on \\(n\\) vertices?</p> <p>Note that for \\(r=2\\) our answer is Mantel's theorem and the graph we have is a bipartite graph with two parts with sizes as close as possible. It feels natural for us to hypothesize that:</p> <p>We call the complete \\(r\\)-partite graph with its \\(n\\) vertices distributed among its \\(r\\) parts as evenly as possible \\(T_{n,r}\\), also known as the Tura\u0301n's graph. More formally, for \\(n = ra+b,0\\le b&lt;r\\), and \\(a,b\\) are integers, we have \\(b\\) parts with size \\(a+1\\) and \\(r-b\\) parts with size \\(a\\) in \\(T_{n,r}\\). Below is an example of \\(T_{13,4}\\):</p> <p></p> <p>Tura\u0301n's theorem: The Turan's graph \\(T_{n,r}\\) is the unique \\(n\\)-vertex graph that maximizes the number of edges among all \\(K_{r+1}\\)-free graphs. </p> <p>Exercise: Assume that we have proven Tura\u0301n's theorem. Prove that</p> \\[ e(T_{n,r})\\le(1-\\dfrac1r)\\dfrac{n^2}2 \\] <p>where \\(e(G)\\) denotes the number of edges in a graph \\(G\\) and we have equality if and only if \\(n\\) is divisible by \\(r\\).</p> <p>Hint: We can use AM-GM to prove this, notice that \\(n\\) won't be divided in \\(r\\) equal parts when \\(n\\) is not divisible by \\(r\\).</p> <p>Lemma: \\(T_{n,r}\\) is the unique \\(n\\)-vertex \\(r\\)-partite graph with the maximum number of edges.</p> <p>Hint 1: We can prove by contradiction! Let's say we have a \\(n\\)-vertex \\(r\\)-partite graph with the maximum number of edges that is not \\(T_{n,r}\\), how can we adjust it to increase the number of edges?</p> <p>Hint 2: For \\(b-a\\ge 2\\), we have</p> \\[ (a+1)(b-1)=ab+(b-a-1)&gt;ab \\] <p>Proof: Suppose we have a \\(n\\)-vertex \\(r\\)-partite graph with the maximum number of edges. Then it should be a complete \\(r\\)-partite graph, otherwise we can add edges between its different parts.</p> <p>For any two vertex parts \\(A\\) and \\(B\\), if \\(|B|-|A|\\ge 2\\) we can apply the inequality in the previous hint and see it's better to move an vertex of \\(B\\) to \\(A\\). Thus, all \\(r\\) parts must have sizes within one of each other.</p> <p>There are also many proofs for Tura\u0301n's theorem. We will focus on a proof that is extended from our previous proof of Mantel's theorem. Mathematical induction plays an important role in this proof and other proofs!</p> <p>First proof of Tura\u0301n's theorem: We prove by induction on \\(r\\). When \\(r=1\\), this is trivial since a \\(K_2\\)-free graph is empty. Now assume that the theorem holds for every \\(n\\) for \\(r-1\\).</p> <p></p> <p>Let \\(G\\) be a \\(K_{r+1}\\)-free graph and \\(v\\) a vertex of maximum degree in \\(G\\). The neighborhood of \\(v\\) \\(A=N(v)\\) is \\(K_r\\)-free. By induction, we know that</p> \\[ e(A)\\le e(T_{|A|,r-1}) \\] <p>Let \\(B=V\\setminus A\\). Since \\(v\\) is a vertex of maximum degree, we have \\(\\deg x\\le \\deg v = |A|\\) for all \\(x\\in V\\). The number of edges with at least one vertex in \\(B\\) is:</p> \\[ e(A,B) + e(B)\\le \\sum_{x\\in B}\\deg x \\le |B|\\max_{x\\in B}\\deg x\\le |A||B| \\] <p>Thus</p> \\[ e(G)=e(A) + e(A,B) + e(B)\\le e(T_{|A|,r-1}) + |A||B|\\le e(T_{n,r}) \\] <p>the final equality follows from that \\(e(T_{|A|,r-1}) + |A||B|\\) is the number of edges in a \\(r\\)-partite graph with \\(n\\) vertices and our previous lemma.</p> <p>What we are curious about in this chapter is generally how big an \\(n\\)-vertex \\(H\\)-free graph \\(G\\) can be. Thus, we develop a notation \\(ex(n,H)\\) as the maximum number of edges in \\(G\\). We are curious about how \\(ex(n,H)\\) grows as \\(n\\to \\infty\\), which leads to extremal graph theory.</p>"},{"location":"GTAC/2.%20Extremal%20Graph%20Theory/#problems","title":"Problems","text":"<p>Every graph \\(G\\) with average degree \\(d\\) contains a subgraph \\(H\\) such that all vertices of \\(H\\) has degrees at least \\(d/2\\).</p> <p>Hint: Delete the vertices with degree less than \\(d/2\\) until the graph meets our condition. Why does this guarantee a solution?</p> <p>Prove Tura\u0301n's theorem by induction on \\(n\\).</p> <p>Hint: For an \\(n\\)-vertex \\(K_{r+1}\\)-free graph \\(G\\) with the maximum number of edges, \\(G\\) contains \\(K_r\\) as a subgraph. Let \\(A\\) be the vertex set of a \\(K_r\\) in \\(G\\) and \\(B=V\\setminus A\\).</p> <p>(KST Theorem) For positive integers \\(s\\le t\\), there exist some constant \\(C\\) such that for all \\(n\\):</p> \\[ ex(n,K_{s,t})\\le Cn^{2-1/s} \\] <p>Hint: Let \\(X\\) be the number of \\(K_{s,1}\\) in \\(G\\). Count \\(X\\) in two different ways to show that:</p> \\[ X=\\sum_{x\\in V}\\binom{\\deg x}{s}\\le \\binom{n}{s}(t-1) \\] <p>(IMO 1992/3): Consider \\(9\\) points in space, no four of which are coplanar. Each pair of points is joined by an edge (that is, a line segment) and each edge is either colored blue or red or left uncolored. Find the smallest value of \\(n\\) such that whenever exactly \\(n\\) edges are colored, the set of colored edges necessarily contains a triangle all of whose edges have the same color.</p> <p>Hint 1: Rephrase it in the language of graph theory and make connections to the theorems we have learned.</p> <p>Hint 2: Apply Tura\u0301n's Theorem and Ramsey's number \\(R(3,3)=6\\).</p> <p>Let \\(T\\) be a tree with \\(t\\) edges. Prove that every graph \\(G\\) with average degree at least \\(2t\\) contains \\(t\\) as a subgraph.</p>"},{"location":"GTAC/3.%20Probablistic%20methods/","title":"3. Probablistic methods","text":"<p>This time we will dive into probability, a topic that seems unrelated to graph theory but sometimes is extremely useful in proofs and analysis. </p>"},{"location":"GTAC/3.%20Probablistic%20methods/#definitions","title":"Definitions","text":"<p>A random variable is just a variable that we take very randomly. For example, the outcome of rolling a standard six-sided dice and the outcome of a coin toss are both random variables.</p> <p>We denote the probability that certain event \\(A\\) will happen as \\(P(A)\\) . For instance, if \\(D_6\\) is the outcome of rolling a regular dice, then</p> \\[P(D_1=1)=P(D_2=2)=\\cdots =P(D_6=6)=\\frac16\\] <p>Or if we know that some event will never happen, such as rolling a 7 on a regular dice, then we say \\(P(D_6=7)=0\\).</p> <p>If we rolled a regular dice infinitely many times, what will we expect to get as an average of our outcome? This value is the expected value \\(E[X]\\) of a random variable \\(X\\). A formal way to say it is:</p> \\[ E(X)=\\sum_{x}P(X=x)\\cdot x \\] <p>In our previous example, </p> \\[ E(D_6)=\\frac16\\cdot1+\\frac16\\cdot2+\\cdots+\\frac16\\cdot6=3.5 \\] <p>In statistics and probability theory, variance is a measure of dispersion from the average value. It is calculated by taking the sum of the square of the differences between each number in a data set and the average value. If we have a data set with \\(n\\) values \\(x_1,x_2,\\dots,x_n\\), then the variance is </p> \\[ \\frac{\\sum(x_i-\\bar{x})^2}{n} \\] <p>We can generalize this notion for a random variable \\(X\\), </p> \\[ \\text{Var}(X) =E(|X-E(X)|^2)=E(|X|^2)-E(|X|)^2 \\] <p>Exercises:</p> <ol> <li>What is the expected value of flippinga coin if we say head is 1 and tail is 0?</li> <li>What is the expected value of the sum of the outcome of 2 coins? 3 coins? What patterns do you find?</li> <li>What is the variance of the outcome of a standard dice?</li> </ol> <p>We say two events \\(A\\) and \\(B\\) are independent of each other, if \\(A\\)'s outcome doesn't affect \\(B\\)'s outcome. Similarly, we say two random variables are independent if their values don't affect each other. For example, getting a head on your first flip does not mean you will get a head on your second flip. More formally:</p> \\[ P(A\\cap B)=P(A)P(B) \\] <p>It means that the probability of both event happening is equal to the probability of \\(A\\) multiplies the probability of \\(B\\). For example, the probability of getting two heads in a row is \\(0.5\\times 0.5=0.25\\). </p> <p>Denote \\(P(A|B)\\) as the probability of \\(A\\) when we know that \\(B\\) occurs. This is called the conditional probability. It is defined as:</p> \\[ P(A|B) = \\frac{P(A\\cap B)}{P(B)} \\] <p>This requires \\(P(B) &gt; 0\\), otherwise this event will never happen and thus \\(P(A|B)\\) is undefined. When \\(A\\) and \\(B\\) are independent, we have \\(P(A|B)=P(A)\\) , since it doesn't matter if \\(B\\) happens or not.</p> <p>Let's see some examples for conditional probability:</p> <ol> <li>Alice rolled two dices in a row and she got no greater than 3 in her first roll. What is the probability that she will get a sum of 10?</li> <li>If in a school there are \\(40\\%\\) boys and \\(60\\%\\) girls, and \\(10\\%\\) of the students are in the school's track-and-field team. If \\(5\\%\\) of all the boys are in the track-and-field team, what's the percentage of girls that are in the team? What's the percentage of the team that are girls?</li> </ol> <p>By the definition of conditional probability we are able to get a famous theorem in probability theory and statistics:</p>"},{"location":"GTAC/3.%20Probablistic%20methods/#bayes-theorem","title":"Bayes Theorem","text":"<p>(Bayes Theorem) Let \\(A,B\\) be two events, </p> \\[ P(A|B)=\\frac{P(B|A)\\cdot P(A)}{P(B)} \\] <p>Here's a nice video made by 3Blue1Brown, a famous math youtuber, if you would like to understand Bayes Theorem in further details.</p>"},{"location":"GTAC/3.%20Probablistic%20methods/#markovs-inequality","title":"Markov's Inequality","text":"<p>(Markov's Inequality) Let \\(X\\) be a non-negative random variable. Then for any positive real \\(\\lambda &gt;0\\),</p> \\[ P(X\\ge \\lambda)\\le \\frac{E(X)}{\\lambda} \\] <p>Proof: This should be quite straightforward by using the definition of expected value. We have</p> \\[ E(X)=\\sum_{x}x\\cdot P(X=x)\\ge \\sum_{x\\ge \\lambda}x\\cdot P(X=x)\\ge \\lambda\\cdot P(X\\ge \\lambda) \\] <p>Intuitively, this suggests that \\(X\\) is not likely to be a lot higher than \\(E(X)\\). For example, if the average grade on AP calculus final exam is 70%, we would know that the upper bound of students getting higher than 90% is</p> \\[ P(X\\ge 90)\\le \\frac{E[X]}{90}=\\frac79\\approx77.8\\% \\] <p>However, the equality holds only when actually \\(7/9\\) of the class is getting exactly 90% and \\(2/9\\) is getting zero, which is rare in real life situations. How do we improve our inequality?</p>"},{"location":"GTAC/3.%20Probablistic%20methods/#chebyshevs-inequality","title":"Chebyshev's Inequality","text":"<p>(Chebyshev's Inequality) Let \\(X\\) be any random variable with finite expected value and variance. For every positive real number \\(a\\),</p> \\[ P(|X-E(X)|\\ge a)\\le \\frac{\\text{Var}(X)}{a^2} \\] <p>This is actually an extension of Markov's inequality.</p> <p>Proof: Let \\(Y=(X-E(X))^2\\), then \\(Y\\) is a non-negative random variable with \\(E(Y)=\\text{Var}(X)\\) by definition. By Markov's inequality:</p> \\[ P(Y\\ge a^2)\\le \\frac{E(Y)}{a^2}=\\frac{\\text{Var}(X)}{a^2} \\] <p>The event \\(Y\\ge a^2\\) is equivalent to \\(|X-E(X)|\\ge a\\), thus the original inequality holds.</p> <p>Chebyshev's inequality gives a bound on the probability that \\(X\\) is far from \\(E[X]\\).</p>"},{"location":"GTAC/3.%20Probablistic%20methods/#linearity-of-expectations","title":"Linearity of Expectations","text":"<p>Linearity of expectations is the property that the expected value of the sum of random variables is equal to the sum of their individual expected values, regardless of whether they are independent. Take one of the previous exercises as an example, we have already seen that the expected value of the sum of \\(n\\) coins is \\(n/2\\). Formally, the theorem states:</p> <p>For random variables \\(X\\) and \\(Y\\), </p> \\[ E(X+Y)=E(X) + E(Y) \\] <p>More generally, for \\(n\\) random variables \\(X_1,X_2,\\dots,X_n\\),</p> \\[ E(\\sum_{i=1}^n X_i) = \\sum_{i=1}^n E(X_i) \\] <p>Proof: By definition,</p> \\[ \\begin{aligned} E(X+Y) &amp;=\\sum_{x}\\sum_{y}(x+y)P(X=x,Y=y)\\\\ &amp;= \\sum_{x}\\sum_{y}xP(X=x,Y=y) + \\sum_{x}\\sum_{y}yP(X=x,Y=y)\\\\ &amp;= \\sum_{x}x\\cdot P(X=x)+\\sum_{y}y\\cdot P(Y=y)\\\\ &amp;= E(X) + E(Y) \\end{aligned} \\] <p>This proof can be generalized to \\(n\\) variable by induction.</p> <p>Remark: By exercise \\(1\\), we should be able to see that </p> \\[ E(c_1X_1+c_2X_2+\\cdots+c_nX_n)=c_1E(X_1) + c_2E(X_2)+\\cdots + c_nE(X_n) \\] <p>Exercises: </p> <p>Prove another property of linearity, where \\(c\\) is any real number and \\(X\\) is a random variable:</p> \\[ E(c\\cdot X)=c\\cdot E(X) \\] <p>One may wonder if linearity holds for variance. Prove that for two independent random variables \\(X,Y\\), we have</p> \\[ \\text{Var}(X+Y) = \\text{Var}(X)+\\text{Var}(Y) \\] <ol> <li> <p>In a party, there are \\(n\\) people who are assigned a name tag. They now decide to shuffle their name tags randomly and give each person a name tag back. Let \\(S\\) be the number of people that have got their name tag. Find \\(E[S]\\).</p> </li> <li> <p>Let \\(S\\) be \\(0.abcabcabc\\dots\\), where \\(a,b,c\\) are integers chosen uniformly at random from \\(0\\) to \\(9\\). What is the expected value of \\(S\\)?</p> </li> </ol>"},{"location":"GTAC/4.%20Structure%20of%20set%20addition/","title":"4. Structure of set addition","text":""},{"location":"GTAC/4.%20Structure%20of%20set%20addition/#sum-set","title":"Sum set","text":"<p>Given two finite sets of \\(A\\) and \\(B\\) of elements in an abelian group. We define their sumset to be</p> \\[ A+B=\\{a+b|a\\in A,b\\in B\\} \\] <p>Additive combinatorics is an area of combinatorics in mathematics. A fundamental problem in this field is the inverse sum set problem: if \\(A+B\\) is small, what can we say about \\(A\\) and \\(B\\) ? A more specific question one may raise is: if \\(A\\) is a finite non-empty set such that \\(|A + A| = K|A|\\) for some small number \\(K\\), what can one say about \\(A\\) ?</p> <p>First, we would like to clarify some notations:</p> <ul> <li>Given a positive integer \\(k\\), we define the iterated sumset</li> </ul> \\[ kA = A + \\cdots + A\\quad (k\\text{ times}) \\] <p>This is different from dilating a set, which is denoted by </p> \\[ \\lambda\\cdot A = \\{\\lambda a | a\\in A\\} \\] <p>Similar to the sumset, we can define the difference set</p> \\[ A-B= \\{a-b|a\\in A,b\\in B\\} \\] <p>First, how small or large can \\(A+A\\) be given \\(|A|\\) ? We have a trivial estimation for this:</p> <p>Proposition 1: Let \\(A,B\\) be two sets in the same abelian group \\(Z\\), let \\(x\\in Z\\). Then we have the identity \\(|A + x| = |-A|=|A|\\), the inequalities</p> \\[ \\max(|A|,|B|)\\le |A-B|,|A + B|\\le |A||B| \\] <p>and the inequalities</p> \\[ |A|\\le |A + A|\\le \\frac{|A|(|A| + 1)}{2} \\] <p>Moreover, if \\(A,B\\) are sets of integers, we can say that</p> \\[ |A+B|\\ge |A| + |B| - 1 \\] <p>Proof: For the first identity, we see that \\(A+x = \\{a+x |a\\in A\\}\\) is a translation of the original set \\(A\\), thus their size must be equal. We can see why \\(|A+ B|\\ge |A|\\) based on this identity, and the upper bound of \\(|A+B|\\) comes from counting all possible pairs of \\((a,b)\\) such that \\(a\\in A,b\\in B\\).</p> <p>The upper bound of \\(|A+A|\\) follows from that there are in total \\(\\binom{|A|}{2}\\) numbers of unordered pairs of elements in \\(A\\). </p> <p>Interestingly, for \\(A,B\\subset \\mathbb Z\\), we can sort the elements of \\(A\\) and \\(B\\) in increasing order like</p> \\[ a_1&lt; a_2&lt;\\cdots &lt; a_n,b_1&lt;b_2&lt;\\cdots &lt; b_m \\] <p>then</p> \\[ a_1+b_1&lt;a_2+b_1&lt;\\cdots &lt; a_n + b_1 &lt; a_n + b_2&lt; \\cdots &lt; a_n + b_m \\] <p>are \\(n +m - 1=|A| + |B| - 1\\) distinct elements in \\(A+B\\).</p> <p>We also want to quantify our measure when talking about \\(|A+A|\\) is not too much larger than \\(|A|\\). A good way to do this is defining the ratio of their size, called doubling constant \\(\\sigma[A]\\):</p> \\[ \\sigma[A] = \\frac{|A+A|}{|A|} \\]"},{"location":"GTAC/4.%20Structure%20of%20set%20addition/#ruzsa-triangle-inequality","title":"Ruzsa triangle inequality","text":"<p>Relating to sizes of sumsets, mathematicians have developed some basic and useful inequalities.</p> <p>(Ruzsa triangle inequality) If \\(A,B,C\\) are finite subsets of an abelian group, then</p> \\[ |A||B-C|\\le |A-B||A-C| \\] <p>Proof: For any element \\(d\\in B -C\\), we fix a choice of \\(b\\in B\\) and \\(c\\in C\\) such that \\(b-c=d\\) to represent it. Then we can map any element \\((a,b-c)\\in A\\times (B-C)\\) to an element \\((x,y)=(a-b,a-c)\\in(A-B)\\times (A-C)\\). This is injective, since we can get back \\(d\\) by taking \\(d=y-x\\) and then \\(a=x + b\\).</p> <p>Remark: By replacing \\(B\\) with \\(-B\\) or/and \\(C\\) with \\(-C\\), we can get other additional inequalities with similar forms:</p> \\[ \\begin{aligned} |A||B+C|\\le |A+B||A-C|\\\\ |A||B+C|\\le |A-B||A+C|\\\\ |A||B-C|\\le |A+B||A+C|\\\\ \\end{aligned} \\] <p>It might not be clear why this is called a triangle inequality. Well, if we define the Ruzsa distance between two finite sets \\(A,B\\) as</p> \\[ d(A,B) =\\log \\frac{|A-B|}{\\sqrt{|A||B|}} \\] <p>Then the theorem can be rewritten as</p> \\[ d(A,B) + d(A,C)\\le d(B,C) \\] <p>However, we do understand that the function \\(d\\) is not a metric measure because \\(d(A,A)\\ne 0\\).</p>"},{"location":"GTAC/4.%20Structure%20of%20set%20addition/#plunneckes-inequality","title":"Plu\u0308nnecke\u2019s inequality","text":"<p>If we have sets \\(A,B\\) such that \\(A+B\\) is not much bigger than \\(A\\), what can we say about the bound of the size of iterated sumsets of \\(B\\)?</p> <p>(Plu\u0308nnecke\u2019s inequality) Let \\(A,B\\) be finite subsets of an abelian group satisfying</p> \\[ |A+B|\\le K|A| \\] <p>then for all non-negative integers \\(m,n\\),</p> \\[ |mB - nB|\\le K^{m+n}|A| \\] <p>The following lemma bounds the expansion ratio, which is quite important in our proof.</p> <p>Lemma: Let \\(X\\) and \\(B\\) be two finite sets in an abelian group with \\(|X| &gt; 0\\). Suppose for all \\(Y\\subset X\\),</p> \\[ \\frac{|Y+B|}{|Y|}\\ge\\frac{|X + B|}{|X|} \\] <p>Then for any nonempty finite subsets \\(C\\) of the abelian group,</p> \\[ \\frac{|X+C+B|}{|X+C|}\\le\\frac{|X+ B|}{|X|} \\] <p>Proof: We can proceed by induction on the size of \\(C\\). When \\(|C|=1\\), \\(|X+C+B|=|X+B|,|X+C|=|X|\\), so the statement holds. For our convenience, say \\(K=|X+B|/|X|\\) .</p> <p>For the induction step, assume that we have some \\(C\\) such that the lemma is true. We consider the set \\(C'=C\\cup\\{c\\}\\) for some \\(c\\notin C\\). It suffices to prove that the ratio between the number of elements we add in \\(X+C'+B\\) and the number of elements we add in \\(X+C'\\) satisfies the condition. More formally,</p> \\[ |(X+c+B)\\setminus(X+C+B)|\\le K|(X+c)\\setminus(X+C)| \\] <p>Let</p> \\[ Y=\\{x\\in X| x+c +B\\subset x + C+ B\\} \\] <p>be a subset of \\(X\\). Since \\(|X+c+B|=|X+B|\\), the size of the increment is bounded by the number of overlapping elements in set \\(X+c+B\\) and \\(X+C+B\\).</p> \\[ |(X+c+B)\\setminus(X+C+B)|\\le |X+B|-|Y+B| \\] <p>Moreover, if \\(x\\in X\\) satisifes \\(x+c\\in X+C\\), then \\(x+c+B\\subset x+C+B\\) and hence \\(x\\in Y\\). So we have</p> \\[ |(X+c)\\setminus(X+C)|\\ge |X| - |Y| \\] <p>Combining previous results, it suffices to show that</p> \\[ |X+B|-|Y+B|\\le K(|X|-|Y|)=|X+B|-K|Y| \\] <p>which can be rewritten as</p> \\[ \\frac{|Y+B|}{|Y|}\\ge K=\\frac{|X+B|}{|X|} \\] <p>which is clearly true based on our hypothesis.</p> <p>We call \\(|X+B|/|X|\\) the expansion ratio of a set \\(X\\). Next, we can apply this lemma to prove our inequality. </p> <p>Proof: First, we want to choose some suitable sets so we can apply our lemma. Choose \\(X\\) among all the non-empty subsets of \\(A\\) with the minimum expansion ratio. Hence, the condition in the lemma is satisfied. We also have</p> \\[ \\frac{|X+B|}{|B|}\\le \\frac{|A+B|}{|A|}\\le K \\] <p>apply our lemma with \\(C=nB\\), then</p> \\[ \\frac{|X+(n+1)B|}{|X+nB|}\\le \\frac{|X+B|}{|B|}\\le K \\] <p>Induction on \\(n\\) yields</p> \\[ |X+nB|\\le K^n|X| \\] <p>Finally, we can apply Ruzsa triangle inequality for all \\(m,n\\ge 0\\):</p> \\[ |mB -nB|\\le \\frac{|X+mB||X+nB|}{|X|}\\le K^{m+n}|X|\\le K^{m+n}|X| \\]"},{"location":"Math/Cauchy%27s%20Theorem%20and%20Sylow%20Theorems/","title":"Cauchy's Theorem and Sylow Theorems","text":"<p>(Cauchy's Theorem) For a finite group \\(G\\) and a prime number \\(p\\) that divides the order of \\(G\\) (the number of element in \\(G\\)), then there exists an element of order \\(p\\) in \\(G\\). That is, an element \\(x\\) such that the smallest positive integer \\(n\\) with \\(x^n=e\\) is \\(p\\).</p> <p>Proof:</p> <p>We define a set </p> \\[ S=\\{(x_1,\\dots,x_p)\\in G^p|x_1x_2\\cdots x_p=e\\} \\] <p>We see that any element in \\(S\\) is uniquely determined by the first \\(p-1\\) components, since</p> \\[ x_p=(x_1x_2\\cdots x_{p-1})^{-1} \\] <p>Thus,</p> \\[ |S|=|G|\\times |G|\\times\\cdots\\times |G|=|G|^{p-1} \\] <p>Moreover, notice that \\(aa^{-1}=a^{-1}a=e\\) for all \\(a\\in G\\). For \\((x_1,x_2,\\dots,x_p)\\) in \\(S\\),</p> \\[ x_2x_3\\cdots x_p x_1=x_1^{-1}x_1=e\\implies (x_2,x_3,\\dots,x_p,x_1)\\in S \\] <p>We can see this as cyclicly permuting the components of \\(x\\in S\\). By the orbit-stabilizer Theorem, orbits in \\(S\\) under this action have size \\(1\\) or \\(p\\). The former one only occurs for tuples \\((x,x,\\dots,x)\\in S\\) such that \\(x^p=e\\).</p> <p>We count the number of elements of \\(S\\) by orbits, then we know that the number of \\(x\\in G\\) such that \\(x^p=e\\) has to be divisble by \\(p\\). Since \\(x=e\\) is one such element, we know that there must be at least \\(p-1\\) other elements as solutions for \\(x\\). They all have order \\(p\\) and this completes the proof.</p> <p>(Sylow Theorems)</p> <p>1, A finite group \\(G\\) whose order \\(|G|\\) is divisible by \\(p^k\\) has a subgroup of order \\(p^k\\).</p> <p>We can apply a similar idea to prove this theorem.</p> <p>Proof:</p> <p>Let \\(|G|=p^km=p^{k+r}u\\) such that \\(p\\nmid u\\). Let \\(S\\) denote the set of subsets of \\(G\\) with size \\(p^k\\). \\(G\\) acts on \\(S\\) by left multiplication, for \\(g\\in G\\) and \\(s\\in S\\), </p> \\[ g\\cdot s=\\{gx|x\\in s\\} \\] <p>For a given set \\(s\\in S\\), define its stabilizer subgroup </p> \\[ G_s=\\{g\\in G|g\\cdot s = s\\} \\] <p>and its orbit</p> \\[ Gs=\\{g\\cdot s|g\\in G\\} \\] <p>It suffices to show that there exist some \\(s\\) such that \\(|G_s|=p^k\\) since \\(G_s\\) is a subgroup of \\(G\\). This is the maximal possible size of \\(G_s\\), since for any fixed element \\(\\alpha\\in s\\subseteq G\\), the right coset \\(G_s\\alpha\\) is a subset of \\(s\\). Hence</p> \\[ |G_s|=|G_s\\alpha|\\le |s|=p^k \\] <p>By the orbit-stabilizer theorem, we have</p> \\[ |G_s||Gs| = |G|=p^{k+r}u \\] <p>for all \\(s\\in S\\). Define \\(v_p(n)\\) as the largest non-negative integer \\(k\\) such that \\(p^k|n\\). If we count the number of factors of \\(p\\) on both sides, we get</p> \\[ v_p(|G_s|) + v_p(|Gs|) = v_p(|G|)=k+ r \\] <p>This implies that when \\(v_p(|G_s|)&lt; k\\) we have \\(v_p(|Gs|) &gt; k+r-k=r\\). Notice that in order to have \\(v_p(|G_s|)=k\\), one would have \\(|G_s|=p^k\\), which are the ones we are looking for.</p> <p>Now we count the number of elements in \\(S\\) in two ways. By basic combinatorics, we know that</p> \\[ |S|=\\binom{p^km}{p^k} \\] <p>and \\(|S|\\) is also the sum of \\(|Gs|\\) over all distinct orbits \\(Gs\\). By Kummer's theorem we get</p> \\[ v_p(|S|)=r \\] <p>If we don't have any \\(s\\) such that \\(|G_s|=p^k\\), then all \\(s\\in S\\) have orbit \\(Gs\\) with \\(v_p(|Gs|) &gt; r\\). The sum of them contradicts with \\(v_p(|S|)=r\\), completing the proof!</p>"},{"location":"Math/Cauchy-Davenport%20Theorem/","title":"Cauchy Davenport Theorem","text":"<p>Recently when I was solving some random math olympiad problems, I found this interesting theorem and decide to share it.</p> <p>Given two sets \\(A,B\\) , define</p> \\[ A+B=\\{a+b|a\\in A,b\\in B\\} \\] <p>If the two sets are defined over real numbers, we can prove that</p> \\[ |A+B|\\ge |A|+|B|-1 \\] <p>It is not difficult to show that this is true, as we are able to order the elements in \\(A\\) and \\(B\\) as \\(a_1&lt;a_2&lt;\\cdots&lt;a_n,b_1&lt;b_2&lt;\\cdots&lt;b_m\\) . Then</p> \\[ a_1+b_1&lt;a_1+b_2&lt;\\cdots&lt;a_1+b_m&lt;a_2+b_m&lt;\\cdots&lt;a_n+b_m \\] <p>Thus, there are at least \\(n+m-1\\) elements in \\(A+B\\) ! The equality holds only when \\(A,B\\) are arithmetic sequences with the same common difference. The original theorem states the inequality when \\(A,B\\) are in a cyclic group with prime order \\(\\mathbb{Z}/{p\\mathbb{Z}}\\) .</p> \\[ |A+B|\\ge \\min\\{p,|A|+|B|-1\\} \\] <p>Lemma 1: If \\(G\\) is a finite abelian group and \\(A,B\\) are nonempty subsets of \\(G\\) such that \\(|A|+|B|&gt; |G|\\), then \\(A+B=G\\) .</p> <p>Proof: This is equivalent to proving that for any \\(g\\in G\\) , there exist \\(a\\in A,b\\in B\\) such that \\(a+b=g\\). Define \\(g-B=\\{g-b|b\\in B\\}\\) , then \\(|g-B|=|B|\\) . We now have \\(|A|+|g-B|&gt;|G|\\) . Thus \\(A\\cap g-B\\ne\\emptyset\\) , pick \\(a\\in A\\cap g-B\\) , we get a solution for \\(a+b=g\\) .</p>"},{"location":"Math/Group%20action%2C%20orbits%2C%20and%20stabilizers/","title":"Group action, orbits, and stabilizers","text":""},{"location":"Math/Group%20action%2C%20orbits%2C%20and%20stabilizers/#group-action","title":"Group action","text":"<p>Definition: If \\(G\\) is a group with identity element \\(e\\), and \\(X\\) is a set, then a group action \\(\\alpha\\) of \\(G\\) on \\(X\\) is a function</p> \\[ \\alpha: G\\times X\\to X \\] <p>that satisfies two axioms for all \\(g,h\\in G,x\\in X\\):</p> <ul> <li>identity: \\(\\alpha(e,x)= x\\)</li> <li>compatibility \\(\\alpha(g,\\alpha(h,x))=\\alpha(gh,x)\\)</li> </ul> <p>with \\(\\alpha(g,x)\\) often shortened to \\(gx\\) or \\(g\\cdot x\\) when there's no ambiguity of the action being considered in the context. The group \\(G\\) is said to act on \\(X\\); a set \\(X\\) together with the action of \\(G\\) is called a \\(G\\)-set.</p> <p>From these two axioms, we know that the function that maps \\(x\\) to \\(g\\cdot x\\) is a bijection, since we have the inverse map \\(g^{-1}\\) such that \\(g^{-1}\\cdot (g\\cdot x)=x\\).</p>"},{"location":"Math/Group%20action%2C%20orbits%2C%20and%20stabilizers/#orbits-and-stabilizers","title":"Orbits and stabilizers","text":"<p>Consider a group \\(G\\) acting on a set \\(X\\).</p> <p>Definition: The orbit of an element \\(x\\in X\\) is the set of elements in \\(X\\) which \\(x\\) can be moved to through the group action, denoted by \\(G\\cdot x\\):</p> \\[ G\\cdot x=\\{g\\cdot x|g\\in G\\} \\] <p>Proposition: If and only if there exists a \\(g\\in G\\) such that \\(g\\cdot x =y\\) for \\(x,y\\in X\\), we say that \\(x\\sim y\\). This is an equivalence relation.</p> <p>Proof:</p> <ul> <li>Reflectivity: $e\\cdot x = x\\implies x\\sim x $</li> <li>Symmetry: \\(x\\sim y\\implies g\\cdot x = y\\implies x=g^{-1}\\cdot y\\implies y\\sim x\\)</li> <li>Transitivity: \\(x\\sim y\\land y\\sim z\\implies g\\cdot x = y,h\\cdot y=z\\implies h\\cdot(g\\cdot x) =(hg)\\cdot x=z\\implies x\\sim z\\)</li> </ul> <p>This proposition implies that the set of orbits of \\(X\\) under the group action \\(G\\) forms a partition of \\(X\\).</p> <p>Definition: Given \\(g\\in G\\) and \\(x\\in X\\) with \\(g\\cdot x =x\\), we say \\(x\\) is fixed under the action of \\(g\\). For every \\(x\\in X\\), its stabilizer in \\(G\\) is the set of all elements \\(g\\in G\\) that fixes \\(x\\), denoted as \\(G_x\\):</p> \\[ G_x=\\{g\\in G|g\\cdot x = x\\} \\] <p>The stabilizer is more often called a stabilizer subgroup! Indeed, we can prove this by verifying the conditions:</p> <p>For \\(g\\in G_x\\), we have </p> \\[ x=e\\cdot x=(g^{-1}g)\\cdot x =g^{-1}\\cdot(g\\cdot x)=g^{-1}\\cdot x \\] <p>Thus \\(g^{-1}\\in G_x\\).</p> <p>The identity element \\(e\\) is clearly in \\(G_x\\) since \\(e\\cdot x =x\\).</p> <p>For \\(g,h\\in G_x\\),</p> \\[ gh\\cdot x =g\\cdot(h\\cdot x)=g\\cdot x =x\\implies gh\\in G_x \\] <p>Thus, \\(G_x\\) is a subgroup of \\(G\\).</p>"},{"location":"Math/Group%20action%2C%20orbits%2C%20and%20stabilizers/#orbit-stabilizer-theorem","title":"Orbit-stabilizer theorem","text":"<p>Theorem: For a finite group \\(G\\) acting on a set \\(X\\) and any element \\(x\\in X\\). </p> \\[ |G\\cdot x| = [G:G_x] =\\frac{|G|}{|G_x|} \\] <p>Proof: For a fixed \\(x\\in X\\), consider the map \\(f:G\\to X\\) given by mapping \\(g\\) to \\(g\\cdot x\\). By definition, the image of \\(f(G)\\) is the orbit of \\(G\\cdot x\\). If two elements \\(g,h\\in G\\) have the same image:</p> \\[ f(g)=f(h)\\Longleftrightarrow g\\cdot x =h\\cdot x\\Longleftrightarrow g^{-1}h\\cdot x = x\\Longleftrightarrow g^{-1}h\\in G_x\\Longleftrightarrow h\\in gG_x \\] <p>In other words, \\(f(g)=f(h)\\) if and only if they are in the same coset for the stabilizer subgroup \\(G_x\\). Hence, \\(f\\) induces a bijection between the set \\(G/G_x\\) of cosets and the orbit \\(G\\cdot x\\) which sends \\(gG_x\\mapsto g\\cdot x\\). Combining the bijection with lagrange theorem gives orbit-stabilizer theorem as desired.</p>"},{"location":"Math/Group%20action%2C%20orbits%2C%20and%20stabilizers/#burnsides-lemma","title":"Burnside's Lemma","text":"<p>This is a lemma useful in taking account of symmetry when counting mathematical objects. It can be proven by orbit-stabilizer theorem and we will show that in later sections.</p> <p>Theorem: Let \\(G\\) be a finite group acting on a set \\(X\\). For each \\(g\\in G\\), let \\(X^g\\) denote the set of elements in \\(X\\) that are fixed by \\(g\\):</p> \\[ X^g=\\{x\\in X|g\\cdot x = x\\} \\] <p>Burnside's lemma provides a formula for the number of orbits, denoted by \\(X/G\\):</p> \\[ |X/G| = \\frac{1}{|G|}\\sum_{g\\in G}|X^g| \\]"},{"location":"Math/Group%20action%2C%20orbits%2C%20and%20stabilizers/#examples","title":"Examples","text":"<p>First, we want to see how we can apply it in real life. Suppose we want to see how many ways we can color a cube with 3 colors, it would be simply \\(3^6=729\\) ways. However, what if two colorings are essentially the same after some rotations?</p> <p>Let \\(X\\) be the set of all \\(3^6\\) color combination and \\(G\\) be the rotational symmtery group of the cube acting on \\(X\\) in the natural manner. There are \\(6\\times 4= 24\\)  elements in \\(G\\).</p> <p>Then two elements of \\(X\\) belong to the same orbit if one can be rotated to the other. Hence, we are finding the number of orbits! Now, it suffices to calculate \\(X^g\\) for all \\(g\\in G\\):</p> <ul> <li>the identity element fixes all elements of \\(X\\).</li> <li>six 90-degree face rotations, each fixes \\(3^3\\) elements of \\(X\\).</li> <li>three 180-degree face rotations, each fixes \\(3^4\\) elements of \\(X\\).</li> <li>eight vertex rotations, each fixes \\(3^2\\) elements of \\(X\\).</li> <li>six edge flip, each fixes \\(3^3\\) elements of \\(X\\).</li> </ul> <p>Hence, the average fix size is</p> \\[ \\frac1{24}(3^6+6\\times 3^3+3\\times 3^4+8\\times 3^2+6\\times 3^3)=57 \\] <p>Finally, how do we prove this lemma?</p> <p>Proof: First, we would like to re-express the sum over group elements \\(g\\in G\\) as an equivalent sum over elements \\(x\\in X\\):</p> \\[ \\sum_{g\\in G}|X^g|=|\\{(g,x)\\in G\\times X|g\\cdot x = x\\}|=\\sum_{x\\in X}|G_x| \\] <p>By orbit-stabilizer theorem, we can rewrite the equation into:</p> \\[ \\sum_{x\\in X}|G_x|=|G|\\sum_{x\\in X}\\frac{1}{|G\\cdot x|} \\] <p>Finally, notice that the set of orbits partition \\(X\\), so we can break the sum into separate sums over each individual orbit:</p> \\[ \\sum_{x\\in X}\\frac{1}{|G\\cdot x|}=\\sum_{A\\in X/G}\\sum_{x\\in A}\\frac{1}{|A|}=|X/G| \\] <p>Putting everything together, we get:</p> \\[ |X/G| = \\frac{1}{|G|}\\sum_{g\\in G}|X^g| \\]"},{"location":"Math/MIT%20Integration%20Bee%202023/","title":"MIT Integration Bee 2023","text":"<p>Evaluate the indefinite integral</p> \\[ \\int\\bigg(\\sqrt{x+1}-\\sqrt{x}\\bigg)^{\\pi}dx \\] <p>First, we can substitute the thing inside the bracket with \\(u\\). Let \\(u= \\sqrt{x+1}-\\sqrt{x}\\), then</p> \\[ \\frac{du}{dx} =\\frac12\\bigg(\\frac1{\\sqrt{x+1}}-\\frac1{\\sqrt x}\\bigg)=-\\frac{u}{2\\sqrt{x(x+1)}} \\] <p>Also, we notice that</p> \\[ u^2 = 1 - 2\\sqrt{x(x+1)},u^{-2}= 1+2\\sqrt{x(x+1)} \\] <p>This implies</p> \\[ \\sqrt{x(x+1)}=\\frac{u^{-2}-u^2}{4}\\implies \\frac{du}{dx}=\\frac{2u}{u^2-u^{-2}}\\\\ dx=\\frac{1}{2}(u+u^{-3})du \\] <p>Thus,</p> \\[ \\begin{aligned} \\int\\bigg(\\sqrt{x+1}-\\sqrt{x}\\bigg)^{\\pi}dx &amp;=\\frac12\\int(u^{\\pi+1}-u^{\\pi-3})du\\\\ &amp;=\\frac12\\bigg(\\frac{u^{\\pi+2}}{\\pi+2}-\\frac{u^{\\pi-2}}{\\pi - 2}\\bigg)+C\\\\ &amp;=\\frac12\\bigg(\\frac{(\\sqrt{x+1}-\\sqrt x)^{\\pi+2}}{\\pi + 2}-\\frac{(\\sqrt{x+1}-\\sqrt x)^{\\pi-2}}{\\pi - 2}\\bigg)+C\\\\ \\end{aligned} \\]"},{"location":"Math/Olympiad%20Inequalities/","title":"Olympiad Inequalities","text":"<p>In a problem with \\(n\\) variables, \\(\\sum_{cyc}\\) means to cycle through \\(n\\) variables, and \\(\\sum_{sym}\\) means to go through all the \\(n!\\) permutations. e.g.</p> \\[ \\begin{aligned} \\sum_{cyc}a^2&amp;=a^2+b^2+c^2\\\\ \\sum_{sym}a^2&amp;=a^2+a^2+b^2+b^2+c^2+c^2\\\\ \\sum_{cyc}ab&amp;=ab+bc+ca\\\\ \\sum_{sym}a^2b&amp;=a^2b+ab^2+a^2c+ac^2+b^2c+bc^2 \\end{aligned} \\]"},{"location":"Math/Olympiad%20Inequalities/#basic-inequalities","title":"Basic Inequalities","text":"<p>(AM-GM Inequality) For non-negative real numbers \\(a_1,a_2,\\dots,a_n\\), we have:</p> \\[ \\frac{a_1+a_2 + \\cdots+a_n}{n}\\ge \\sqrt[n]{a_1a_2\\cdots a _n} \\] <p>Proof: We apply a beautiful method called Cauchy Induction:</p> <ul> <li>First, we show that the statement holds when \\(n=2\\):</li> </ul> \\[ \\frac{a_1+a_2}{2}\\ge\\sqrt{a_1a_2}\\Leftrightarrow (a_1+a_2)^2\\ge 4a_1a_2\\Leftrightarrow (a_1-a_2)^2\\ge 0 \\] <ul> <li>Next, we show that if the statement holds for \\(n\\), then it holds for \\(2n\\):</li> </ul> <p>Notice that</p> \\[ \\frac{a_1+a_2+\\cdots +a_{2n}}{2n}=\\frac{\\frac{a_1+a_2+\\cdots+a_n}{n}+\\frac{a_{n+1}+a_{n+2}+\\cdots+a_{2n}}{n}}{2} \\] <p>By the previous cases:</p> \\[ \\frac{a_1+a_2+\\cdots +a_{2n}}{2n}\\ge\\frac{\\sqrt[n]{a_1a_2\\cdots a_n}+\\sqrt[n]{a_{n+1}a_{n+2}\\cdots a_{2n}}}{2}\\ge\\sqrt{\\sqrt[n]{a_1a_2\\cdots a_n}\\times\\sqrt[n]{a_{n+1}a_{n+2}\\cdots a_{2n}}} \\] <p>Thus</p> \\[ \\frac{a_1+a_2+\\cdots +a_{2n}}{2n}\\ge \\sqrt[2n]{a_1a_2\\cdots a_{2n}} \\] <ul> <li>Finally, we show that the statement holds for \\(n\\) implies that it holds for \\(n-1\\):</li> </ul> <p>Let \\(a_n = \\frac{a_1+a_2+\\cdots + a_{n-1}}{n-1}\\):</p> \\[ \\frac{\\sum_{i=1}^n a_i}{n}=\\frac{\\sum_{i=1}^{n-1}a_i}{n-1} \\] <p>Thus:</p> \\[ \\begin{aligned} \\frac{\\sum_{i=1}^{n-1}a_i}{n-1}&amp;\\ge\\sqrt[n]{a_1a_2\\cdots a_n}\\\\ \\implies\\bigg(\\frac{\\sum_{i=1}^{n-1}a_i}{n-1}\\bigg)^n&amp;\\ge \\prod_{i=1}^{n-1}a_i\\times\\frac{\\sum_{i=1}^{n-1}a_i}{n-1}\\\\ \\implies\\bigg(\\frac{\\sum_{i=1}^{n-1}a_i}{n-1}\\bigg)^{n-1}&amp;\\ge \\prod_{i=1}^{n-1}a_i\\\\ \\implies\\frac{a_1+a_2+\\cdots + a_{n-1}}{n-1}&amp;\\ge \\sqrt[n-1]{a_1a_2\\cdots a_{n-1}} \\end{aligned} \\] <p>Example: Prove that \\(a^2+b^2+c^2\\ge ab+bc+ca,a^4+b^4+c^4\\ge a^2bc+ab^2c+abc^2\\)</p> <p>Proof: By AM-GM,</p> \\[ a^2+b^2+c^2=\\sum_{cyc}\\frac{a^2+b^2}2\\ge \\sum_{cyc}ab \\] \\[ a^4+b^4+c^4=\\sum_{cyc}\\frac{a^4+a^4+b^4+c^4}{4}\\ge \\sum_{cyc}\\sqrt[4]{a^8b^4c^4}=\\sum_{cyc} a^2bc \\] <p>Example: \\(a^3+b^3+c^3\\ge a^2b+b^2c+c^2a\\)</p> <p>The fundamental intuition is being able to decide which symmetric polynomials of a given degree are bigger. A useful formalization to all the patterns above is Muirhead's inequality.</p> <p>(Muirhead's Inequality) Suppose we have two real sequences \\(x_1\\ge x_2\\ge\\cdots\\ge x_n,y_1\\ge y_2\\ge\\cdots\\ge y_n\\) of length \\(n\\), such that:</p> \\[ \\begin{aligned} x_1+x_2+\\cdots+x_n&amp;=y_1+y_2+\\cdots+y_n\\\\ x_1+x_2+\\cdots+x_k&amp;\\ge y_1+y_2+\\cdots+y_k\\quad\\text{for all }k &lt; n \\end{aligned} \\] <p>We say that \\((x_n)\\) majorizes \\((y_n)\\), which is often written as \\((x_n)\\succ(y_n)\\) . Then</p> \\[ \\sum_{sym}a_1^{x_1}a_2^{x_2}\\cdots a_n^{x_n}\\ge \\sum_{sym}a_1^{y_1}a_2^{y_2}\\cdots a_n^{y_n} \\] <p>It is not difficult to show this by AM-GM so the whole proof is left to the readers.</p> <p>(Cauchy-Schwarz Inequality) For any list of real numbers \\((a_n),(b_n)\\), we have</p> \\[ (a_1^2+a_2^2+\\cdots +a_n^2)(b_1^2+b_2^2+\\cdots b_n^2)\\ge (a_1b_1+a_2b_2+\\cdots+a_nb_n)^2 \\] <p>The equality holds when we have two constants \\(\\mu,\\lambda\\) not all zero such that \\(\\mu a_i=\\lambda b_i\\) for any \\(1\\le i\\le n\\)</p> <p>Proof: There are many proofs to this inequality. We provide a prove by constructing a quadratic polynomial:</p> \\[ 0\\le (a_1x+b_1)^2+(a_2x+b_2)^2+\\cdots(a_nx+b_n)^2=\\sum_{i=1}^n a_i^2x^2+2\\sum_{i=1}^na_ib_i x + \\sum_{i=1}^nb_i^2 \\] <p>Since it's nonnegative, it has at most one solution so its determinant must be no greater than zero:</p> \\[ (\\sum_{i= 1}^n a_ib_i)^2 -(\\sum_{i=1}^n a_i^2)(\\sum_{i=1}^nb_i^2)\\le 0 \\] <p>There is also a complex form of this inequality, for complex number sequences \\((a_n),(b_n)\\), we have</p> \\[ (|a_1|^2+|a_2|^2+\\cdots +|a_n|^2)(|b_1|^2+|b_2|^2+\\cdots |b_n|^2)\\ge |a_1b_1+a_2b_2+\\cdots +a_nb_n|^2 \\]"},{"location":"Math/Olympiad%20Inequalities/#inequalities-in-functions","title":"Inequalities in functions","text":"<p>We say a function \\(f\\) is convex if \\(f''(x)\\ge 0\\) for all \\(x\\) and concave otherwise.</p> <p>(Jensen's Inequality) Suppose \\(f\\) is convex, then</p> \\[ \\frac{f(a_1)+f(a_2)+\\cdots +f(a_n)}{n}\\ge f(\\frac{a_1+a_2+\\cdots + a_n}{n}) \\] <p>By convexity, we have that for all non-negative \\(\\lambda_1+\\lambda_2 = 1\\):</p> \\[ f(\\lambda_1 a_1+\\lambda_2a_2)\\le \\lambda_1f(a_1) +\\lambda_2f(a_2) \\] <p>It can be generalized to \\(n\\) non-negative numbers such that \\(\\lambda_1+\\lambda_2+\\cdots +\\lambda_n = 1\\), we have:</p> \\[ f(\\sum_{i=1}^n\\lambda_ia_i)\\le\\sum_{i=1}^n\\lambda_if(a_i) \\] <p>Intuitively, this is telling you that any point in the region bounded by \\((a_i,f(a_i))\\) is above the function. Pick all \\(\\lambda_i=\\frac{1}n\\) and we have Jensen's inequality.</p> <p>(Karamata's Inequality) If \\(f\\) is convex and \\((x_n)\\succ (y_n)\\), then</p> \\[ \\sum_{i=1}^n f(x_n)\\ge \\sum_{i=1}^n f(y_n) \\] <p>Proof: Define \\(c_i\\) as the slope of the line through \\((x_i,f(x_i)),(y_i,f(y_i))\\), then by convexity:</p> \\[ c_{i+1}=\\frac{f(x_{i+1})-f(y_{i+1})}{x_{i+1}-y_{i+1}}\\le \\frac{f(x_i)-f(y_i)}{x_i-y_i}=c_i \\] <p>Define \\((A_n),(B_n)\\) the prefix sum of \\((x_n),(y_n)\\) respectively, so \\(A_0=B_0=0\\) and \\(A_i=\\sum_{i=1}^n x_i,B_i=\\sum_{i=1}^n y_i\\). Then:</p> \\[ \\begin{aligned} \\sum_{i=1}^n(f(x_i)-f(y_i)) &amp;=\\sum_{i=1}^n c_i(x_i-y_i)\\\\ &amp;= \\sum_{i=1}^n c_i(A_i-A_{i-1}-(B_i-B_{i-1}))\\\\ &amp;= \\sum_{i=1}^n c_i(A_i-B_i)-\\sum_{i=1}^nc_i(A_{i-1}-B_{i-1})\\\\ &amp;=c_n(A_n-B_n)+\\sum_{i=1}^n(c_i-c_{i+1})(A_i-B_i) - c_1(A_0-B_0)\\\\ &amp;= \\sum_{i=1}^n(c_i-c_{i+1})(A_i-B_i)\\ge 0\\\\ \\end{aligned} \\] <p>We can also attain Jensen's Inequality directly from this by taking \\((a_1,a_2,\\dots,0)\\succ (\\frac{a_1+a_2+\\cdots+a_n}{n},\\frac{a_1+a_2+\\cdots+a_n}{n},\\cdots,\\frac{a_1+a_2+\\cdots+a_n}{n})\\) , where \\(a_1\\ge a_2\\ge\\cdots\\ge a_n\\) .</p>"},{"location":"Math/USAJMO%202021/","title":"USAJMO 2021","text":"<p>JMO 1. Let \\(\\mathbb{N}\\) denote the set of positive integers. Find all functions \\(f:\\mathbb{N}\\rightarrow\\mathbb{N}\\) such that for all positive integers \\(a\\) and \\(b\\),</p> \\[ f(a^2+b^2)=f(a)\\cdot f(b) \\qquad \\text{and}\\qquad f(a^2)=f(a)^2 \\] <p>Solution: </p> <p>First, we have</p> \\[ f(1^2)=f(1)^2\\Longrightarrow f(1)^2-f(1)=f(1)(f(1)-1)=0 \\] <p>Since \\(f(1)\\) is a positive integer, \\(f(1)=1\\).</p> \\[ f(2)=f(1^2+1^2)=f(1)\\cdot f(1)=1 \\] <p>We could make a conjecture that \\(f(n)=1\\) for all \\(n\\in\\mathbb{N}\\). Next we will prove it by induction. Notice that \\((a^2+b^2)^2=(a^2-b^2)^2+(2ab)^2\\), then:</p> \\[ \\begin{aligned} f((a^2+b^2)^2)=f((a^2-b^2)^2+(2ab)^2)=f(a^2-b^2)\\cdot f(2ab)\\\\ f((a^2+b^2)^2)=f(a^2+b^2)^2=(f(a)\\cdot f(b))^2=f(a)^2\\cdot f(b)^2\\\\ \\Longrightarrow f(a^2-b^2)\\cdot f(2ab)=f(a)^2\\cdot f(b)^2 \\qquad(*) \\end{aligned} \\] <p>If for all positive integers \\(x&lt;n,f(x)=1\\). Then</p> <ul> <li>If \\(n=2k+1,k\\in\\mathbb{N}\\). Take \\(a=k+1,b=k\\) in the equation \\((*)\\),</li> </ul> \\[ \\begin{aligned} f((k+1)^2-k^2)\\cdot f(2(k+1)k)=f(2k+1)\\cdot f(2k^2+2k)=f(k+1)^2\\cdot f(k)^2 \\end{aligned} \\] <p>Since \\(k&lt;n\\) and \\(k+1&lt;n\\) ,</p> \\[ \\begin{aligned} \\Longrightarrow f(k+1)^2\\cdot f(k)^2=1\\\\ \\Longrightarrow f(2k+1)\\cdot f(2k^2+2k)=1 \\end{aligned} \\] <p>By \\(f(x)\\ge1\\), it is clear that \\(f(n)=f(2k+1)=1\\).</p> <ul> <li>If \\(n=2k,k\\in\\mathbb{N}\\). Take \\(a=k,b=1\\) in the equation \\((*)\\),</li> </ul> \\[ \\begin{aligned} f(a^2-b^2)\\cdot f(2ab)=f(k^2-1)\\cdot f(2k)=f(k)^2\\cdot f(1)^2=1\\\\ \\Longrightarrow f(n)=f(2k)=1 \\end{aligned} \\] <p>Thus, by induction, \\(f(n)=1\\) for all \\(n\\in\\mathbb{N}\\).</p> <p>JMO 2. Rectangles \\(BCC_1B_2,CAA_1C_2,\\) and \\(ABB_1A_2\\) are erected outside an acute triangle \\(ABC\\). Suppose that</p> \\[ \\angle{BC_1C}+\\angle{CA_1A}+\\angle{AB_1B}=180^\\circ \\] <p>Prove that lines \\(B_1C_2,C_1A_2\\) and \\(A_1B_2\\) are concurrent.</p> <p>Solution: </p> <p>Draw the circumcircles of the three rectangles. By some simple angle chasing the original conditon implies that the circles concur at a point \\(P\\). Then \\(\\angle{CPB_2}+\\angle{CPA_1}=\\angle{CBB_2}+\\angle{CAA_1}=180^\\circ\\). Hence \\(P\\) lies on \\(A_1B_2\\) etc.</p> <p>\\(\\square\\)</p> <p>JMO 3.An equilateral triangle \\(\\Delta\\) of side length \\(L&gt;0\\) is given. Suppose that \\(n\\) equilateral triangles with side length 1 and with non-overlapping interiors are drawn inside \\(\\Delta\\), such that each unit equilateral triangle has sides parallel to \\(\\Delta\\), but with opposite orientation.</p> \\[ n \\leq \\frac{2}{3} L^{2} \\] <p>Unfortunately I didn't solve this one during the contest. The main idea is finding the relation between this inequality and the area of all \\(\\Delta\\) . We could do this by drawing a regular hexagon of side length \\(1/2\\) above every \\(\\Delta\\) , then prove all the hexagons are disjoint by doing casework. (the approach of Andrew Gu)</p> <p>JMO 4. Carina has three pins, labeled \\(A, B\\), and \\(C\\), respectively, located at the origin of the coordinate plane. In a move, Carina may move a pin to an adjacent lattice point at distance \\(1\\) away. What is the least number of moves that Carina can make in order for triangle \\(ABC\\) to have area \\(2021\\)?</p> <p>(A lattice point is a point \\((x, y)\\) in the coordinate plane where \\(x\\) and \\(y\\) are both integers, not necessarily positive.)</p> <p>Notice that moving \\(ABC\\) by the same vector won't change its area. Denote \\(A(x_A,y_A),B(x_B,y_B),C(x_C,y_C)\\). Let \\(n\\) be the number of moves. When \\(n\\) is minimum, we have:</p> \\[ \\sum_{cyc}(|x_A|+|y_A|)\\le\\sum_{cyc}(|x_A-1|+|y_A|) \\] <p>Which means there are more non-negative \\(x\\) than negative ones. Similarly, there are more non-positive \\(x\\) than positive ones. Thus, at least one \\(x\\) coordinate is \\(0\\). Also at least one \\(y\\) coordinate is \\(0\\).</p> <ul> <li>If \\(A(0,0)\\) ,</li> </ul> \\[ \\begin{aligned} 2S_\\triangle{ABC}&amp;=|x_By_C-x_Cy_B|\\\\ &amp;\\le |x_B||y_C|+|x_C||y_B|\\\\ &amp;\\le \\frac{1}{4}((|x_B|+|y_C|)^2+(|x_C|+|y_B|^2))\\\\ &amp;\\le \\frac{1}{4}n^2\\\\ \\end{aligned} \\] <p>Thus, \\(\\dfrac{1}{4}n^2\\ge2\\cdot2021=4042\\), which means \\(n\\ge128\\).</p> <ul> <li>If \\(A(x_A,0),B(0,y_B)\\) , WLOG \\(x_A,y_B\\ge 0, x_C,y_C\\le 0\\) .</li> </ul> \\[ \\begin{aligned} 2S_\\triangle{ABC}&amp;=|x_Ay_C+x_Cy_B+x_Cy_C|\\\\ &amp;= (x_A+|x_C|)(y_B+|y_C|)-x_Ay_B\\\\ &amp;\\le \\frac{1}{4}(x_A+|x_C|+y_B+|y_C|)^2\\\\ &amp;\\le \\frac{1}{4}n^2\\\\ \\end{aligned} \\] <p>This also leads to \\(n\\ge 128\\).</p> <p>When \\(n=128\\), \\(A(58,0),B(0,55),C(-6,-9)\\) has area \\(2021\\) .</p> <p>Hence the answer is \\(\\boxed{128}\\) . </p> <p>JMO 5. A finite set \\(S\\) of positive integers has the property that, for each \\(s \\in S,\\) and each positive integer divisor \\(d\\) of \\(s\\), there exists a unique element \\(t \\in S\\) satisfying \\(\\text{gcd}(s, t) = d\\). (The elements \\(s\\) and \\(t\\) could be equal.)</p> <p>Given this information, find all possible values for the number of elements of \\(S\\).</p> <p>Solution:</p> <p>The answer is \\(0,1\\) and power of \\(2\\). \\(S=\\varnothing,\\{1\\}\\) satisfy the condition obviously. Next, we want to show that for any \\(|S|\\ge2\\) , \\(|S|=2^k\\).</p> <p>1) For \\(|S|=2^k\\) , pick \\(2k\\) distinct prime numbers and denote them as \\(a_1,a_2,\\dots,a_k\\) and \\(b_1,b_2,\\dots,b_k\\). Let \\(S\\) be the set of all \\(s=\\prod_{i=1}^k p_i\\) , \\(p_i=a_i\\) or \\(p_i=b_i\\) for each \\(i\\). For each \\(s\\in S\\), WLOG \\(s=\\prod_{i=1}^k a_i\\) ( \\(b_i\\) is another possible value of \\(p_i\\) ). For</p> \\[ \\gcd(s,t)=d=\\prod_{i=1}^{m}a_{x_i} \\] <p>For every position \\(x_i\\) , \\(p_{x_i}=a_{x_i}\\) for \\(t\\) . And for the other positions \\(i\\), \\(p_i=b_i\\). \\(t\\in S\\) is clearly unique for every positive divisor \\(d\\) .</p> <p>Lemma: Let \\(D_s\\) denote the set of positive divisors \\(s\\) . For \\(s\\in S\\), \\(|D_s|=|S|\\).</p> <p>Proof: Since there exist a unique \\(t\\in S\\) for every \\(d\\in D_s\\) that \\(\\gcd(s,t)=d\\), and for every \\(t\\in S\\) we also have \\(\\gcd(s,t)\\in D_s\\). This creates a bijection from \\(S\\) to \\(D_s\\), which means \\(|D_s|=|S|\\).</p> <p>\\(\\square\\)</p> <p>2) \\(|S|\\neq2^k\\) that satisfies the condition doesn't exist.</p> <p>Let \\(s=\\prod_{i=1}^k p_i^{\\alpha_i}\\in S\\), then</p> \\[ |D_s|=\\prod_{i=1}^k (\\alpha_i+1)=|S| \\] <p>There exist \\(\\alpha_i&gt;1\\) or else \\(|S|\\) will be a power of \\(2\\). WLOG, \\(\\alpha_1&gt;1\\), then let</p> \\[ \\begin{aligned} \\gcd(s,t)=d &amp;=p_1^{\\alpha_1-1}\\prod_{i=2}^k p_i^{\\alpha_i}\\\\ \\end{aligned} \\] <p>Since \\(\\gcd(s,\\dfrac td)=1\\) and consider  \\(|D_s|\\) as a multiplicative function about \\(s\\), \\(|D_t|\\) is a multiple of \\(|D_d|=\\alpha_1\\prod_{i=2}^k(\\alpha_i+1)\\) . However, notice that since \\(t\\in S\\), \\(|D_t|=|S|=\\prod_{i=1}^k (\\alpha_i+1)\\) . This means</p> \\[ \\alpha_1|\\alpha_1+1\\Longrightarrow \\alpha_1=1 \\] <p>Contradiction! </p> <p>Thus, the only possible value is \\(|S|=2^k\\). </p> <p>JMO 6. Let \\(n \\ge 4\\) be an integer. Find all positive real solutions to the following system of \\(2n\\) equations:</p> \\[ \\begin{aligned} a_{1} &amp;=\\frac{1}{a_{2 n}}+\\frac{1}{a_{2}}, &amp; a_{2}&amp;=a_{1}+a_{3}, \\\\ a_{3}&amp;=\\frac{1}{a_{2}}+\\frac{1}{a_{4}}, &amp; a_{4}&amp;=a_{3}+a_{5}, \\\\ a_{5}&amp;=\\frac{1}{a_{4}}+\\frac{1}{a_{6}}, &amp; a_{6}&amp;=a_{5}+a_{7} \\\\ &amp;\\vdots &amp; &amp;\\vdots \\\\ a_{2 n-1}&amp;=\\frac{1}{a_{2 n-2}}+\\frac{1}{a_{2 n}}, &amp; a_{2 n}&amp;=a_{2 n-1}+a_{1} \\end{aligned} \\] <p>Solution:</p> <p>The answer is that the only solution is \\(a_{2i-1}=1,a_{2i}=2\\) for \\(i=1,2,\\dots,n\\) which works. </p> <ul> <li>\\(n=2k+1\\), if there exists \\(a_{2i-1},a_{2i+1}\\ge1\\)  for some positive integer \\(i\\) , WLOG \\(a_1,a_3\\ge1\\) . Then</li> </ul> \\[ \\begin{aligned} a_2&amp;=a_1+a_3\\ge2\\\\ \\frac1{a_4}&amp;=a_3-\\frac1{a_2}\\ge 1-\\frac12=\\frac12\\Longrightarrow a_4\\le2\\\\ a_5 &amp;=a_4-a_3\\le 2-1=1\\\\ \\frac1{a_6}&amp;=a_5-\\frac1{a_4}\\le 1-\\frac12=\\frac12\\Longrightarrow a_6\\ge2\\\\ a_7&amp;=a_6-a_5\\ge2-1=1\\\\ &amp;\\vdots \\end{aligned} \\] <p>By this process we could get \\(a_{4i}\\le2,a_{4i+1}\\le1,a_{4i+2}\\ge2,a_{4i+3}\\ge1\\) for indices \\(\\pmod{2n}\\). With \\(2n=4k+2\\), we would get for every even indices \\(2\\le a_i\\le2\\), and for every odd indices \\(1\\le a_i\\le 1\\). Hence it's the only solution in this case.</p> <ul> <li>It is similar when we have \\(a_{2i-1},a_{2i+1}\\le 1\\) . Notice that</li> </ul> \\[ \\prod_{i=1}^n (a_{2i-1}-1)(a_{2i+1}-1)=\\prod_{i=1}^n(a_{2i-1}-1)^2\\ge 0 \\] <p>And \\(n\\) is odd, so there's always \\(i\\) that satisfies \\((a_{2i-1}-1)(a_{2i+1}-1)\\ge 0\\).</p> <ul> <li>\\(n=2k\\) ,  if there exists \\(a_{2i-1},a_{2i+1}\\ge1\\)  for some positive integer \\(i\\) , WLOG \\(a_1,a_3\\ge1\\) . Then we will have a process similar to the first case.</li> </ul> <p>By this process we could get \\(a_{4i}\\le2,a_{4i+1}\\le1,a_{4i+2}\\ge2,a_{4i+3}\\ge1\\) for indices \\(\\pmod{2n}\\). Hence \\(a_1=1\\) and notice that \\(a_{2n}=a_1+a_{2n-1}\\ge2\\), only \\(a_{2n}=2,a_{2n-1}=1\\) satisfies it. By knowing those three values it's sufficient to see that \\(a_{2i-1}=1,a_{2i}=2\\) for \\(i=1,2,\\dots,n\\). </p> <ul> <li>If there doesn't exist \\((a_{2i-1}-1)(a_{2i+1}-1)\\ge 0\\) , we will have that</li> </ul> \\[ \\begin{aligned} a_1\\ge1\\ge a_3\\le1\\le a_5\\ge1\\ge a_7\\cdots\\\\ \\Longrightarrow a_1=\\frac1{a_{2n}}+\\frac1{a_2}\\ge a_3=\\frac1{a_{2}}+\\frac1{a_4}\\\\ \\Longrightarrow \\frac1{a_{2n}}\\ge\\frac1{a_4}\\\\ a_5\\ge a_7\\Longrightarrow \\frac1{a_4}\\ge\\frac{1}{a_8}\\\\ \\vdots\\\\ a_{4k-3}\\ge a_{4k-1}\\Longrightarrow \\frac1{a_{4k-4}}\\ge\\frac1{a_{4k}}\\\\ \\Longrightarrow a_4=a_8=\\cdots=a_{2n}\\\\ \\end{aligned} \\] <p>Since </p> \\[ \\begin{aligned} a_1=\\frac{1}{a_{2n}}+\\frac{1}{a_2}=\\frac1{a_4}+\\frac{1}{a_2}=a_3\\\\ a_1\\ge1\\ge a_3\\Longrightarrow a_1=a_3=1\\\\ a_2=a_1+a_3=2,a_4=2\\\\ \\end{aligned} \\] <p>Then it's sufficient to see that \\(a_{2i-1}=1,a_{2i}=2\\) for all integer \\(1\\le i\\le n\\) .</p>"},{"location":"Math/Wythoff%20Game/","title":"Wythoff Game","text":"<p>Suppose Alice and Bob are playing a game with a pile with \\(n\\) coins and a pile with \\(m\\) coins. Of course, \\(n\\) and \\(m\\) are non-negative integers. They take turns removing coins in any of the following ways:</p> <ul> <li>Take a positive number of coins from pile 1.</li> <li>Take a positive number of coins from pile 2.</li> <li>Take the same positive number of coins from pile 1 and 2.</li> </ul> <p>The player that takes the last coin will win the game. Determine all \\((n,m)\\) such that Alice will win. This is an interesting mathematical game called Wythoff's game.</p> <p>Definition: We call \\((n,m)\\) a winning position if Alice can win no matter what Bob do. Otherwise, \\((n,m)\\) is a losing position, which means that if Bob plays optimally Alice will lose.</p> <p>Proposition: \\((n,m)\\) is a winning position if there exist an operation for Alice to turn it to a losing position. Similarly, \\((n,m)\\) is a losing position if it's impossible for Alice to move to a losing position.</p> <p>The proposition is trivial by definition, since after the operation, Bob will have a losing position when it's his turn to move, resulting in Alice winning.</p> <p>Lemma: If \\((n,m)\\) is a losing position, then</p> <ul> <li>\\((n+k,m)\\) is a winning position for all \\(k\\in\\mathbb Z^+\\).</li> <li>\\((n,m+k)\\) is a winning position for all \\(k\\in\\mathbb Z^+\\).</li> <li>\\((n+k,m+k)\\) is a winning position for all \\(k\\in\\mathbb Z^+\\).</li> </ul> <p>Now, we are curious of all the losing positions. First, \\((0,0)\\) is a losing position since Alice cannot make a move. First, we can use brute force to find some losing positions.  (By symmetry, we only care about the cases when \\(n \\le m\\))</p> <p>We want to find a formula to describe the sequence of all losing positions. We can find that by describing our brute force strategy rigorously.</p> <p>Let \\((a_0,b_0)=(0,0)\\). By our lemma, there does not exist \\(i\\neq j\\) such that \\(a_i=b_j\\) or \\(a_i-b_i=a_j-b_j\\). Hence, all \\(a_i,b_i\\) are distinct and all values of \\(a_i-b_i\\) are distinct.</p> <p>We can infer that \\(a_i &lt; b_i\\) for \\(i &gt; 0\\). We find \\((a_{n+1},b_{n+1})\\) to be the next smallest possible losing position after the first \\(n\\) values. </p> <p>For \\(n\\in\\mathbb Z^+\\), let \\(S_n=\\{a_k|0\\le k &lt; n\\}\\cup\\{b_k|0\\le k &lt; n\\}\\). Then by our definition,  Then \\((a_n,b_n)\\) contains all losing positions \\((n,m)\\) with \\(n\\le m\\).</p> <p>Finally, we assert that \\(a_n = \\lfloor n\\phi\\rfloor,b_n=\\lfloor n\\phi^2\\rfloor\\), where \\(\\phi=\\dfrac{1+\\sqrt5}{2}\\).</p> <p>We can verify the assertion:  and since \\(1/\\phi + 1/\\phi^2=1\\), the sequence \\((a_n),(b_n)\\) with \\(n &gt; 0\\) partition positive integers by Rayleigh's theorem. The proof of this theorem is left to the readers.</p>"},{"location":"Old%20Posts/AGC001%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"AGC001 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC001%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#agc001","title":"AGC001 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC001%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#a-bbq-easy","title":"A - BBQ Easy","text":"<p>\u8d2a\u5fc3\u5f97\u80fd\u53d6\u5230\u7684\u6700\u5927\u503c\u4e3a \\(L_1+L_3+L_5+\\cdots+L_{2N-1}\\) \uff0c\u7b80\u5355\u8ba1\u7b97\u5e76\u8f93\u51fa\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\nusing namespace std;\nbool cmp(int x,int y){return x&lt;y;}\nint main(){\n    int n,a[205],ans=0;\n    cin&gt;&gt;n;\n    rep(i,1,2*n)cin&gt;&gt;a[i];\n    sort(a+1,a+2*n+1,cmp);\n    for(int i=1;i&lt;=2*n;i+=2){\n        ans+=a[i];\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC001%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#b-mysterious-light","title":"B - Mysterious Light","text":"<p>\u5f88\u6709\u610f\u601d\u7684\u6570\u5b66\u9898\u3002\u9996\u5148\u53d1\u73b0\u5149\u7ebf\u5728\u4e24\u6b21\u53cd\u5c04\u8fc7\u540e\u4f1a\u8fdb\u5165\u4e00\u4e2a\u8fb9\u957f\u4e3a \\((x,y)\\) \\((x&gt;y)\\) \u7684\u5e73\u884c\u56db\u8fb9\u5f62\uff0c\u518d\u7ecf\u8fc7\u4e24\u6b21\u53cd\u5c04\u540e \\((x-y,y)\\) \u3002\u53d1\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff0c\u8fb9\u957f\u4f1a\u8fdb\u884c\u8f97\u8f6c\u76f8\u9664\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u7c7b\u4f3c\u7684\u9012\u5f52\u51fd\u6570\u8ba1\u7b97\u7b54\u6848\u3002 </p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nll ans;\ninline void dfs(ll x,ll y){\n    if(x%y==0){\n        ans+=x*2-y;\n        return;\n    }else{\n        ans+=(x-x%y)*2;\n        dfs(y,x%y);\n    }\n}\nint main(){\n    ll n=read(),x=read();\n    ans=n;\n    dfs(max(n-x,x),min(n-x,x));\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC001%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#c-shorten-diameter","title":"C - Shorten Diameter","text":"<p>\u53c8\u4e00\u9053\u5f88\u4e0d\u9519\u7684\u601d\u7ef4\u9898\u3002\u9996\u5148\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u4e3a \\(O(N^2)\\) \u4ee5\u4e0b\u3002\u8003\u8651\u76f4\u5f84\u7684\u51e0\u4f55\u5b9a\u4e49\uff08\u5927\u8349\uff09\uff0c\u6211\u4eec\u679a\u4e3e\u8fd9\u4e2a\u6811\u7684\u5706\u5fc3\uff08\u8349*2\uff09\uff0c\u753b\u4e00\u4e2a\u534a\u5f84\u4e3a \\(K/2\\) \u7684\u5706\uff0c\u5e76\u4e14\u628a\u5706\u5916\u7684\u70b9\u5220\u6389\uff0c\u5224\u65ad\u5220\u6389\u7684\u70b9\u6570\u7684\u6700\u5c0f\u503c\u3002\u8fd9\u6837\u7684\u505a\u6cd5\u662f \\(O(N^2)\\) \u7684\u3002\u7279\u522b\u5730\uff0c\u5f53 \\(K\\) \u4e3a\u5947\u6570\u65f6\u6211\u4eec\u628a\u4e00\u6761\u8fb9\u5f53\u505a\u5706\u5fc3\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e3+5;\nvector&lt;int&gt; G[N];\nint n,k,ans,tot;\ninline void dfs(int u,int fa,int dep){\n    ++tot;\n    if(dep==0)return;\n    for(int v:G[u]){\n        if(v==fa)continue;\n        dfs(v,u,dep-1);\n    }\n}\nint main(){\n    n=read(),k=read();\n    rep(i,1,n-1){\n        int u=read(),v=read();\n        G[u].push_back(v);\n        G[v].push_back(u);\n    }\n    if(k%2==0){\n        rep(i,1,n){\n            tot=0;dfs(i,0,k/2);\n            ans=max(ans,tot);\n        }\n    }else{\n        rep(i,1,n){\n            for(int j:G[i]){\n                tot=0;\n                dfs(i,j,k/2);dfs(j,i,k/2);\n                ans=max(ans,tot);\n            }\n        }\n    }\n    cout&lt;&lt;n-ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC001%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#d-arrays-and-palindrome","title":"D - Arrays and Palindrome","text":"<p>\u5f88\u6709MO\u98ce\u683c\u7684\u9898\u76ee\u3002\u4e00\u4e2a \\([l,r]\\) \u4e4b\u95f4\u7684\u56de\u6587\u6761\u4ef6\u76f8\u5f53\u4e8e\u7ed9\u51fa\u4e86 \\(s_l=s_r,s_{l+1}=s_{r-1},\\dots\\) \u603b\u5171 \\(\\lfloor \\dfrac{a_i}{2}\\rfloor\\) \u4e2a\u9650\u5236\u3002\u628a\u8fd9\u4e9b\u9650\u5236\u770b\u4f5c\u8fb9\uff0c\u90a3\u4e48\u4ec5\u5f53\u6240\u6709\u70b9\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u65f6\u6bcf\u4e2a\u5b57\u7b26\u5fc5\u987b\u76f8\u7b49\uff0c\u8fd9\u610f\u5473\u7740\u9700\u8981\u81f3\u5c11 \\(n-1\\) \u6761\u8fb9\u3002\u5982\u679c \\(a_i\\) \u4e2d\u6709\u4e09\u4e2a\u5947\u6570\uff0c\u90a3\u4e48\u4f1a\u6d6a\u8d39\u6389 \\(1.5\\) \u6761\u8fb9\uff0c\u663e\u7136\u4e0d\u5408\u6cd5\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u6784\u9020\u3002\u53d1\u73b0\u5982\u679c \\([1,n-1],[1,n]\\) \u90fd\u662f\u56de\u6587\u4e32\uff0c\u90a3\u4e48\u6240\u6709\u5143\u7d20\u76f8\u540c\u3002\u4e8e\u662f\u53ef\u4ee5\u628a \\(a\\) \u4e2d\u7684\u5947\u6570\u653e\u5230\u5934\u6216\u5c3e\uff0c\\(b\\) \u6570\u7ec4\u7684\u5934\u548c\u5c3e\u5206\u522b \\(+1,-1\\)\uff0c\u5176\u4ed6\u5143\u7d20\u548c \\(a\\) \u6570\u7ec4\u76f8\u540c\u3002\u8fd9\u6837\u7c7b\u4f3c\u9519\u4f4d\u6446\u653e\u7684\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint n,m,a[105],b[105],tot,cnt[2];\nbool cmp(int x,int y){return x%2&gt;y%2;}\nint main(){\n    n=read(),m=read();\n    rep(i,1,m){\n        a[i]=read();\n        ++cnt[a[i]&amp;1];\n    }\n    if(m==1){\n        if(a[1]==1)printf(\"1\\n1\\n1\\n\");\n        else printf(\"%d\\n%d\\n%d %d\\n\",a[1],2,1,a[1]-1);\n        return 0;\n    }\n    if(cnt[1]&gt;2)return puts(\"Impossible\"),0;\n    sort(a+1,a+m+1,cmp);\n    printf(\"%d \",a[1]);\n    rep(i,3,m)printf(\"%d \",a[i]);\n    printf(\"%d\\n\",a[2]);\n    b[++tot]=a[1]+1;\n    rep(i,3,m)b[++tot]=a[i];\n    if(a[2]&gt;1)b[++tot]=a[2]-1;\n    printf(\"%d\\n\",tot);\n    rep(i,1,tot)printf(\"%d \",b[i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC001%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#e-bbq-hard","title":"E - BBQ Hard","text":"<p>\\(O(N^2)\\) \u7684\u66b4\u529b\u8ba1\u7b97\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u770b\u5230\u5f62\u5982  \u7684\u5f62\u5f0f\u7684\u6570\u6c42\u548c\uff0c\u60f3\u5230\u7ecf\u5178\u7684\u683c\u8def\u8ba1\u6570\u95ee\u9898\u3002\u8fd9\u7b49\u4ef7\u4e8e\u4ece \\((0,0)\\) \u8d70\u5230 \\((x,y)\\) \u7684\u65b9\u6848\u6570\u3002\u4e8e\u662f\u8fd9\u53d8\u6210\u4e86\u6c42 \\((0,0)\\) \u5230\u6240\u6709 \\((a_i+a_j,b_i+b_j)\\) \u7684\u8def\u5f84\u6570\u4e4b\u548c\u3002\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11\u7ec8\u70b9\u6570\u6765\u4f18\u5316\uff0c\u5e73\u79fb\u8def\u5f84\u5230 \\((-a_i,-b_i)\\rightarrow(a_j,b_j)\\) \u3002\u53ef\u4ee5\u7528\u7b80\u5355\u7684dp\u8ba1\u7b97\uff0c\u6700\u540e\u53bb\u6389 \\(i=j\\) \u65f6\u7684\u7b54\u6848\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5,S=2e3+5,P=1e9+7,inv2=5e8+4;\nll fpow(ll x,ll y){\n    ll res=1;\n    while(y){\n        if(y&amp;1)res=res*x%P;\n        y&gt;&gt;=1;x=x*x%P;\n    }\n    return res;\n}\nint fac[8050],ifac[8050];\nll C(int n,int m){return 1ll*fac[n]*ifac[m]%P*ifac[n-m]%P;}\nint n,a[N],b[N],dp[4050][4050];\nll ans;\nint main(){\n    n=read();\n    rep(i,1,n){\n        a[i]=read(),b[i]=read();\n        ++dp[S-a[i]][S-b[i]];\n    }\n    fac[0]=1;\n    rep(i,1,8000)fac[i]=1ll*fac[i-1]*i%P;\n    ifac[8000]=fpow(fac[8000],P-2);\n    per(i,7999,0)ifac[i]=1ll*ifac[i+1]*(i+1)%P;\n    rep(i,1,S&lt;&lt;1)rep(j,1,S&lt;&lt;1){\n        dp[i][j]=(dp[i][j]+(dp[i-1][j]+dp[i][j-1])%P)%P;\n    }\n    rep(i,1,n){\n        ans=(ans+dp[S+a[i]][S+b[i]])%P;\n        ans=(ans-C(2*a[i]+2*b[i],2*a[i]))%P;\n    }\n    ans=(ans+P)%P*inv2%P;\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC001%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#f-wide-swap","title":"F - Wide Swap","text":"<p>\\(i,j\\) \u4e24\u4e2a\u4f4d\u7f6e\u80fd\u4ea4\u6362\u7684\u6761\u4ef6\u4e3a \\(|i-j|\\ge K\\) \u4e14 \\(|P_i-P_j|= 1\\) \uff0c\u8fd9\u4e2a\u6761\u4ef6\u592a\u7384\u5999\u4e86\uff0c\u8003\u8651\u6784\u9020\u6392\u5217 \\(Q\\) \u6ee1\u8db3 \\(Q_{P_i}=i\\) \uff0c\u90a3\u4e48\u5bf9\u4e8e \\(Q\\) \uff0c\\(|Q_i-Q_j|\\ge K\\) \u4e14 \\(|i-j|=1\\) \u5373 \\(i,j\\) \u76f8\u90bb\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ea4\u6362\u3002\u800c\u6c42\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684 \\(P\\) \u4e5f\u5c31\u7b49\u4ef7\u4e8e \u4f18\u5148\u8003\u8651 \\(1\\) \u5728 \\(Q\\) \u4e0a\u7684\u4e0b\u6807\u6700\u9760\u524d\uff0c\u7136\u540e\u8003\u8651 \\(2\\) \u7684\u4e0b\u6807\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6240\u6709\u5728 \\(Q\\) \u4e2d\u5dee\u503c\u5c0f\u4e8e \\(K\\) \u7684\u6570\u5bf9 \\((u,v)\\) \uff0c\u5b83\u4eec\u65e0\u6cd5\u4ea4\u6362\uff0c\u4e5f\u5c31\u662f\u76f8\u5bf9\u4f4d\u7f6e\u88ab\u56fa\u5b9a\u4e86\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\u5bf9 \\((u,v)\\) \uff0c\u6211\u4eec\u628a\u5728 \\(Q\\) \u4e2d\u51fa\u73b0\u8f83\u524d\u7684\u6570\u5411\u51fa\u73b0\u8f83\u540e\u7684\u6570\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u5efa\u56fe\u4f1a\u6784\u6210\u4e00\u5f20 \\(DAG\\) \u3002 \\(Q\\) \u53ef\u4ee5\u8f6c\u6362\u6210\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u8be5\u56fe\u62d3\u6251\u5e8f\u7684\u5e8f\u5217\u3002</p> <p>\u6ce8\u610f\u5230 \\(Q\\) \u7684\u8981\u6c42\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u56e0\u6b64\u76f4\u63a5\u5efa\u56fe\u540e\u8d2a\u5fc3\u53d6\u6700\u5c0f\u503c\u662f\u9519\u8bef\u7684\uff0c\u6b63\u786e\u7684\u505a\u6cd5\u7c7b\u4f3c [HNOI2015]\u83dc\u80b4\u5236\u4f5c \uff0c\u5e94\u5f53\u5efa\u53cd\u56fe\u540e\u6c42\u53cd\u56fe\u4e2d\u5b57\u5178\u5e8f\u6700\u5927\u7684\u6392\u5217\u3002\u6700\u540e\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u6240\u6709 \\(|u-v|&lt; K\\) \u90fd\u8fde\u8fb9\uff0c\u8fb9\u6570\u662f \\(O(NK)\\) \u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u663e\u5f0f\u5efa\u56fe\u3002</p> <p>\u9996\u5148\u628a \\(Q\\) \u4e0a\u5efa\u53cd\u56fe\u6362\u5230\u539f\u5e8f\u5217\u4e0a\uff0c\u7c7b\u4f3c\u7684\uff0c\u5373\u5bf9\u6240\u6709\u70b9 \\(i\\) \u8fde\u4e0a \\(\\{j||i-j|&lt;K,P_j&lt;P_i\\}\\) \uff0c\u82e5\u70b9 \\(i\\) \u5165\u5ea6\u4e3a \\(0\\) \uff0c\u53ef\u4ee5\u53d1\u73b0\u5728\u533a\u95f4 \\((i-K,i+K)\\) \u4e0a \\(P_i\\) \u6700\u5927\u3002\u7528\u5927\u6839\u5806\u7ef4\u62a4\u5165\u5ea6\u4e3a \\(0\\) \u7684\u70b9\u96c6\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u503c\uff0c\u5f53\u5220\u9664\u70b9 \\(i\\) \u65f6\uff0c\u5224\u65ad \\((i-K,i),(i,i+K)\\) \u4e24\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u4e2d\u662f\u5426\u6709\u5165\u5ea6\u53d8\u4e3a \\(0\\) \u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log N)\\) \u3002 </p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define li (i&lt;&lt;1)\n#define ri (i&lt;&lt;1|1)\n#define mid (l+r&gt;&gt;1)\n#define ls li,l,mid\n#define rs ri,mid+1,r\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=5e5+5,inf=0x3f3f3f3f,M=2e6+5;\nint n,k,P[N],Ans[N],mx[M];\nvoid upd(int i){mx[i]=P[mx[li]]&gt;P[mx[ri]]?mx[li]:mx[ri];}\nvoid Build(int i,int l,int r){\n    if(l==r)return mx[i]=l,void();\n    Build(ls),Build(rs);upd(i);\n}\nvoid del(int i,int l,int r,int p){\n    if(l==r)return mx[i]=0,void();\n    p&lt;=mid?del(ls,p):del(rs,p);upd(i);\n}\nint Q(int i,int l,int r,int a,int b){\n    if(r&lt;a||b&lt;l)return 0;\n    if(a&lt;=l&amp;&amp;r&lt;=b)return mx[i];\n    int v1=Q(ls,a,b),v2=Q(rs,a,b);\n    return P[v1]&gt;P[v2]?v1:v2;\n}\nbool vis[N];\npriority_queue&lt;int&gt; pq;\ninline void check(int id){\n    if(vis[id])return;\n    if(Q(1,1,n,id-k+1,id+k-1)==id){\n        pq.push(id);vis[id]=1;\n    }\n}\nint main(){\n    n=read(),k=read();\n    rep(i,1,n)P[i]=read();\n    P[0]=-inf;\n    Build(1,1,n);\n    rep(i,1,n)check(i);\n    for(int i=n;i&gt;=1;i--){\n        int u=pq.top();pq.pop();\n        Ans[u]=i;del(1,1,n,u);\n        int pos;\n        if((pos=Q(1,1,n,u-k+1,u-1)))check(pos);\n        if((pos=Q(1,1,n,u+1,u+k-1)))check(pos);\n    }\n    rep(i,1,n)printf(\"%d\\n\",Ans[i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC002%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"AGC002 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC002%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#a","title":"A","text":"<p>\u7565\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint main(){\n    int a=read(),b=read();\n    if(a&lt;=0&amp;&amp;b&gt;=0)puts(\"Zero\");\n    else if(b&lt;0&amp;&amp;(b-a+1)%2==1)puts(\"Negative\");\n    else puts(\"Positive\");\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC002%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#b","title":"B","text":"<p>\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e2a\u76d2\u5b50\u91cc\u9762\u7684\u7403\u6570\u4ee5\u53ca\u5f53\u524d\u662f\u5426\u6709\u7ea2\u7403\uff0c\u8f6c\u79fb\u662f\u663e\u7136\u7684\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint num[N];\nbool vis[N];\nint main(){\n    int n=read(),m=read(),ans=0;\n    vis[1]=1;rep(i,1,n)num[i]=1;\n    rep(i,1,m){\n        int x=read(),y=read();\n        if(vis[x])vis[y]=1;\n        num[x]--;num[y]++;\n        if(num[x]==0)vis[x]=0;\n    }\n    rep(i,1,n)if(vis[i])ans++;\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC002%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#c","title":"C","text":"<p>\u5148\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u65e0\u89e3\u3002\u53d1\u73b0\u5982\u679c\u6700\u957f\u7684\u4e24\u6bb5\u5408\u5e76\u6210\u7684\u4e00\u6bb5\u90fd\u65e0\u6cd5\u526a\u5f00\u7684\u8bdd\uff0c\u90a3\u4e48\u6700\u540e\u81f3\u5c11\u4f1a\u6709\u4e24\u6bb5\u65e0\u6cd5\u526a\u5f00\uff0c\u65e0\u89e3\u3002</p> <p>\u53cd\u4e4b\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u5305\u542b\u53ef\u526a\u5f00\u5b50\u6bb5\u7684\u4e00\u6bb5\u7ef3\u5b50\u4e00\u5b9a\u4e5f\u662f\u53ef\u526a\u5f00\u7684\uff0c\u6211\u4eec\u4fdd\u7559\u6700\u957f\u7684 \\(a_i+a_{i+1}\\) \u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint a[N];\nint main(){\n    int n=read(),l=read(),len=0,pos;\n    rep(i,1,n)a[i]=read();\n    rep(i,1,n-1){\n        if(a[i]+a[i+1]&gt;len){\n            len=a[i]+a[i+1];pos=i;\n        }\n    }\n    if(len&lt;l)return puts(\"Impossible\"),0;\n    puts(\"Possible\");\n    rep(i,1,pos-1)printf(\"%d \",i);\n    for(int i=n-1;i&gt;=pos;i--)printf(\"%d \",i);\n    puts(\"\");\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC002%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#d","title":"D","text":"<p>\u9898\u76ee\u5f00\u59cb\u6709\u610f\u601d\u4e86\u8d77\u6765</p> <p>\u6700\u5927\u503c\u6700\u5c0f\u548c\u5355\u8c03\u6027\u63d0\u793a\u4e86\u6211\u4eec\u4e8c\u5206\u7b54\u6848 \\(k\\) \u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a \\(id\\le k\\) \u7684\u8fb9\u5168\u90e8\u8fde\u4e0a\uff0c\u5e76\u628a\u5f53\u524d \\(x,y\\) \u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u5927\u5c0f\u52a0\u8d77\u6765\u3002\u5982\u679c \\(\\ge z\\) \u5219\u7b54\u6848\u4e0d\u5927\u4e8e \\(k\\) \uff0c\u53cd\u4e4b\u5927\u4e8e \\(k\\) \u3002</p> <p>\u8fd9\u6837\u7684\u66b4\u529b\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(QN\\log M)\\) \uff0c\u8003\u8651\u4f18\u5316\u3002\u56e0\u4e3a\u8be2\u95ee\u5168\u90e8\u662f\u79bb\u7ebf\u7684\uff0c\u53ef\u4ee5\u7528\u6574\u4f53\u4e8c\u5206\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O((N+M+Q)\\log M)\\) \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\n#define fi first\n#define se second\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nstruct Edge{int x,y;}e[N];\nstruct Query{int x,y,z;}q[N];\nstruct Bin{int fi,se,mid;}p[N];\nvector&lt;int&gt; v[N];\nint n,m,Q,ans[N],fa[N],sz[N];\ninline int find(int u){return u==fa[u]?u:fa[u]=find(fa[u]);}\ninline void merge(int u,int v){\n    int fu=find(u),fv=find(v);\n    if(fu==fv)return;\n    fa[fu]=fv,sz[fv]+=sz[fu];\n}\nint main(){\n    n=read(),m=read();\n    rep(i,1,m)e[i].x=read(),e[i].y=read();\n    Q=read();\n    rep(i,1,Q){\n        q[i].x=read(),q[i].y=read(),q[i].z=read();\n        p[i].fi=1,p[i].se=m;\n    }\n    rep(t,1,20){\n        rep(i,1,m)v[i].clear();\n        rep(i,1,Q)if (p[i].fi != p[i].se) v[p[i].mid = (p[i].fi + p[i].se) &gt;&gt; 1].push_back(i);\n        rep(i,1,n) fa[i] = i, sz[i] = 1;\n        rep(i,1,m){\n            merge(e[i].x, e[i].y);\n            for (auto k : v[i]) {\n                int x = q[k].x, y = q[k].y, fx = find(x), fy = find(y);\n                if (fx != fy)\n                    ans[k] = sz[fx] + sz[fy];\n                else\n                    ans[k] = sz[fx];\n            }\n        }\n        rep(i,1,Q)if (p[i].fi != p[i].se) {\n            if (ans[i] &gt;= q[i].z)\n                p[i].se = p[i].mid;\n            else\n                p[i].fi = p[i].mid + 1;\n        }\n    }\n    rep(i,1,Q)printf(\"%d\\n\",p[i].fi);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC002%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#e","title":"E","text":"<p>\u535a\u5f08\u8bba\u7ecf\u5178\u9898\u76ee\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u5c06\u6570\u7ec4\u964d\u5e8f\u6392\u5217\u540e\u770b\u6210\u4e00\u5806\u65b9\u5757\uff0c\u6bcf\u6b21\u64cd\u4f5c\u76f8\u5f53\u4e8e\u628a\u6700\u5de6\u8fb9\u7684\u4e00\u5217\u6216\u8005\u6700\u5e95\u4e0b\u4e00\u884c\u7684\u65b9\u5757\u6d88\u9664\uff0c\u6d88\u9664\u6700\u540e\u4e00\u4e2a\u65b9\u5757\u7684\u4eba\u8f93\u6389\u6e38\u620f\u3002\u4e0b\u9762\u7528 \\((x,y)\\) \u8868\u793a\u6d88\u6389\u4e86\u524d \\(x\\) \u5217 \u548c\u524d \\(y\\) \u884c\u7684\u6240\u6709\u65b9\u5757\u3002</p> <p>\uff08\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u5fc5\u80dc\u6001\u548c\u5fc5\u8d25\u6001\u7684\u5b9a\u4e49\u4e86\uff09</p> <p>\u5f15\u7406\uff1a\u82e5 \\((x+1,y+1)\\) \u6ca1\u6709\u6d88\u9664\u5168\u90e8\u65b9\u5757\uff0c\u90a3\u4e48 \\((x,y)\\) \u548c \\((x+1,y+1)\\) \u7684\u72b6\u6001\u76f8\u540c\u3002</p> <p>\u8bc1\uff1a</p> <ul> <li> <p>\u82e5 \\((x+1,y+1)\\) \u662f\u5fc5\u8d25\u6001\uff0c\u5219\u5148\u624b\u4ece \\((x,y)\\) \u65e0\u8bba\u600e\u4e48\u8d70\uff0c\u540e\u624b\u90fd\u53ef\u4ee5\u8f6c\u79fb\u5230 \\((x+1,y+1)\\) \u8fd9\u4e2a\u72b6\u6001\u3002</p> </li> <li> <p>\u82e5 \\((x+1,y+1)\\) \u662f\u5fc5\u80dc\u6001\uff0c\u7531\u5b9a\u4e49\u77e5\u9053 \\((x+2,y+1)\\) \u548c \\((x+1,y+2)\\) \u81f3\u5c11\u6709\u4e00\u4e2a\u5fc5\u8d25\u6001\uff08\u6d88\u9664\u5168\u90e8\u65b9\u5757\u540e\u5148\u624b\u5fc5\u80dc\uff0c\u6240\u4ee5\u5fc5\u8d25\u6001\u5fc5\u7136\u6ee1\u8db3\u5047\u8bbe\uff09\u3002\u4e0d\u59a8\u8bbe \\((x+2,y+1)\\) \u662f\u5fc5\u8d25\u6001\uff0c\u90a3\u4e48\u7531\u4e0a\u4e00\u79cd\u60c5\u51b5\u63a8\u51fa \\((x+1,y)\\) \u662f\u5fc5\u8d25\u6001\uff0c\u5b83\u4e0e \\((x,y)\\) \u76f8\u90bb\u3002\u6240\u4ee5 \\((x,y)\\) \u662f\u5fc5\u80dc\u6001\u3002</p> </li> </ul> <p>\u8fd9\u6837\u5c31\u8bc1\u660e\u4e86\u521d\u59cb\u72b6\u6001 \\((0,0)\\) \u7b49\u4ef7\u4e8e\u6700\u5927\u7684 \\((x,x)\\) \u3002\u800c\u6700\u5927\u5316 \\(x\\) \u610f\u5473\u7740\u8fd9\u4e2a\u70b9\u4e4b\u540e\u53ea\u80fd\u6cbf\u5355\u65b9\u5411 \\(+1\\) \uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u65b9\u5411\u9700\u8981\u5947\u6570\u6b21\u64cd\u4f5c\u6d88\u9664\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint a[N],n;\nbool cmp(int x,int y){return x&gt;y;}\nint main(){\n    n=read();\n    rep(i,1,n)a[i]=read();\n    sort(a+1,a+n+1,cmp);\n    rep(i,1,n){\n        if(i+1&gt;a[i+1]){\n            int ans=0;\n            for(int j=i+1;a[j]==i;++j)ans^=1;\n            ans|=(a[i]-i)&amp;1;\n            puts(ans?\"First\":\"Second\");\n            break;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC002%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#f","title":"F","text":"<p>\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u6ee1\u8db3\u6761\u4ef6\u7684\u5e8f\u5217\uff0c\u4efb\u4f55\u524d\u7f00\u4e2d\u767d\u8272\u7403\u7684\u4e2a\u6570\u90fd\u8981\u8d85\u8fc7\u5176\u4ed6\u989c\u8272\u7684\u79cd\u7c7b\u6570\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4f9d\u6b21\u586b\u5165\u767d\u8272\u7403\u6216\u8005\u4e00\u4e2a\u79cd\u7c7b\u7684\u6240\u6709\u7403\u3002</p> <p>\u4ee4 \\(dp[i][j]\\) \u4e3a\u586b\u5165\u4e86\u524d \\(i\\) \u4e2a\u767d\u8272\u7403\uff0c\u4ee5\u53ca \\(j\\) \u79cd\u51fa\u73b0\u6700\u9760\u524d\u7684\u5f69\u8272\u7403\u65f6\u7684\u65b9\u6848\u6570\uff0c\u6b64\u65f6\u663e\u7136\u6709 \\(i\\ge j\\) \u3002</p> <p>\u8003\u8651\u8f6c\u79fb\uff0c</p> <ul> <li>\u653e\u5165\u4e00\u4e2a\u767d\u8272\u7403\u3002\u4efb\u4f55\u60c5\u51b5\u90fd\u53ef\u4ee5\u5728\u7b2c\u4e00\u4e2a\u672a\u586b\u5165\u7684\u5730\u65b9\u586b\u4e0a\u767d\u7403\uff0c\u4e8e\u662f\u6709</li> </ul> \\[ dp[i+1][j]+=dp[i][j] \\] <ul> <li>\u653e\u5165\u4e00\u79cd\u5f69\u8272\u7403\u3002\u6211\u4eec\u4ece \\(dp[i][j]\\) \u8f6c\u79fb\u5230 \\(dp[i][j+1]\\) \uff0c\u8fd9\u65f6\u9700\u8981\u6ee1\u8db3 \\(i \\ge j+1\\) \u5426\u5219\u65e0\u6cd5\u5408\u6cd5\u653e\u5165\u3002\u6709 \\((n-j)\\) \u79cd\u672a\u51fa\u73b0\u7684\u989c\u8272\u53ef\u4ee5\u7ed9\u6211\u4eec\u9009\u62e9\uff0c\u800c\u586b\u5165\u4e86\u6700\u9760\u524d\u7684\u7a7a\u4f4d\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u6709 \\(k-2\\) \u4e2a\u5f69\u8272\u7403\u672a\u653e\u7f6e\u3002\u8fd9\u4e9b\u5f69\u8272\u7403\u6709 \\((nk-i-j(k-1)-1)\\) \u4e2a\u7a7a\u4f4d\u53ef\u9009\uff0c\u4e8e\u662f\u8f6c\u79fb\u4e3a</li> </ul> \\[ dp[i][j+1]+=dp[i][j]\\times (n-j)\\times\\binom{nk-i-j(k-1)-1}{k-2} \\] <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\) \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2005,P=1e9+7;\nll fpow(ll x,ll y){\n    ll res=1;\n    while(y){\n        if(y&amp;1)res=res*x%P;\n        y&gt;&gt;=1;x=x*x%P;\n    }\n    return res;\n}\nint n,k,fac[N*N],ifac[N*N];\nll dp[N][N];\nll C(ll n,ll m){return 1ll*fac[n]*ifac[m]%P*ifac[n-m]%P;}\nint main(){\n    n=read(),k=read();\n    if(k==1)return puts(\"1\"),0;\n    fac[0]=1;\n    rep(i,1,n*k)fac[i]=1ll*fac[i-1]*i%P;\n    ifac[n*k]=fpow(fac[n*k],P-2);\n    for(int i=n*k;i&gt;=1;i--)ifac[i-1]=1ll*ifac[i]*i%P;\n    dp[0][0]=1;\n    rep(i,1,n){\n        rep(j,0,i){\n            dp[i][j]=dp[i-1][j];\n            if(!j)continue;\n            dp[i][j]=(dp[i][j]+(n-j+1)*dp[i][j-1]%P*C(n-i+(n-j+1)*(k-1)-1,k-2)%P)%P;\n        }\n    }\n    printf(\"%lld\\n\",dp[n][n]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC003%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"AGC003 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC003%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#a","title":"A","text":"<p>\u6bcf\u6b21\u8d70\u8def\u8ddd\u79bb\u81f3\u5c11\u4e3a1\uff0c\u6240\u4ee5\u5357\u5317\u3001\u4e1c\u897f\u5fc5\u987b\u540c\u65f6\u51fa\u73b0\u624d\u80fd\u56de\u5230\u539f\u70b9\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nchar s[1005];\nbool a,b,c,d;\nint main(){\n    scanf(\"%s\",s+1);\n    for(int i=1;s[i];++i){\n        a|=(s[i]=='S');\n        b|=(s[i]=='N');\n        c|=(s[i]=='E');\n        d|=(s[i]=='W');\n    }\n    puts((a==b&amp;&amp;c==d)?\"Yes\":\"No\");\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC003%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#b","title":"B","text":"<p>\u8003\u8651\u8d2a\u5fc3\u3002\u6bcf\u79cd\u724c\u53ef\u4ee5\u5148\u81ea\u5df1\u6d88\u8017\uff0c\u5982\u679c\u8fd8\u5269\u4e0b\u4e00\u5f20\u724c\uff0c\u90a3\u4e48\u4e0e\u540e\u9762\u4e00\u79cd\u724c\u914d\u5bf9\u6700\u591a\u4f1a\u8ba9\u540e\u9762\u90a3\u79cd\u724c\u6d6a\u8d39\u4e00\u5f20\uff0c\u8fd9\u6837\u64cd\u4f5c\u6bd4\u7559\u4e0b\u8fd9\u5f20\u724c\u8981\u66f4\u4f18\uff08\u56e0\u4e3a\u8fd9\u5f20\u724c\u5df2\u7ecf\u6ca1\u7528\u4e86\uff09\uff0c\u6309\u8be5\u7b56\u7565\u8d2a\u5fc3\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint n,a[N];\nll ans;\nint main(){\n    n=read();\n    rep(i,1,n)a[i]=read();\n    rep(i,1,n){\n        ans+=a[i]/2;\n        a[i]%=2;\n        if(a[i]&amp;&amp;a[i+1]){\n            --a[i];--a[i+1];++ans;\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC003%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#c","title":"C","text":"<p>\u6700\u5c0f\u5316\u64cd\u4f5c\u4e00\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u65e0\u9650\u6b21\u4f7f\u7528\u64cd\u4f5c\u4e8c\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u7b49\u4ef7\u4e8e\u4ea4\u6362 \\(a_i,a_{i+2}\\) \u4e24\u4e2a\u5143\u7d20\uff0c\u4e5f\u5c31\u662f\u4ea4\u6362\u76f8\u90bb\u7684\u5947\u6570\u6216\u5076\u6570\u4e0b\u6807\u7684\u5143\u7d20\u3002\u8fd9\u4e9b\u5bf9\u6362\u53ef\u4ee5\u751f\u6210\u6240\u6709\u5947\u6570\u4f4d\u548c\u5076\u6570\u4f4d\u7684\u7f6e\u6362\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6392\u5e8f\u524d\u540e\u7684\u4e0b\u6807\u5947\u5076\u6027\u4e0d\u540c\u7684\u5143\u7d20\u4f7f\u7528\u64cd\u4f5c\u4e00\u5373\u53ef\u3002\u6bcf\u6b21\u64cd\u4f5c\u4e00\u53ef\u4ee5\u51cf\u5c11\u4e24\u4e2a\u8fd9\u6837\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u7b54\u6848\u8981\u9664\u4ee52\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nstruct node{int v,id;}a[N];\nbool cmp(node a,node b){return a.v&lt;b.v;}\nint n,ans;\nint main(){\n    n=read();\n    rep(i,1,n)a[i]={read(),i};\n    sort(a+1,a+n+1,cmp);\n    rep(i,1,n){\n        if(i%2!=a[i].id%2)ans++;\n    }\n    printf(\"%d\\n\",ans/2);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC003%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#d","title":"D","text":"<p>\u6709\u4e00\u8bf4\u4e00\u8fd9\u9898\u6ca1\u5230\u9ed1\u9898\u96be\u5ea6\u5427\uff0c\u7b97\u662f\u6bd4\u8f83\u5e38\u89c4\u7684\u6570\u8bba\u9898\uff08</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u6b63\u6574\u6570 \\(x\\) \u6211\u4eec\u8003\u8651\u4e24\u79cd\u6570\uff0c\\(Pair(x)\\) \u8868\u793a\u4e0e \\(x\\) \u76f8\u4e58\u4e3a\u7acb\u65b9\u6570\u7684\u6700\u5c0f\u6b63\u6574\u6570\uff0c\u800c \\(Norm(x)\\) \u8868\u793a \\(x\\) \u53bb\u6389\u6240\u6709\u7acb\u65b9\u56e0\u5b50\u540e\u7684\u6b63\u6574\u6570\u3002\u53ef\u4ee5\u53d1\u73b0\u4e24\u4e2a\u6570\u5982\u679c\u62e5\u6709\u540c\u6837\u7684 \\(Norm\\) \uff0c\u90a3\u4e48\u4e5f\u4f1a\u6709\u540c\u6837\u7684 \\(Pair\\) \uff0c\u4e5f\u5c31\u662f\u8fd9\u4e24\u4e2a\u6570\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u3002\u800c\u5982\u679c\u4e00\u4e2a\u6570\u7684 \\(Norm\\) \u662f\u53e6\u4e00\u4e2a\u6570\u7684 \\(Pair\\) \uff0c\u90a3\u4e48\u8fd9\u4e24\u6570\u663e\u7136\u4e0d\u80fd\u540c\u65f6\u9009\u5165\u7b54\u6848\u3002\u4e8e\u662f\u7b54\u6848\u5c31\u662f\u5bf9\u4e8e \\(s[i]\\) \u4e2d\u6240\u6709\u672c\u8d28\u4e0d\u540c\u7684 \\(x\\) \uff0c\u6c42 \\(s[i]\\) \u4e2d\u672c\u8d28\u4e3a \\(Norm(x)\\) \u6216 \\(Pair(x)\\) \u7684\u4e2a\u6570\u7684\u6700\u5927\u503c\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u5982\u4f55\u6c42\u89e3 \\(Norm(x)\\) \uff0c\u5176\u5b9e\u53ea\u9700\u8981\u7b5b\u6389\u6240\u6709\u7acb\u65b9\u56e0\u5b50\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e5f\u5c31\u662f \\(\\le 10^\\frac{10}{3}\\approx 2160\\) \u7684\u8d28\u6570\u7684\u7acb\u65b9\u3002\u7b5b\u5b8c\u4e4b\u540e\u628a\u8fd9\u4e9b\u8d28\u6570\u5269\u4e0b\u7684\u6b21\u5e42\u4e5f\u4ece \\(x\\) \u4e2d\u7b5b\u6389\uff0c\u5e76\u8d21\u732e\u7ed9 \\(Pair(x)\\) \u3002\u7531\u4e8e\u5269\u4e0b\u7684\u56e0\u5b50\u5927\u4e8e\u539f\u6765 \\(x^\\frac{1}{3}\\) \uff0c\u63a8\u51fa\u6700\u540e\u5269\u4e0b\u7684 \\(x\\) \u53ea\u6709\u51e0\u7c7b\uff1a</p> <ul> <li>\\(x\\) \u4e3a\u8d28\u6570</li> <li>\\(x\\) \u4e3a\u8d28\u6570\u7684\u5e73\u65b9</li> <li>\\(x\\) \u4e3a\u4e0d\u540c\u8d28\u6570\u7684\u79ef</li> </ul> <p>\u5bf9\u4e8e\u7b2c\u4e00\u7c7b\u548c\u7b2c\u4e09\u7c7b\uff0c\u5bb9\u6613\u5f97\u51fa \\(Pair(x)=x^2\\) \u3002\u800c\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\uff0c\\(Pair(x)=\\sqrt x\\) \u3002\u6700\u540e\u628a\u8fd9\u4e2a\u6570\u52a0\u5165 \\(Norm(x)\\) \u7684\u6876\u91cc\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\frac{(MAX s_i)^\\frac13}{\\log MAX s_i})+O(N\\log N)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+10;\nll n,pri[N],tot;\nll a[N],b[N],ans;\nbool vis[N];\nmap&lt;ll,ll&gt;mp;\nint main(){\n    n=read();\n    rep(i,2,2160){\n        if(!vis[i])pri[++tot]=i;\n        for(int j=1;j&lt;=tot&amp;&amp;pri[j]*i&lt;=2160;j++){\n            vis[i*pri[j]]=1;\n            if(i%pri[j]==0)break;\n        }\n    }\n    rep(i,1,n){\n        scanf(\"%lld\",&amp;a[i]);\n        ll norm=1,pair=1;\n        rep(j,1,tot){\n            ll cube=pri[j]*pri[j]*pri[j];\n            while(a[i]%cube==0)a[i]/=cube;\n        }\n        ++mp[a[i]];norm=a[i];\n        rep(j,1,tot){\n            if(a[i]%pri[j]!=0)continue;\n            if(a[i]%(pri[j]*pri[j]))pair*=pri[j]*pri[j];\n            else pair*=pri[j];\n            while(a[i]%pri[j]==0)a[i]/=pri[j];\n        }\n        ll sqr=(ll)sqrt(a[i]);\n        if(sqr*sqr!=a[i])pair*=a[i]*a[i];\n        else pair*=sqr;\n        a[i]=norm;b[i]=pair;\n    }\n    rep(i,1,n){\n        if(a[i]==1)continue;\n        ans+=max(mp[a[i]],mp[b[i]]);\n        mp[a[i]]=mp[b[i]]=0;\n    }\n    printf(\"%lld\\n\",ans+!!mp[1]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC003%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#e","title":"E","text":"<p>\u795e\u4ed9\u9898\u3002</p> <p>\u9996\u5148\u5982\u679c\u9047\u5230\u4e86 \\(A_{i+1}&lt;A_i\\) \u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u4e0d\u7528\u8003\u8651 \\(A_i\\) \uff08\u56e0\u4e3a\u540e\u8005\u53d6\u4e86\u66f4\u5c0f\u7684\u533a\u95f4\uff09\u3002\u4e8e\u662f\u53ef\u4ee5\u5148\u7528\u5355\u8c03\u6808\u641e\u51fa\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217\uff0c\u8fd9\u4e0e\u539f\u5e8f\u5217\u7684\u64cd\u4f5c\u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u91cd\u590d\u76ee\u524d\u7684\u5e8f\u5217 \\(\\lfloor\\dfrac{A_i}{A_{i-1}}\\rfloor\\) \u6b21\uff0c\u7136\u540e\u518d\u53d6\u539f\u5e8f\u5217\u957f\u5ea6 \\(d\\equiv A_i\\pmod{A_{i-1}}\\) \u7684\u524d\u7f00\u3002</p> <p>\u95ee\u9898\u5728\u4e8e\u8fd9\u4e00\u5c0f\u6bb5\u4e0d\u91cd\u590d\u7684\u524d\u7f00\uff0c\u800c\u5b83\u5728\u524d\u9762\u4e5f\u4e00\u5b9a\u662f\u67d0\u4e00\u6bb5 \\(A_j\\) \u7684\u91cd\u590d\u51fa\u73b0\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5206\u89e3\u8fd9\u6bb5\u524d\u7f00\uff0c\u7531\u4e8e\u5e8f\u5217\u5355\u8c03\u9012\u589e\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u6ee1\u8db3 \\(A_j&lt;d,A_{j+1}&gt;d\\) \u7684 \\(j\\) \u5e76\u4e14\u7528\u5b83\u6765\u53d6\u6a21\uff0c\u9012\u5f52\u6c42\u89e3\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u5230\u6bcf\u6b21\u53d6\u6a21 \\(d\\) \u81f3\u5c11\u51cf\u5c0f\u4e00\u534a\uff0c\u9012\u5f52\u5230\u5e95\u65f6\u5c31\u662f \\(1\\) \u5230 \\(d\\) \u7684\u524d\u7f00\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u53ef\u4ee5\u7528\u5dee\u5206\u5b9e\u73b0\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define ll long long\nusing namespace std;\nconst int N=1e5+5;\nint n,q,len;\nll A[N],F[N],tim[N];\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nvoid Solve(ll d,ll w){\n    int j=upper_bound(A+1,A+len+1,d)-A-1;\n    if(!j) tim[1]+=w,tim[d+1]-=w;\n    else F[j]+=d/A[j]*w,Solve(d%A[j],w);\n}\nint main(){\n    n=read(),q=read();\n    A[++len]=n;\n    while(q--){\n        ll x=read();\n        while(len&amp;&amp;A[len]&gt;=x) len--;\n        A[++len]=x;\n    }\n    F[len]=1;\n    for(int i=len;i&gt;=2;i--) F[i-1]+=A[i]/A[i-1]*F[i],Solve(A[i]%A[i-1],F[i]);\n    tim[1]+=F[1];tim[A[1]+1]-=F[1];\n    for(int i=1;i&lt;=n;i++) printf(\"%lld\\n\",tim[i]+=tim[i-1]);\n}\n</code></pre>"},{"location":"Old%20Posts/AGC003%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#f","title":"F","text":"<p>\u9996\u5148\u770b\u7b80\u5355\u60c5\u5f62\uff1a</p> <ul> <li>\u5f53\u8fd9\u4e2a\u56fe\u5f62\u4e0a\u4e0b\uff0c\u5de6\u53f3\u62fc\u63a5\u90fd\u662f\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u603b\u8fde\u901a\u5757\u6570\u4e3a \\(1\\) \u3002</li> <li>\u5f53\u8fd9\u4e2a\u56fe\u5f62\u4e0a\u4e0b\uff0c\u5de6\u53f3\u62fc\u63a5\u90fd\u4e0d\u662f\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u603b\u8fde\u901a\u5757\u6570\u4e3a \\(cnt^{K-1}\\) \uff0c\u5176\u4e2d \\(cnt\\) \u4e3a\u9ed1\u683c\u6570\u91cf\u3002</li> </ul> <p>\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u8fd9\u4e2a\u56fe\u5f62\u4e0a\u4e0b\u548c\u5de6\u53f3\u62fc\u63a5\u53ea\u6709\u4e00\u4e2a\u662f\u8fde\u901a\u5757\u7684\u60c5\u51b5\u3002\u4e0d\u59a8\u8bbe\u5de6\u53f3\u8fde\u901a\u3002\\(1\\) \u7ea7\u5206\u5f62\u7684\u6570\u91cf\u5f88\u597d\u7b97\u800c\u4e14\u662f\u8fde\u901a\u5757\uff0c\u800c\u6211\u4eec\u53c8\u77e5\u9053\u8fde\u901a\u5757\u6570=\u9ed1\u70b9\u4e2a\u6570 - \u8fb9\u6570\uff0c\u53ea\u7528\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u8fb9\u6570\u3002\u800c\u4e0a\u4e0b\u4e0d\u8fde\u901a\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f \\(K-1\\) \u7ea7\u5206\u5f62\u4e2d \u9ed1\u70b9\u4e2a\u6570 - \u5de6\u53f3\u76f8\u90bb\u9ed1\u683c\u7684\u5bf9\u6570\u3002</p> <p>\u8bbe\u539f\u56fe\u5de6\u53f3\u76f8\u90bb\u5bf9\u6570\u6709 \\(a\\) \u4e2a\uff0c\u5de6\u53f3\u8fde\u901a\u7684\u884c\u6570\u4e3a \\(b\\) \u3002\u90a3\u4e48 \\(K\\) \u7ea7\u5206\u5f62\u7684\u5de6\u53f3\u8fde\u901a\u884c\u6570\u4e3a \\(K-1\\) \u5206\u5f62\u7684\u5de6\u53f3\u8fde\u901a\u884c\u6570 \\(\\times b\\) \u3002\\(K\\)\u7ea7\u5206\u5f62\u7684\u76f8\u90bb\u5bf9\u6570\u5c31\u662f\u4e0a\u7ea7\u5206\u5f62\u7684\u76f8\u90bb\u5bf9\u6570 \\(\\times b\\) \u52a0\u4e0a\u9ed1\u683c\u6570\u91cf \\(\\times a\\) \uff08\u9ed1\u683c\u66ff\u6362\u4e3a\u539f\u7f51\u683c\u56fe\uff09\u3002</p> <p>\u8fd9\u4e2a\u9012\u63a8\u7b49\u4ef7\u4e8e\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6c42 \\(A=\\begin{bmatrix}  cnt &amp;a \\\\   0&amp;b \\end{bmatrix}^{K-1}\\) \uff0c\u7b54\u6848\u4e3a \\(A_{11}-A_{12}\\) \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int P=1e9+7;\nint n,m,cnt,s1,s2,flag1,flag2;\nll k;\nchar s[1005][1005];\nll fpow(ll x,ll y){\n    ll res=1;\n    while(y){\n        if(y&amp;1)res=res*x%P;\n        y&gt;&gt;=1;x=x*x%P;\n    }\n    return res;\n}\nstruct Matrix{\n    ll a[3][3];\n    Matrix(){memset(a,0,sizeof(a));}\n    Matrix operator*(const Matrix &amp;M){\n        Matrix ans;\n        rep(i,1,2)rep(j,1,2)rep(k,1,2)\n        ans.a[i][j]=(ans.a[i][j]+a[i][k]*M.a[k][j]%P)%P;\n        return ans;\n    }\n}A,ans;\nint main(){\n    n=read(),m=read(),k=read()-1;\n    rep(i,1,n)scanf(\"%s\",s[i]+1);\n    rep(i,1,n){\n        rep(j,1,m){\n            if(s[i][j]=='#'){\n                ++cnt;\n                s1+=s[i][j-1]=='#';\n                s2+=s[i-1][j]=='#';\n            }\n        }\n        if(s[i][1]=='#'&amp;&amp;s[i][m]=='#')++flag1;\n    }\n    rep(i,1,m)if(s[1][i]=='#'&amp;&amp;s[n][i]=='#')++flag2;\n    if(flag1&amp;&amp;flag2)return puts(\"1\"),0;\n    if(!flag1&amp;&amp;!flag2){\n        printf(\"%lld\\n\",fpow(cnt,k));\n        return 0;\n    }\n    if(!flag1)swap(flag1,flag2),swap(s1,s2);\n    A.a[1][1]=cnt,A.a[1][2]=s1,A.a[2][2]=flag1;\n    ans.a[1][1]=1,ans.a[2][2]=1;\n    while(k){\n        if(k&amp;1)ans=ans*A;\n        k&gt;&gt;=1;A=A*A;\n    }\n    printf(\"%lld\\n\",(ans.a[1][1]-ans.a[1][2]+P)%P);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC004%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"AGC004 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC004%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#a","title":"A","text":"<p>\u8fb9\u957f\u4e2d\u6709\u5076\u6570\u5c31\u53ef\u4ee5\u5e73\u5206\u8f93\u51fa \\(0\\) \uff0c\u5426\u5219\u8f93\u51fa\u6700\u5c0f\u7684\u4e00\u9762\u7684\u65b9\u5757\u6570\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint main(){\n    ll a=read(),b=read(),c=read();\n    if(a&amp;1&amp;&amp;b&amp;1&amp;&amp;c&amp;1){\n        printf(\"%lld\\n\",min(a*min(b,c),b*c));\n    }else puts(\"0\");\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC004%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#b","title":"B","text":"<p>\u5999\u8d2a\u5fc3\uff08.</p> <p>\u5047\u8bbe\u6211\u4eec\u541f\u5531\u4e86 \\(k\\) \u6b21\u9b54\u6cd5\u540e\u5b8c\u6210\u6536\u96c6\uff0c\u90a3\u4e48 \\(i\\) \u8272\u53f2\u83b1\u59c6\u6709\u53ef\u80fd\u4e3a \\([i-k,i]\\) \uff08\u4e0b\u6807\u5bf9 \\(N\\) \u53d6\u6a21\uff09\u7684\u4efb\u610f\u4e00\u4e2a\u53f2\u83b1\u59c6\u53d8\u5316\u800c\u6765\uff0c\u6700\u5c0f\u4ee3\u4ef7\u5373\u4e3a\u533a\u95f4\u4e2d \\(a_j\\) \u7684\u6700\u5c0f\u503c\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^2)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e3+5;\nll n,x,a[N],M[N][N];\nll ans;\nint main(){\n    n=read(),x=read();\n    rep(i,1,n)M[i][i]=a[i]=read();\n    rep(i,1,n)rep(j,i+1,n){\n        M[i][j]=min(M[i][j-1],a[j]);\n    }\n    ans=9e18;\n    rep(i,0,n){\n        ll cost=i*x;\n        rep(j,1,n){\n            int last=j-i;\n            if(last&lt;=0)cost+=min(M[last+n][n],M[1][j]);\n            else cost+=M[last][j];\n        }\n        ans=min(ans,cost);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC004%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#c","title":"C","text":"<p>\u6784\u9020\u9898\u901a\u5e38\u9700\u8981\u7528\u4e0a\u7ed9\u5b9a\u7684\u7384\u5b66\u6761\u4ef6\u3002\u6bd4\u5982\u8fd9\u9053\u9898\u4e2d\u7684\u300c\u4fdd\u8bc1\u8fb9\u754c\u4e0a\u4e0d\u4f1a\u88ab\u6d82\u8272\u300d\u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u627e\u901a\u89e3\uff0c\u5e76\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u7d2b\u8272\u683c\u5b50\u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u60f3\u5230\u5148\u6784\u9020\u6ca1\u6709\u4ea4\u96c6\u7684\u7ea2\u8272\u548c\u84dd\u8272\u683c\u5b50\uff0c\u5e76\u4e14\u8981\u4fdd\u8bc1\u56db\u8fde\u901a\u4e14\u4e0e\u7d2b\u8272\u683c\u5b50\u8fde\u901a\u3002\u6700\u4e0a\u9762\u4e00\u884c\u548c\u6240\u6709\u5947\u6570\u5217\u586b\u7ea2\u8272\uff0c\u6700\u4e0b\u9762\u4e00\u884c\u548c\u6240\u6709\u5076\u6570\u5217\u586b\u84dd\u8272\uff08\u50cf\u4e24\u628a\u68b3\u5b50\u4e0a\u4e0b\u5361\u5728\u4e00\u8d77\uff09\u3002\u8fd9\u79cd\u6784\u9020\u663e\u7136\u6ee1\u8db3\u56db\u8fde\u901a\uff0c\u6700\u540e\u53d6\u989c\u8272\u96c6\u5408\u4e0e\u7d2b\u8272\u683c\u5b50\u7684\u5e76\u96c6\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint n,m;\nchar s[505][505];\nint main(){\n    n=read(),m=read();\n    rep(i,1,n)scanf(\"%s\",s[i]+1);\n    rep(i,1,n){\n        rep(j,1,m){\n            if(i==n)printf(\".\");\n            else if(i==1||j&amp;1||s[i][j]=='#')printf(\"#\");\n            else printf(\".\");\n        }\n        puts(\"\");\n    }\n    puts(\"\");\n    rep(i,1,n){\n        rep(j,1,m){\n            if(i==1)printf(\".\");\n            else if(i==n||j%2==0||s[i][j]=='#')printf(\"#\");\n            else printf(\".\");\n        }\n        puts(\"\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC004%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#d","title":"D","text":"<p>\u7ed9\u4e86\u4e00\u4e2a\u57fa\u73af\u5185\u5411\u6811\uff0c\u5e76\u4e14\u4fdd\u8bc1 \\(1\\) \u53f7\u8282\u70b9\u5728\u73af\u4e0a\u3002\u5982\u679c\u73af\u957f\u4e0d\u4e3a \\(1\\) \uff08\u5373\u4e0d\u662f \\(1\\) \u53f7\u8282\u70b9\u7684\u81ea\u73af\uff09\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\u73af\u4e0a\u7684\u70b9\u5230\u8fbe \\(1\\) \u53f7\u70b9\u7684\u6b21\u6570\u65e0\u6cd5\u90fd\u6070\u597d\u4e3a \\(K\\) \u3002\u4e8e\u662f\u5fc5\u987b\u65ad\u6389\u539f\u8fb9\u6539\u6210\u81ea\u73af\u3002</p> <p>\u5269\u4e0b \\(N-1\\) \u6761\u8fb9\u6784\u6210\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u60f3\u9009\u4e00\u4e9b\u8fb9\u628a\u5b83\u8fde\u5411 \\(1\\) \uff0c\u8fd9\u4e2a\u64cd\u4f5c\u4f1a\u628a\u539f\u6811\u5206\u6210\u51e0\u9897\u6811\uff0c\u4e14\u8981\u6ee1\u8db3\u6df1\u5ea6\u4e0d\u8d85\u8fc7 \\(K-1\\) \u3002\u6ce8\u610f\u5230\u8ddd\u79bb\u4e0d\u5230 \\(K\\) \u7684\u8282\u70b9\u53ef\u4ee5\u63d0\u524d\u5230\u8fbe \\(1\\) \u4e4b\u540e\u7ed5\u81ea\u73af\u8dd1\uff0c\u6ee1\u8db3\u8981\u6c42\u3002\u8d2a\u5fc3\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint n,k,ans,a[N];\nvector&lt;int&gt; G[N];\nint dfs(int u,int dep){\n    int ret=dep;//\u5f53\u524d\u6df1\u5ea6\n    for(int v:G[u]){\n        ret=max(ret,dfs(v,dep+1));//\u5b50\u6811\u4e2d\u8282\u70b9\u6700\u6df1\u7684\u6df1\u5ea6\n    }\n    if(a[u]!=1&amp;&amp;ret-dep==k-1)return ++ans,0;//\u5982\u679c\u4e3ak-1\u5219\u65ad\u8fb9\u5e76\u4e14\u65b0\u6df1\u5ea6\u4e3a0\n    return ret;\n}\nint main(){\n    n=read(),k=read();\n    rep(i,1,n)a[i]=read();\n    if(a[1]!=1)ans=a[1]=1;\n    rep(i,2,n)G[a[i]].push_back(i);\n    dfs(1,0);printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC004%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#e","title":"E","text":"<p>dp\u795e\u9898\u3002</p> <p>\u9996\u5148\u89c2\u5bdf\u5230\u51fa\u53e3\u5728\u68cb\u76d8\u4e0a\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u4e0d\u59a8\u628a\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8f6c\u5316\u6210\u51fa\u53e3\u5e26\u7740\u68cb\u76d8\u7684\u8fd0\u52a8\uff0c\u6389\u4e0b\u68cb\u76d8\u7684\u68cb\u5b50\u5c31\u6ca1\u4e86\u3002\u4e0d\u59a8\u89c2\u5bdf\u4e00\u4e0b\u51fa\u53e3\u7b2c\u4e00\u6b21\u79fb\u52a8\u5e26\u6765\u7684\u5f71\u54cd\uff0c\u5411\u4e0a\u8d70\u4e00\u6b65\u4f1a\u628a\u6700\u4e0b\u9762\u4e00\u884c\u7684\u673a\u5668\u4eba\u6d88\u9664\uff0c\u540c\u65f6\u6709\u53ef\u80fd\u6551\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u673a\u5668\u4eba\u3002\u5176\u4ed6\u65b9\u5411\u79fb\u52a8\u7684\u7ed3\u679c\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u91cd\u8981\u7684\u89c2\u5bdf\u662f\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u51fa\u53e3\u8fd0\u52a8\u7684\u5168\u8fc7\u7a0b\uff0c\u53ea\u9700\u8981\u77e5\u9053\u56db\u4e2a\u65b9\u5411\u5206\u522b\u8d70\u5230\u8fc7\u591a\u8fdc\u3002\u5177\u4f53\u5730\uff0c\u6211\u4eec\u8bbe\u56db\u4e2a\u65b9\u5411\u5206\u522b\u8d70\u4e86 \\(l,r,u,d\\) \u8ddd\u79bb\u3002\u5728\u51fa\u53e3\u4ecd\u5728\u8fd9\u4e2a\u8303\u56f4\u6d3b\u52a8\uff0c\u4e0d\u6539\u53d8\u8fd9\u4e2a\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\uff0c\u5e76\u4e0d\u4f1a\u6709\u65b0\u7684\u673a\u5668\u4eba\u6389\u4e0b\u68cb\u76d8\u3002\u800c\u51fa\u53e3\u6bcf\u8d70\u4e00\u6b65\uff0c\u6700\u591a\u5c06 \\(l,r,u,d\\) \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a \\(+1\\) \u6765\u6539\u53d8\u72b6\u6001\uff0c\u800c\u8fd9\u53ef\u4ee5 \\(dp\\) \uff01</p> <p>\u5b9a\u4e49 \\(f_{l,r,u,d}\\) \u4e3a\u56db\u4e2a\u65b9\u5411\u5206\u522b\u8d70\u4e86 \\(l,r,u,d\\) \u8ddd\u79bb\u540e\u6551\u5230\u673a\u5668\u4eba\u7684\u6700\u5927\u503c\u3002\u5982\u679c\u67d0\u4e2a\u65b9\u5411\u8fd8\u6709\u673a\u5668\u4eba\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u671d\u8fd9\u4e2a\u65b9\u5411\u6269\u5c55\u3002\u7531\u4e8e \\(l,r,u,d\\) \u672c\u8d28\u4e0a\u662f\u6846\u67f1\u4e86\u4e00\u4e2a\u77e9\u5f62\uff0c\u6bcf\u6b21\u6269\u5c55\u4e5f\u4e00\u5b9a\u662f\u884c\u6216\u5217\u4e0a\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u4f18\u5316\u3002\u6700\u540e\u6ce8\u610f\u5230\u672c\u9898\u5361\u7a7a\u95f4\uff0c\u800c\u7b54\u6848\u503c\u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \\(short\\) \u5b58\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint n,m,x,y,i,j,l,r,u,d;\nshort f[105][105][105][105],s[105][105][2],ans;\nchar a[105];\ninline void Max(short &amp;x,const short &amp;y){if(y&gt;x)x=y;}\ninline short Sum(int i,int j,int x,bool op){\n    if(!op)return s[i][x][op]-s[j][x][op];\n    return s[x][i][op]-s[x][j][op];\n}\nint main(){\n    n=read(),m=read();\n    rep(i,1,n){\n        scanf(\"%s\",a+1);\n        rep(j,1,m){\n            if(a[j]=='E')x=i,y=j;\n            s[i][j][0]=s[i-1][j][0]+(a[j]=='o');\n            s[i][j][1]=s[i][j-1][1]+(a[j]=='o');\n        }\n    }\n    rep(l,0,y-1)rep(r,0,m-y)rep(u,0,x-1)rep(d,0,n-x){\n        ans=max(ans,f[l][r][u][d]);\n        if(l+r&lt;y-1)Max(f[l+1][r][u][d],f[l][r][u][d]+Sum(min(x+d,n-u),max(x-u-1,d),y-l-1,0));\n        if(l+r&lt;m-y)Max(f[l][r+1][u][d],f[l][r][u][d]+Sum(min(x+d,n-u),max(x-u-1,d),y+r+1,0));\n        if(u+d&lt;x-1)Max(f[l][r][u+1][d],f[l][r][u][d]+Sum(min(y+r,m-l),max(y-l-1,r),x-u-1,1));\n        if(u+d&lt;n-x)Max(f[l][r][u][d+1],f[l][r][u][d]+Sum(min(y+r,m-l),max(y-l-1,r),x+d+1,1));\n    }\n    printf(\"%d\\n\",(int)ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC005%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"AGC005 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC005%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#a","title":"A","text":"<p>\u7528\u6808\u52a0\u5165\u5143\u7d20\uff0c\u5982\u679c\u5f53\u524d\u662f'T'\u4e14\u524d\u9762\u662f'S'\u6d88\u6389\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nchar s[N];\nint st[N],top;\nint main(){\n    scanf(\"%s\",s+1);\n    for(int i=1;s[i];i++){\n        if(s[i]=='S')st[++top]=1;\n        if(s[i]=='T'){\n            if(st[top])top--;\n            else st[++top]=0;\n        }\n    }\n    cout&lt;&lt;top&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC005%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#b","title":"B","text":"<p>\u76f4\u63a5\u66b4\u529b\u662f \\(O(N^2)\\) \u7684\u80af\u5b9a\u4e0d\u884c\uff0c\u4e0d\u59a8\u8003\u8651\u6bcf\u4e2a\u5143\u7d20\u7ed9\u7b54\u6848\u7684\u8d21\u732e\u3002\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u5143\u7d20 \\(a_i\\) \uff0c\u627e\u51fa\u6700\u5c0f \\(l_i\\) \u548c\u6700\u5927 \\(r_i\\) \u4f7f\u5f97 \\([l_i,r_i]\\) \u533a\u95f4\u4e2d\u7684\u6700\u5c0f\u503c\u662f \\(a_i\\) \uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u6c42\u51fa \\(l_i,r_i\\) \u3002\u663e\u7136\u5bf9\u4e8e \\(l\\in[l_i,i],r\\in[i,r_i],[l,r]\\) \u533a\u95f4\u4e2d\u6700\u5c0f\u503c\u4e5f\u662f \\(a_i\\) \u3002\u4e8e\u662f \\(a_i\\) \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f \\((i-l_i+1)(r_i-i+1)a_i\\) \u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(N)\\) </p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,a[N],l[N],r[N],st[N],top;\nll ans;\nint main(){\n    n=read();\n    rep(i,1,n)a[i]=read();\n    rep(i,1,n){\n        while(top&amp;&amp;a[st[top]]&gt;a[i]){\n            r[st[top--]]=i-1;\n        }\n        st[++top]=i;\n    }\n    while(top)r[st[top--]]=n;\n    per(i,n,1){\n        while(top&amp;&amp;a[st[top]]&gt;a[i]){\n            l[st[top]]=i+1;top--;\n        }\n        st[++top]=i;\n    }\n    while(top)l[st[top--]]=1;\n    rep(i,1,n){\n        ans+=1ll*(r[i]-i+1)*(i-l[i]+1)*a[i];\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC005%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#c","title":"C","text":"<p>\u6784\u9020\u9898\u3002\u9996\u5148 \\(M=\\max a_i\\) \u4e3a\u8be5\u6811\u7684\u76f4\u5f84\u3002\u6211\u4eec\u8003\u8651\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u5b83\u4eec\u5728\u6811\u4e0a\u7684\u6700\u8fdc\u8ddd\u79bb\u663e\u7136\u662f\u5230\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u4e4b\u4e00\u7684\u8ddd\u79bb\uff0c\u4e8e\u662f\u8fd9\u4e9b\u70b9\u7684 \\(a_i\\) \u53d6\u503c\u5e94\u8be5\u4e3a \\(M,M-1,M-2,\\cdots,\\lfloor M/2\\rfloor+1,?,\\lfloor M/2\\rfloor +1,\\dots,M\\) \u3002\u5f53 \\(M\\) \u4e3a\u5076\u6570\u65f6\uff0c\\(?\\) \u5904\u4e3a\u4e24\u4e2a \\(M/2\\) \uff0c\u4e3a\u5947\u6570\u65f6\u5219\u4e0d\u5b58\u5728\u3002\u56e0\u6b64\uff0c\u80fd\u6784\u6210\u6811\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u4e0a\u8ff0\u8ddd\u79bb\u7684\u8fb9\u90fd\u8981\u6709\u8db3\u591f\u6570\u91cf\u3002</p> <p>\u63a5\u4e0b\u6765\u53ea\u7528\u8003\u8651\u8fd9\u4e2a\u6761\u4ef6\u662f\u5426\u5145\u5206\uff0c\u5373\u8003\u8651\u5269\u4e0b\u591a\u4f59\u7684\u6700\u8fdc\u8ddd\u79bb\u600e\u4e48\u4e0e\u8fd9\u6761\u94fe\u5173\u8054\u3002\u6211\u4eec\u5728\u94fe\u4e0a\u9664\u4e86\u5934\u548c\u5c3e\u7684\u5176\u4ed6\u8282\u70b9\u4e0a\u7ee7\u7eed\u6302\u8282\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u96be\u53d1\u73b0\u9664\u4e86 \\(\\lceil M/2\\rceil\\) \u8fd9\u4e2a\u8ddd\u79bb\uff08\u611f\u6027\u7406\u89e3\u4e3a\u6811\u7684\u534a\u5f84\uff09\u65e0\u6cd5\u6784\u9020\u51fa\u6765\uff0c\u5176\u4ed6\u8ddd\u79bb\u90fd\u53ef\u4ee5\u8fd9\u4e48\u6784\u9020\uff0c\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\u3002\u56e0\u4e3a \\(N\\) \u5f88\u5c0f\uff0c\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u5f00\u6876\u8bb0\u5f55\u8ddd\u79bb \\(x\\) \u7684\u6570\u91cf\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint n,c[110],mx;\nint main(){\n    n=read();\n    rep(i,1,n){\n        int x=read();++c[x];\n        mx=max(mx,x);\n    }\n    int mid=(mx+1)&gt;&gt;1;\n    for(int i=mx;i&gt;mid;--i){\n        if(c[i]&lt;2)return puts(\"Impossible\"),0;\n        n-=c[i];\n    }\n    if(c[mid]!=1+(mx&amp;1)||n!=c[mid])return puts(\"Impossible\"),0;\n    puts(\"Possible\");\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC005%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#d","title":"D","text":"<p>\u597ddp\u8ba1\u6570\u9898\u3002</p> <p>\u8003\u8651 \\(P_i=j\\) \u4e3a \\((i,a_j)\\) \u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u4e00\u4e2a\u6392\u5217\u53ef\u4ee5\u88ab\u8f6c\u5316\u6210 \\(n\\) \u4e2a\u70b9\u4e0e\u53e6 \\(n\\) \u4e2a\u70b9\u7684\u4e00\u4e2a\u5339\u914d\u3002\u518d\u770b \\(|P_i-i|\\neq K\\) \u8fd9\u4e2a\u9650\u5236\uff0c\u6b63\u9762\u4e0d\u597d\u505a\uff0c\u6211\u4eec\u8003\u8651\u7528\u5bb9\u65a5\u539f\u7406\u3002\u5373 \\(f_i\\) \u4e3a\u6709 \\(i\\) \u4e2a\u5730\u65b9\u4e0e\u9650\u5236\u77db\u76fe\uff0c\u7b54\u6848\u5c31\u662f \\(\\sum_{i=1}^n (-1)^i\\times f_i\\) \u3002</p> <p>\u5177\u4f53\u5730\uff0c\u6211\u4eec\u628a \\((i+K,a_i),(i-K,a_i)\\) \u8fde\u8fb9\uff0c\u90a3\u4e48\u56fe\u4e0a\u4f1a\u5f62\u6210\u82e5\u5e72\u6761\u4e0d\u76f8\u4ea4\u7684\u94fe\uff0c\u8fd9\u4e9b\u94fe\u4e0a\u9009\u4e86\u51e0\u6761\u8fb9\u4f5c\u4e3a\u5339\u914d\u7684\u8fb9\u5c31\u4f1a\u7edf\u8ba1\u8fdb \\(f_i\\) \u3002\u4e0d\u59a8\u5bf9\u8fd9\u4e9b\u4e0d\u76f8\u4ea4\u7684\u94fe\u5206\u522b\u8003\u8651\uff0c\u7531\u4e8e\u5339\u914d\u4e2d\u53ea\u7528\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u53ea\u4e0e\u53e6\u5916\u4e00\u4e2a\u70b9\u914d\u5bf9\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0 \\(dp[i][j][0/1]\\) \u4e3a\u5f53\u524d\u8003\u8651\u5230\u7b2c \\(i\\) \u4e2a\u70b9\uff0c\u8fde\u63a5\u4e86 \\(j\\) \u6761\u8fb9\uff0c\u7b2c \\(i-1\\) \u4e2a\u70b9\u662f\u5426\u88ab\u5339\u914d\u3002\u4e8e\u662f\u6709\uff1a  \u6700\u7ec8\u6709 \\(f_i=(n-i)!\\times dp[2n][i]\\) \uff08\u5269\u4e0b \\(n-i\\) \u4e2a\u6570\u53ef\u4ee5\u968f\u4fbf\u6392\u5217 \uff09\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^2)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2010,P=924844033;\nint n,k,tot;\nll fac[N],dp[N&lt;&lt;1][N][2],ans;\nbool vis[N&lt;&lt;1];\ninline ll Add(const ll x,const ll y){return (x+y&gt;=P)?x+y-P:x+y;}\ninline ll Del(const ll x,const ll y){return (x-y&lt;0)?x-y+P:x-y;}\nint main(){\n    n=read(),k=read();\n    fac[0]=1;\n    rep(i,1,n)fac[i]=fac[i-1]*i%P;\n    rep(i,1,k){\n        rep(t,0,1){\n            for(int j=i;j&lt;=n;j+=k){\n                tot++;\n                if(i!=j)vis[tot]=1;\n            }\n        }\n    }\n    dp[0][0][0]=1;\n    rep(i,1,n&lt;&lt;1)rep(j,0,n){\n        dp[i][j][0]=Add(dp[i-1][j][0],dp[i-1][j][1]);\n        if(vis[i]&amp;&amp;j)dp[i][j][1]=dp[i-1][j-1][0];\n    }\n    rep(i,0,n){\n        if(i&amp;1)ans=Del(ans,(dp[n&lt;&lt;1][i][0]+dp[n&lt;&lt;1][i][1])*fac[n-i]%P);\n        else ans=Add(ans,(dp[n&lt;&lt;1][i][0]+dp[n&lt;&lt;1][i][1])*fac[n-i]%P);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC005%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#e","title":"E","text":"<p>\u795e\u4ed9\u9898\u3002</p> <p>\u9996\u5148\u8003\u8651\u5148\u624b\u5982\u4f55\u4e00\u76f4\u82df\u4e0b\u53bb\u3002\u5982\u679c\u5b58\u5728\u4e00\u6761\u7ea2\u8fb9 \\((u,v)\\) \uff0c\u800c \\(u\\) \u548c \\(v\\) \u5728\u84dd\u6811\u4e0a\u7684\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e \\(3\\) \uff0c\u90a3\u4e48\u540e\u624b\u6c38\u8fdc\u6293\u4e0d\u5230\u5148\u624b\u3002\u56e0\u4e3a\u5148\u624b\u53ef\u4ee5\u7b49\u540e\u624b\u9760\u8fd1\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u540e\u671d\u53e6\u4e00\u4e2a\u8282\u70b9\u8dd1\uff0c\u540e\u624b\u6c38\u8fdc\u8ffd\u4e0d\u4e0a\u5148\u624b\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u8003\u8651\u5148\u624b\u8d70\u5230\u8fd9\u6837\u7684\u8fb9\u4e4b\u524d\uff0c\u6e38\u620f\u51b3\u7b56\u662f\u600e\u6837\u7684\u3002\u6ce8\u610f\u5230\u8fd9\u610f\u5473\u7740\u5148\u624b\u7ecf\u8fc7\u7684\u6240\u6709\u8fb9\u5728\u84dd\u6811\u4e0a\u8ddd\u79bb\u4e0d\u8d85\u8fc7 \\(2\\) \u3002\u8fd9\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63a8\u51fa\u5148\u624b\u6240\u5728\u7684\u70b9 \\(v\\) \u5728\u84dd\u6811\u4e0a\u4e00\u5b9a\u5728\u540e\u624b\u6240\u5728\u70b9 \\(u\\) \u7684\u5b50\u6811\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u5f52\u7eb3\u8bc1\u660e\u3002\u6ca1\u6709\u64cd\u4f5c\u65f6\u84dd\u6811\u4ee5\u540e\u624b\u8282\u70b9\u4e3a\u6839\uff0c\u5047\u8bbe\u6210\u7acb\u3002\u800c\u6bcf\u4e00\u6b65\u64cd\u4f5c\u5148\u624b\u7684\u4ece \\(v\\) \u79fb\u52a8\u5230 \\(v'\\) \uff0c\\((v,v')\\) \u5728\u84dd\u6811\u8ddd\u79bb\u4e0d\u8d85\u8fc7 \\(2\\) \uff0c\u8fd9\u8bf4\u660e\u5148\u624b\u65e0\u6cd5\u5728\u84dd\u6811\u4e2d\u8de8\u8d8a\u540e\u624b\u6240\u5728\u7684\u8282\u70b9\u3002\u5982\u679c\u8de8\u8d8a\u4e86\u5219\u540e\u624b\u53ef\u4ee5\u76f4\u63a5\u6293\u5230\u5b83\uff0c\u4e0d\u5982\u4e0d\u8d70\u3002</p> <p>\u4ece\u8fd9\u4e2a\u7ed3\u8bba\u51fa\u53d1\uff0c\u5bf9\u4e8e\u70b9 \\(u\\) \u5728\u7ea2\u6811\u548c\u84dd\u6811\u4e0a\u5230\u5404\u81ea\u6839\u8282\u70b9\u7684\u8ddd\u79bb \\(d_1,d_2\\) \uff0c\u5982\u679c\u6709 \\(d_1\\ge d_2\\) \uff0c\u90a3\u4e48\u5148\u624b\u4e0d\u4f1a\u628a\u68cb\u5b50\u79fb\u52a8\u5230\u8fd9\u91cc\u3002\u56e0\u4e3a\u5148\u624b\u4e0d\u8de8\u8fc7\u540e\u624b\u68cb\u5b50\uff0c\u5fc5\u7136\u4f1a\u6bd4\u540e\u624b\u665a\u5230\u8fd9\u4e2a\u8282\u70b9\u3002\u6240\u4ee5\u5148\u624b\u6bcf\u6b21\u64cd\u4f5c\u90fd\u8981\u4fdd\u8bc1 \\(d_1&lt;d_2\\) \u3002</p> <p>\u6700\u540e\u53ef\u4ee5\u641c\u7d22\u51fa\u662f\u5426\u80fd\u8fbe\u5230\u80fd\u65e0\u9650\u64cd\u4f5c\u7684\u8fb9\uff0c\u5982\u679c\u8fbe\u5230\u4e86\u7b54\u6848\u5c31\u662f \\(-1\\) \uff1b\u53cd\u4e4b\u7b54\u6848\u4e3a\u6700\u5927\u7684 \\(d_2\\) \u7684\u4e24\u500d\uff0c\u51b3\u7b56\u4e3a\u5148\u624b\u8d70\u5230\u8fd9\u91cc\u539f\u5730\u7b49\u6b7b\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\nusing namespace std;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,x,y,dr[N],d[N],fa[N],mx;\nbool flag;\nvector &lt;int&gt; R[N],B[N];\nvoid dfs1(int u,int f){\n    for(int v:B[u])if(v!=f){\n        fa[v]=u;d[v]=d[u]+1;\n        dfs1(v,u);\n    }\n}\nbool check(int u,int v){\n    return u!=fa[v]&amp;&amp;v!=fa[u]&amp;&amp;u!=fa[fa[v]]&amp;&amp;v!=fa[fa[u]]&amp;&amp;fa[u]!=fa[v];\n}\nvoid dfs2(int u,int f,int dep){\n    if(dep&gt;=d[u])return;\n    mx=max(mx,d[u]);\n    for(int v:R[u])if(v!=f){\n        if(check(u,v)){puts(\"-1\");exit(0);}\n        dfs2(v,u,dep+1);\n    }\n}\nint main(){\n    n=read(),x=read(),y=read();\n    rep(i,1,n-1){\n        int u=read(),v=read();\n        R[u].push_back(v);R[v].push_back(u);\n    }\n    rep(i,1,n-1){\n        int u=read(),v=read();\n        B[u].push_back(v);B[v].push_back(u);\n    }\n    dfs1(y,0);dfs2(x,0,0);\n    printf(\"%d\\n\",mx*2);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC005%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#f","title":"F","text":"<p>\u5999\u8ba1\u6570*2\u3002</p> <p>\u663e\u7136\u4e0d\u80fd\u679a\u4e3e\u5b50\u96c6\uff0c\u6211\u4eec\u5c1d\u8bd5\u7b97\u6bcf\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u8fd9\u79cd\u5e38\u89c1\u5957\u8def\u3002\u4e0d\u59a8\u5148\u8003\u8651 \\(u\\) \u5bf9 \\(f_k\\) \u7684\u8d21\u732e\uff0c\u5373\u6709\u591a\u5c11\u65b9\u6848\u4e2d\u7684\u70b9\u96c6\u8de8\u8d8a \\(u\\) ...\u8fd8\u662f\u6709\u70b9\u4e0d\u597d\u6c42\u3002</p> <p>\u6b63\u96be\u5373\u53cd\uff0c\u89c2\u5bdf\u53d1\u73b0\u5bb9\u6613\u6c42\u51fa\u5bf9\u4e8e \\(u\\) \u6709\u591a\u5c11\u65b9\u6848\u4e0d\u8de8\u8d8a\u5b83\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u96c6\u7684\u6700\u5c0f\u8fde\u901a\u5757\u4e0d\u5305\u542b\u5b83\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u5728 \\(u\\) \u7684\u513f\u5b50\u7684\u5b50\u6811\u4e2d \uff08\u6811\u4ee5 \\(u\\) \u4e3a\u6839\uff09\u3002\u628a\u5927\u5c0f\u4e3a \\(s\\) \u7684\u5b50\u6811\u4e2a\u6570\u8fdb\u884c\u7edf\u8ba1\uff0c\u62c6\u5f00\u7528\u7ec4\u5408\u6570\u5377\u4e00\u5377\u5c31\u53ef\u4ee5\u505a\u5230\u4e86\uff0c\u6ce8\u610f\u6a21\u6570 \\(924844033\\) \u7684\u539f\u6839\u662f \\(5\\) \u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n\\log n)\\) </p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define ll long long\nusing namespace std;\nconst ll N=3e5+5,P=924844033,G=5,IG=554906420;\nint n,lim,inv,head[N],tot;\nll A[N*10],B[N*10],fac[N],ifac[N];\nstruct Edge{int to,nxt;}e[N&lt;&lt;1];\ninline void add(int u,int v){e[++tot]={v,head[u]};head[u]=tot;}\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\ninline ll fpow(ll a,ll b){\n    ll ret=1;\n    while(b){\n        if(b&amp;1)ret=(ret*a)%P;\n        b&gt;&gt;=1;a=(a*a)%P;\n    }\n    return ret;\n}\nint rev[N],cnt[N],sz[N];\nll C(int n,int m){return 1ll*fac[n]*ifac[m]%P*ifac[n-m]%P;}\ninline void NTT(ll* A,int n,int op) {\n    rep(i,0,n-1)if (i&lt;rev[i]) swap(A[i],A[rev[i]]);\n    for (int i=1;i&lt;n;i&lt;&lt;=1) {\n        ll rot=fpow(op==1?G:IG,(P-1)/(i&lt;&lt;1));\n        for (int j=0;j&lt;n;j+=i&lt;&lt;1)\n            for (int k=0,w=1;k&lt;i;++k,w=1ll*w*rot%P) {\n                int x=A[j+k],y=1ll*w*A[j+k+i]%P;\n                A[j+k]=(x+y)%P,A[j+k+i]=(x-y+P)%P;\n            }\n    }\n    if (op==-1)rep(i,0,n-1)A[i]=1ll*A[i]*inv%P;\n}\nvector &lt;int&gt; E[N];\nvoid dfs(int u,int fa) {\n    sz[u] = 1;\n    for(int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dfs(v,u);sz[u]+=sz[v];++cnt[sz[v]];\n    }\n    ++cnt[n-sz[u]];\n}\nint main(){\n    n=read();\n    rep(i,1,n-1){\n        int u=read(),v=read();\n        add(u,v);add(v,u);\n    }\n    dfs(1,0);\n    int lim=1,l=0;\n    for (;lim&lt;=n&lt;&lt;1;lim&lt;&lt;=1,++l);\n    for (int i=0;i&lt;lim;++i) rev[i]=(rev[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(l-1));\n    inv=fpow(lim,P-2);\n    fac[0]=1;\n    rep(i,1,n)fac[i]=i*fac[i-1]%P;\n    ifac[n]=fpow(fac[n],P-2);\n    per(i,n,1)ifac[i-1]=ifac[i]*i%P;\n    rep(i,1,n)A[i]=1ll*cnt[i]*fac[i]%P;\n    reverse(A,A+n+1);\n    rep(i,0,n)B[i]=ifac[i];\n    NTT(A,lim,1);NTT(B,lim,1);\n    rep(i,0,lim-1)A[i]=A[i]*B[i]%P;\n    NTT(A,lim,-1);\n    reverse(A,A+n+1);\n    rep(i,1,n){\n        printf(\"%lld\\n\",(n*C(n,i)%P-A[i]*ifac[i]%P+P)%P);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC006%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"AGC006 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC006%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#a","title":"A","text":"<p>\u663e\u7136\u7b49\u4ef7\u4e8e\u6c42 \\(s\\) \u7684\u540e\u7f00\u4e0e \\(t\\) \u7684\u524d\u7f00\u76f8\u540c\u7684\u6700\u5927\u957f\u5ea6\u3002\u6ce8\u610f\u5230 \\(N\\le100\\) \uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u3002\u6211\u4e0d\u60f3\u66b4\u529b\u600e\u4e48\u529e\u554a\uff1f \u90a3\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u505a\u5230 \\(O(N)\\) \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int P=998244353;\nll n,p[105],pre[105],suf[105];\nchar s[105],t[105];\nint main(){\n    n=read();scanf(\"%s%s\",s+1,t+1);p[0]=1;\n    rep(i,1,n){\n        p[i]=p[i-1]*26%P;\n        pre[i]=(t[i]-'a'+pre[i-1]*26%P)%P;\n    }\n    rep(i,0,n-1){\n        suf[i+1]=(suf[i]+p[i]*(s[n-i]-'a')%P)%P;\n    }\n    for(int len=n;len;--len){\n        if(pre[len]==suf[len]){\n            printf(\"%d\\n\",2*n-len);return 0;\n        }\n    }\n    printf(\"%d\\n\",2*n);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC006%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#b","title":"B","text":"<p>\u6784\u9020\u9898\u3002\u4e0d\u59a8\u5148\u627e\u627e\u89c4\u5f8b\u548c\u6027\u8d28\uff0c\u6709</p> <ul> <li>\u5982\u679c\u67d0\u4e00\u884c\u4e2d\u76f8\u90bb\u5143\u7d20 \\(a_i=a_{i+1}=x\\) \uff0c\u90a3\u4e48\u8fd9\u884c\u5f80\u4e0a\u7684\u7b2c \\(i,i+1\\) \u5217\u7684\u5143\u7d20\u5747\u4e3a \\(x\\) \u3002</li> <li>\u56e0\u4e3a\u7b2c\u4e00\u5c42\u6570\u5b57\u9700\u8981\u4e3a\u7b2c\u4e8c\u5c42\u7684\u4e2d\u4f4d\u6570\uff0c\u6545 \\(1,2n-1\\) \u4e24\u6570\u4e0d\u53ef\u80fd\u5728\u9876\u5c42\u3002</li> </ul> <p>\u6709\u4e86\u8fd9\u4e24\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u4e0d\u59a8\u601d\u8003\u4e00\u4e0b\u5bf9\u4e8e\u6ee1\u8db3 \\(1&lt;x&lt;2n-1\\) \u7684 \\(x\\) \u5728\u9876\u5c42\u65f6\u8be5\u5982\u4f55\u6784\u9020\u3002\u6700\u597d\u7684\u6784\u9020\u5c31\u662f\u6700\u5e95\u5c42\u6ee1\u8db3 \\((a_{n-1},a_n,a_{n+1})\\) \u548c \\((a_n,a_{n+1},a_{n+2})\\) \u4e2d\u5747\u6709 \\(a_n=x\\) \u4e3a\u4e2d\u4f4d\u6570\uff0c\u7531\u6027\u8d281\u5f97\u9876\u5c42\u5143\u7d20\u4e00\u5b9a\u4e3a \\(x\\) \u3002</p> <p>\u6709\u4e00\u8bf4\u4e00\u8fd9\u9053\u9898rating\u624d1600\u600e\u4e48\u5c31\u7d2b\u4e86</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,x,ans[N];\nbool vis[N];\nint main(){\n    n=read(),x=read();\n    if(x==1||x==2*n-1)return puts(\"No\"),0;\n    if(x==2){\n        puts(\"Yes\");\n        ans[n-1]=2*n-1,ans[n]=2,ans[n+1]=1,ans[n+2]=2*n-2;\n        rep(i,1,n-2)ans[i]=i+2;\n        rep(i,n+3,2*n-1)ans[i]=i-2;\n    }else{\n        puts(\"Yes\");\n        ans[n-1]=1,ans[n]=x,ans[n+1]=2*n-1,ans[n+2]=2;\n        vis[1]=vis[x]=vis[2*n-1]=vis[2]=1;\n        int j=1;\n        rep(i,1,2*n-1){\n            while(ans[i])i++;\n            while(vis[j])j++;\n            ans[i]=j++;\n        }\n    }\n    rep(i,1,2*n-1)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC006%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#c","title":"C","text":"<p>\u6709\u70b9\u5999\u7684\u671f\u671b\u9898\u3002</p> <p>\u901a\u8fc7\u8ba1\u7b97\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b2c \\(i\\) \u4e2a\u5154\u5b50\u8df3\u8dc3\u540e\u65b0\u7684\u671f\u671b\u4f4d\u7f6e\u4e3a  \u770b\u8d77\u6765\u4e0d\u592a\u6709\u89c4\u5f8b\uff0c\u7136\u800c\u5982\u679c\u6211\u4eec\u753b\u4e86\u56fe\u7684\u8bdd\uff0c\u4f1a\u53d1\u73b0\u8fd9\u4e00\u6b21\u8df3\u8dc3\u672c\u8d28\u4e0a\u4ea4\u6362\u4e86 \\(d_i=a_i-a_{i-1},d_{i+1}=a_{i+1}-a_i\\) \u8fd9\u4e24\u6bb5\u8ddd\u79bb\u3002\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7\u79fb\u9879\u53d1\u73b0 \\(a'_i-a_{i-1}=d_{i+1},a_{i+1}-a'_i=d_i\\) \uff09\u7ed9\u5b9a\u7684 \\(m\\) \u4e2a\u4ea4\u6362\u6784\u6210\u4e00\u4e2a\u7f6e\u6362\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u7f6e\u6362 \\(k\\) \u6b21\u540e\u6700\u7ec8\u7684\u5e8f\u5217\uff0c\u628a\u5dee\u5206\u8fd8\u539f\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\u505a\u6cd5\u5f88\u591a\uff0c\u53ef\u4ee5\u4f7f\u7528\u5feb\u901f\u5e42\u6216\u8005\u5229\u7528\u4e00\u4e2a\u7f6e\u6362\u4e3a\u82e5\u5e72\u4e2a\u8f6e\u6362\u6784\u6210\u7684\u6027\u8d28\u3002\u4e24\u8005\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u4e3a \\(O(n\\log k)\\) \u548c \\(O(n)\\) \uff0c\u8fd9\u91cc\u7528\u7684\u662f\u5feb\u901f\u5e42\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint n,d[N],ans[N],T[N],a[N];\ndouble b[N];\nll m,k;\nint main(){\n    n=read();\n    rep(i,1,n)a[i]=read(),d[i]=ans[i]=i;\n    m=read(),k=read();\n    rep(i,1,m){\n        int x=read();\n        swap(d[x],d[x+1]);\n    }\n    while(k){\n        if(k&amp;1){\n            rep(i,1,n)T[i]=ans[d[i]];\n            rep(i,1,n)ans[i]=T[i];\n        }\n        rep(i,1,n)T[i]=d[d[i]];\n        rep(i,1,n)d[i]=T[i];\n        k&gt;&gt;=1;\n    }\n    rep(i,1,n)b[i]=a[ans[i]]-a[ans[i]-1];\n    rep(i,1,n)printf(\"%.1lf\\n\",b[i]+=b[i-1]);\n    return 0;\n}\n</code></pre> <p>### D</p> <p>\u4e8c\u5206\u601d\u60f3\u5f88\u5999\u7684\u5e94\u7528\u3002</p> <p>\u66b4\u529b\u663e\u7136\u4e0d\u884c\uff0c\u6211\u4eec\u56de\u5fc6\u4e00\u4e0bB\u4e2d\u5f97\u5230\u7684\u6027\u8d281\uff1a</p> <p>\u5982\u679c\u67d0\u4e00\u884c\u4e2d\u76f8\u90bb\u5143\u7d20 \\(a_i=a_{i+1}=x\\) \uff0c\u90a3\u4e48\u8fd9\u884c\u5f80\u4e0a\u7684\u7b2c \\(i,i+1\\) \u5217\u7684\u5143\u7d20\u5747\u4e3a \\(x\\) \u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u7b54\u6848\u6765\u68c0\u9a8c\u9876\u5c42\u5143\u7d20\u662f\u5426 \\(\\ge x\\) \u3002\u628a\u6240\u6709 \\(a_i&lt;x\\) \u8bbe\u4e3a \\(0\\) \uff0c \\(a_i\\ge x\\) \u8bbe\u4e3a \\(1\\) \uff0c\u90a3\u4e48\u6700\u63a5\u8fd1\u4e2d\u5fc3\u7684\u8fde\u7eed\u4e24\u4e2a\u76f8\u540c\u5143\u7d20\u51b3\u5b9a\u4e86\u9876\u7aef\u7684\u53d6\u503c\u3002\u5982\u679c\u8fde\u7eed\u4e24\u4e2a \\(1\\) \uff0c\u90a3\u4e48\u9876\u7aef\u4e5f\u4e3a \\(1\\) \uff0c\u5373 \\(\\ge x\\) \uff0c\u53cd\u4e4b\u9876\u7aef\u4e3a \\(0\\) \u3002\u53ea\u6709\u5f53 \\(01\\) \u4ea4\u9519\u65f6\u6ca1\u6709\u8fd9\u6837\u7684\u8fde\u7eed\u6bb5\uff0c\u6b64\u65f6\u9876\u7aef\u5143\u7d20 \\(=a_1\\) \u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n\\log n)\\) </p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,a[N],b[N];\nbool check(int x){\n    rep(i,1,2*n-1)b[i]=(a[i]&gt;=x);\n    rep(i,0,n-2){\n        if(b[n+i]==b[n+i+1])return b[n+i];\n        if(b[n-i]==b[n-i-1])return b[n-i];\n    }\n    return b[1];\n}\nint main(){\n    n=read();\n    rep(i,1,2*n-1)a[i]=read();\n    int l=1,r=2*n-1,ans;\n    while(l&lt;=r){\n        int mid=(l+r)&gt;&gt;1;\n        if(check(mid)){\n            l=mid+1;ans=mid;\n        }else r=mid-1;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC006%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#e","title":"E","text":"<p>\u4e00\u80a1 [AGC003C] BBuBBBlesort! \u7684\u65e2\u89c6\u611f\uff08\u3002</p> <p>\u89c2\u5bdf\u53d1\u73b0\u6bcf\u4e2a\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u4ea4\u6362\u5e76\u7ffb\u8f6c \\(i,i+2\\) \u4e24\u5217\uff0c\u540c\u65f6\u7ffb\u8f6c \\(i+1\\) \u5217\u3002\u6ce8\u610f\u5230\u64cd\u4f5c\u4e0d\u4f1a\u6539\u53d8\u6bcf\u4e00\u5217\u4e0b\u6807\u7684\u5947\u5076\u6027\uff0c\u4e8e\u662f\u53ef\u4ee5\u5206\u5947\u6570\u5217\u548c\u5076\u6570\u5217\u8fdb\u884c\u8003\u8651\u3002\u8bbe \\(tot_0,tot_1\\) \u5206\u522b\u4e3a\u5947\u6570\u5217\u548c\u5076\u6570\u5217\u7684\u603b\u64cd\u4f5c\u6b21\u6570\uff0c\\(inv_0, inv_1\\) \u4e3a\u5947\u5076\u5217\u98a0\u5012\u7684\u5217\u6570\u3002\u6ce8\u610f\u5230\u5947\u6570\u5217\u7684\u6bcf\u4e2a\u64cd\u4f5c\u4f1a\u5e26\u6765\u67d0\u4e2a\u5076\u6570\u5217\u7684\u4e00\u6b21\u7ffb\u8f6c\uff0c\u4e8e\u662f  \u662f\u80fd\u64cd\u4f5c\u56de\u539f\u77e9\u9635\u7684\u5fc5\u8981\u6761\u4ef6\u3002\u6b64\u65f6\u53ef\u4ee5\u5927\u80c6\u731c\u60f3\u8be5\u6761\u4ef6\u5145\u5206\uff0c\u56e0\u4e3a\u5e76\u4e0d\u9700\u8981\u8bc1\u660e\uff08\u96fe\uff09 \u4e0b\u9762\u8bc1\u660e\u5176\u5145\u5206\u6027\u3002\u8bb0\u64cd\u4f5c \\(i\\) \u4e3a\u7ffb\u8f6c \\(i,i+1,i+2\\) \u8fd9\u4e09\u5217\u3002\u90a3\u4e48\u7ecf\u8fc7\u64cd\u4f5c \\(1,3,1,3,1,3,2,1,2,1\\) \u540e\uff0c\u7b2c \\(1\\) \u548c \\(3\\) \u5217\u88ab\u7ffb\u8f6c\uff0c\u4e14\u5176\u4ed6\u5217\u4e0d\u53d8\u3002\u8fdb\u800c\u53ef\u4ee5\u4e0d\u6539\u53d8\u5176\u4ed6\u5217\u7684\u60c5\u51b5\u4e0b\u751f\u6210\u5947\u6570\u5217\u548c\u5076\u6570\u5217\u5404\u81ea\u4e0a\u7684\u4efb\u610f\u5076\u6570\u6b21\u7ffb\u8f6c\u3002\u89e3\u51b3\u4e86\u7ffb\u8f6c\u6b21\u6570\u7684\u5947\u5076\u6027\u95ee\u9898\uff0c\u800c\u5bf9\u6362\u76f8\u90bb\u884c\u751f\u6210\u7f6e\u6362\u53c8\u662f\u663e\u7136\u7684\uff0c\u8fd9\u5c31\u8bc1\u660e\u4e86\u4e0a\u8ff0\u7ed3\u8bba\u7684\u5145\u5206\u6027\u3002</p> <p>\u6700\u540e\u601d\u8003\u5982\u4f55\u6c42\u89e3\uff0c\u8fd9\u5e76\u4e0d\u96be\uff08\u6bd4\u4e0a\u9762\u7684\u5bb9\u6613\u591a\u4e86\uff09\uff0c\u53ef\u4ee5\u7528 \\(O(n\\log n)\\) \u6c42\u9006\u5e8f\u5bf9\u6570\u6765\u5224\u65ad\u7f6e\u6362\u6240\u9700\u8981\u7684\u5bf9\u6362\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u4e2a\u795e\u4ed9\u505a\u6cd5\u4f18\u5316\u5230 \\(O(n)\\) \u3002\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u505a\u6cd5\uff0c\u6211\u4eec\u628a\u7f6e\u6362\u7528\u82e5\u5e72\u4e2a\u8f6e\u6362\u6765\u8868\u793a\uff0c\u73af\u7684\u5927\u5c0f\u4e0e\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u7684\u5947\u5076\u6027\u76f8\u53cd\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint a[N][3],to[N],n,tot[2];\nint main(){\n    n=read();\n    rep(i,0,2)rep(j,1,n)a[j][i]=read();\n    rep(i,1,n){\n        if((a[i][0]==a[i][1]-1&amp;&amp;a[i][2]==a[i][1]+1)||(a[i][0]==a[i][1]+1&amp;&amp;a[i][2]==a[i][1]-1)){\n            to[i]=a[i][1]/3+1;\n            if(i%2!=to[i]%2||a[i][1]%3!=2)return puts(\"No\"),0;\n            if(a[i][0]&gt;a[i][2])tot[i&amp;1]^=1;\n        }\n        else return puts(\"No\"),0;\n    }\n    rep(i,1,n){\n        while(i!=to[i]){\n            swap(to[i],to[to[i]]);\n            tot[i&amp;1^1]^=1;\n        }\n    }\n    if(tot[0]||tot[1])puts(\"No\");\n    else puts(\"Yes\");\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC006%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#f","title":"F","text":"<p>\u9898\u76ee\u63cf\u8ff0\u770b\u4e0a\u53bb\u5f88\u602a\uff0c\u5148\u627e\u4e00\u4e0b\u7b49\u4ef7\u547d\u9898\uff0c\u53d1\u73b0\u53ef\u4ee5\u770b\u505a \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u56fe\uff0c\u4e14\u5982\u679c \\((u,v),(v,w)\\) \u6709\u8fb9\uff0c\\((w,u)\\) \u4e5f\u8fde\u4e00\u6761\u8fb9\u3002\u518d\u8f6c\u6362\u4e00\u4e0b\uff0c\u5bf9\u4e8e \\(v\\) \u7684\u6240\u6709\u51fa\u8fb9\u548c\u5165\u8fb9\u5bf9\u7684\u8282\u70b9\uff0c\u51fa\u70b9\u5411\u5165\u70b9\u8fde\u4e00\u6761\u8fb9\u3002</p> <p>\u9996\u5148\u89c2\u5bdf\u5230\u52a0\u8fb9\u53ea\u5728\u5f31\u8fde\u901a\u5206\u91cf\u91cc\u8fdb\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u5355\u72ec\u8003\u8651\u6bcf\u4e2a\u8fd9\u6837\u7684\u5206\u91cf\u3002</p> <ul> <li>\u5982\u679c\u4e0d\u5b58\u5728\u4e00\u7ec4 \\((u,v),(v,w)\\) \u7684\u8bdd\uff0c\u56fe\u4e0d\u4f1a\u53d8\u5316\u3002</li> <li>\u5982\u679c\u5b58\u5728\uff0c\u5c06\u4e00\u4e2a\u8282\u70b9\u67d3\u7ea2\uff0c\u5176\u51fa\u70b9\u67d3\u84dd\uff0c\u5165\u70b9\u67d3\u7eff\uff1b\u5165\u8fb9\u5bf9\u7eff\u70b9\u6216\u51fa\u8fb9\u5bf9\u84dd\u70b9\u7684\u6240\u6709\u70b9\u67d3\u7ea2\uff0c\u8fd9\u4e9b\u7ea2\u70b9\u518d\u7ee7\u7eed\u5f15\u51fa\u65b0\u7684\u70b9\u67d3\u8272\u3002\u67d3\u8272\u82e5\u6210\u529f\uff0c \\(R\\to G\\to B\\to R\\) \uff0c\u4e09\u79cd\u989c\u8272\u6784\u6210\u4e86\u4e09\u5143\u73af\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u989c\u8272\u4e0d\u540c\u7684\u8282\u70b9\u4e24\u4e24\u4e4b\u95f4\u90fd\u4f1a\u6709\u4e00\u6761\u8fb9\u3002\u8ba9\u6211\u4eec\u66f4\u597d\u7684\u63cf\u8ff0\u8fd9\u4e2a\u67d3\u8272\u8fc7\u7a0b\uff0c\u5b9e\u8d28\u4e0a\u4e3a\u8d77\u70b9\u4e3a\u7ea2\u8272\uff0c\u8be5\u70b9\u8fde\u5411\u7684\u6240\u6709\u70b9\u67d3\u84dd\u8272\uff0c\u84dd\u8272\u70b9\u8fde\u5411\u7684\u6240\u6709\u70b9\u67d3\u7eff\u8272\u3002\u8bbe\u4e09\u8272\u70b9\u6570\u91cf\u5206\u522b\u4e3a \\(R,G,B\\) \uff0c\u90a3\u4e48\u8be5\u8fde\u901a\u5206\u91cf\u5bf9\u7b54\u6848\u8d21\u732e\u4e3a \\(RG+RB+GB\\) \u3002</li> <li>\u7136\u800c\uff0c\u6211\u4eec\u5ffd\u7565\u4e86\u5728\u4e0a\u8ff0\u67d3\u8272\u8fc7\u7a0b\u4e2d\u5931\u8d25\u7684\u53ef\u80fd\u6027\uff0c\u5373\u51fa\u73b0\u67d3\u8272\u7684\u77db\u76fe\u3002\u4e0d\u59a8\u8bbe\u77db\u76fe\u51fa\u73b0\u5728\u70b9 \\(u\\) \u4e14\u5b83\u540c\u65f6\u67d3\u4e86\u7ea2\u8272\u548c\u84dd\u8272\uff0c\u6839\u636e\u4e0a\u4e2a\u67d3\u8272\u7684\u6027\u8d28\uff08\u7ea2\u70b9\u548c\u84dd\u70b9\u8fde\u8fb9\uff09\uff0c \\(u\\) \u4f1a\u6709\u81ea\u73af\u3002\u800c\u81ea\u73af\u53c8\u53ef\u4ee5\u63a8\u51fa \\(u\\) \u4e5f\u80fd\u67d3\u7eff\u8272\uff0c\u8fdb\u800c\u53d1\u73b0\u6240\u6709\u70b9\u90fd\u5411 \\(u\\) \u8fde\u8fb9\uff0c\u800c\u8fd9\u5f15\u51fa\u4e86\u6240\u6709\u70b9\u7684\u67d3\u8272\u77db\u76fe\uff0c\u6574\u4e2a\u56fe\u5c06\u53d8\u6210\u5305\u62ec\u81ea\u73af\u7684\u5b8c\u5168\u56fe\u3002\u5bf9\u7b54\u6848\u8d21\u732e\u4e3a \\(tot^2\\) \uff0c\u5176\u4e2d \\(tot\\) \u4e3a\u8fde\u901a\u5206\u91cf\u5927\u5c0f\u3002</li> </ul> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint n,m,col[N],flag,tot,etot;\nbool vis[N];\nll ans,cnt[3];\nstruct Edge{int tp,to;};\nvector&lt;Edge&gt; G[N];\nvoid dfs(int u){\n    ++cnt[col[u]];vis[u]=1;++tot;\n    for(auto tmp:G[u]){\n        etot+=(tmp.tp==1);\n        int v=tmp.to;\n        if(!vis[v]){\n            col[v]=(col[u]+tmp.tp)%3;dfs(v);\n        }else if(col[v]!=(col[u]+tmp.tp)%3)flag=0;\n    }\n}\nint main(){\n    n=read(),m=read();\n    rep(i,1,m){\n        int u=read(),v=read();\n        G[u].push_back({1,v});\n        G[v].push_back({2,u});\n    }\n    rep(i,1,n)if(!vis[i]){\n        memset(cnt,0,sizeof(cnt));\n        flag=1;etot=tot=0;\n        dfs(i);\n        if(!flag)ans+=1ll*tot*tot;\n        else if(cnt[0]&amp;&amp;cnt[1]&amp;&amp;cnt[2]){\n            ans+=cnt[0]*cnt[1]+cnt[1]*cnt[2]+cnt[2]*cnt[0];\n        }else ans+=etot;\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC007%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"AGC007 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC007%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#a","title":"A","text":"<p>\u7ed3\u8bba\u9898\uff0c\u68cb\u5b50\u53ea\u5411\u4e0b\u6216\u53f3\u79fb\u52a8\u5e76\u4e14\u5230\u8fbe\u53f3\u4e0b\u89d2\u5f53\u4e14\u4ec5\u5f53 '#' \u5b57\u7684\u6570\u91cf\u662f \\(H+W-1\\) \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nchar a[10][10];\nint main(){\n    int h=read(),w=read(),cnt=0;\n    rep(i,1,h){\n        scanf(\"%s\",a[i]+1);\n        rep(j,1,w)cnt+=(a[i][j]=='#');\n    }\n    puts(cnt==h+w-1?\"Possible\":\"Impossible\");\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC007%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#b","title":"B","text":"<p>\u6784\u9020\u9898\u3002\u5148\u601d\u8003\u5982\u4f55\u8ba9 \\(a_{p_i}+b_{p_i}\\) \u4e3a\u5b9a\u503c\uff0c\u8003\u8651\u5230\u9012\u589e\u548c\u9012\u51cf\u7684\u6027\u8d28\uff0c\u4e0d\u96be\u53d1\u73b0 \\(a_i=i,b_i=n-i\\) \u5373\u6ee1\u8db3\u8981\u6c42\u3002</p> <p>\u4e0b\u9762\u8ba9 \\(a_{p_i}+b_{p_i}\\) \u9012\u589e\u5373\u53ef\uff0c\u628a \\(b_{p_i}\\) \u52a0\u4e0a \\(i\\) \u5c31\u884c\u4e86\uff0c\u4f46\u8fd9\u4f1a\u7834\u574f\u6211\u4eec \\(b_i\\) \u7684\u9012\u589e\u6027\u8d28\u3002\u6ce8\u610f\u5230\u4e24\u4e2a\u6570\u7ec4\u540c\u65f6\u4e58\u4ee5\u4e00\u4e2a\u5927\u6570 \\(k\\) \u540e\u4ecd\u6ee1\u8db3\u539f\u6027\u8d28\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bbe \\(a_i=ki,b_i=k(n-i)\\) \u518d\u628a \\(b_{p_i}\\) \u52a0\u4e0a \\(i\\) \u5373\u53ef\u3002\u53ea\u8981 \\(k\\ge n\\) \u5373\u6ee1\u8db3\u8981\u6c42\uff0c\u4e14 \\(a_i,b_i\\le 10^9\\) \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e4+5;\nint a[N],b[N],n,p;\nint main(){\n    n=read();\n    rep(i,1,n)a[i]=i*N,b[i]=(n-i)*N;\n    rep(i,1,n)p=read(),b[p]+=i;\n    rep(i,1,n)printf(\"%d \",a[i]);\n    puts(\"\");\n    rep(i,1,n)printf(\"%d \",b[i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC007%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#c","title":"C","text":"<p>\u795e\u4ed9\u9898\u3002</p> <p>\u6bcf\u6b21\u6eda\u5b8c\u5c11\u4e00\u4e2a\u7403\u4e00\u4e2a\u5751\uff0c\u7559\u4e0b\u7684\u4f1a\u662f \\(n-1\\) \u4e2a\u7403 \\(n\\) \u4e2a\u5751\u7684\u60c5\u51b5\uff0c\u4e0d\u59a8\u8003\u8651\u65b0\u5e8f\u5217\u7684\u671f\u671b\u957f\u5ea6\u548c\u539f\u5e8f\u5217\u7684\u5173\u7cfb\u3002\u6211\u4eec\u679a\u4e3e\u7b2c\u4e00\u4e2a\u7403\u7684\u6240\u6709\u53ef\u80fd\u6027\uff0c\u8ba1\u7b97\u65b0\u7684\u8ddd\u79bb\u5e8f\u5217\u7684\u671f\u671b\u503c\u3002\u89c2\u5bdf\u53d1\u73b0\u4ecd\u7136\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff01\u5f88\u591a\u9898\u89e3\u90fd\u63d0\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u8bc1\u660e\u65b9\u6cd5\uff1a</p> <p>\u4e00\u5171\u6709 \\(2n\\) \u79cd\u6eda\u7403\u7684\u53ef\u80fd\uff0c\u8003\u8651\u5bf9\u7b2c \\(i\\) \u6bb5\u8ddd\u79bb\uff0c\u6709\u54ea\u4e9b\u60c5\u51b5\u80fd\u5bf9\u5176\u671f\u671b\u957f\u5ea6\u7684\u589e\u52a0\u4ea7\u751f\u8d21\u732e\uff1a</p> <ul> <li>\u539f\u6765\u7684\u524d \\(i\\) \u6bb5\u8ddd\u79bb\u88ab\u6eda\u8fc7\uff08\u4e5f\u5c31\u662f\u7b2c \\(i\\) \u6bb5\u8ddd\u79bb\u4e4b\u524d\u7684\u7403\u6eda\u5b8c\u4e86\uff09\uff0c\u4f7f\u539f\u7b2c \\(i+2\\) \u6bb5\u8ddd\u79bb\u4ee3\u66ff\u4e86\u7b2c \\(i\\) \u6bb5\u3002</li> <li>\u539f\u6765\u7684\u7b2c \\(i+1\\) \u6bb5\u8ddd\u79bb\u88ab\u6eda\u8fc7\uff0c\u4f7f\u539f\u7b2c \\(i,i+2,i+3\\) \u6bb5\u4ee3\u66ff\u4e86\u7b2c \\(i\\) \u6bb5\u3002</li> </ul> <p>\u8bbe\u65b0\u7684\u8ddd\u79bb\u5e8f\u5217\u4e3a \\(d'_i\\) \uff0c\u90a3\u4e48\u6709\uff1a  \u8fd9\u6784\u6210\u4e00\u4e2a\u65b0\u7684\u7b49\u5dee\u6570\u5217\uff0c\u800c\u5bf9\u6bcf\u4e2a \\(d,x\\) \u6211\u4eec\u63a8\u4e00\u6b21\u7403\u7684\u671f\u671b\u8ddd\u79bb\u4e3a\u6570\u5217\u7684\u4e2d\u4f4d\u6570\uff0c\u9012\u63a8\u5230\u6700\u540e\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\nusing namespace std;\nint main(){\n    int n;double d,x,ans=0;\n    scanf(\"%d%lf%lf\",&amp;n,&amp;d,&amp;x);\n    while(n){\n        ans+=d+x*(2*n-1)/2;\n        double dd=d+(2*d+5*x)/(2*n),xx=x+2*x/n;\n        d=dd,x=xx;n--;\n    }\n    printf(\"%.10lf\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC007%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#d","title":"D","text":"<p>\u9996\u5148\u89c2\u5bdf\u5230 Shik \u884c\u8d70\u7684\u8def\u7ebf\u53ef\u4ee5\u88ab\u8868\u793a\u6210\u5f80\u6570\u8f74\u6b63\u65b9\u5411\u548c\u53cd\u65b9\u5411\u7684\u8fd0\u52a8\u4ee5\u53ca\u539f\u5730\u7b49\u5019\uff0c\u4e14\u6700\u7ec8\u8fd0\u52a8\u5230\u7ec8\u70b9\u3002\u5230\u5173\u952e\u70b9\u6709\u4e24\u4e2a\u539f\u56e0\uff1a</p> <ul> <li>\u7b2c\u4e00\u6b21\u5230\u8fbe\uff0c\u5f00\u59cb\u751f\u6210\u91d1\u5e01\u3002</li> <li>\u7b2c\u4e8c\u6b21\u5230\u8fbe\uff0c\u6361\u91d1\u5e01\u3002</li> </ul> <p>\u6ce8\u610f\u5230\u6298\u8fd4\u548c\u524d\u8fdb\u663e\u7136\u90fd\u8981\u5230\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u5426\u5219\u6ca1\u6709\u610f\u4e49\u3002\u4e0d\u59a8\u8bbe\u4ece\u5f53\u524d\u4f4d\u7f6e \\(pos\\) \u70b9\u6298\u8fd4\u6700\u8fdc\u5230 \\(i\\) \u53f7\u70b9\u518d\u524d\u8fdb\uff0c\u5982\u679c\u80fd\u5728 \\(i\\) \u53f7\u70b9\u62ff\u5230\u91d1\u5e01\uff0c\u90a3\u4e48 \\(i+1,i+2,\\dots,pos\\) \u7b49\u8282\u70b9\u6b64\u65f6\u5fc5\u7136\u4e5f\u751f\u6210\u4e86\u91d1\u5e01\u3002\u8fd9\u8bf4\u660e\u6bcf\u6b21\u6298\u8fd4\u90fd\u4f1a\u62ff\u5230\u8fd9\u6bb5\u533a\u95f4\u7684\u91d1\u5e01\u3002\u4e0b\u9762\u8bbe \\(f_i\\) \u4e3a\u6361\u5230\u4e86\u524d \\(i\\) \u4e2a\u70b9\u7684\u91d1\u5e01\u65f6\u82b1\u8d39\u7684\u6700\u5c0f\u65f6\u95f4\uff0c\u663e\u7136\u5f53\u65f6\u5728 \\(i\\) \u53f7\u70b9\u3002\u4ece \\(f_j\\) \u8f6c\u79fb\u65f6\uff0c\u9700\u8981\u5148\u8d70\u4e00\u6bb5 \\(x_i-x_j\\) \u7684\u8ddd\u79bb\uff0c\u518d\u53d6\u5f80\u8fd4\u65f6\u95f4\u548c \\(i\\) \u53f7\u91d1\u5e01\u51fa\u73b0\u7684\u65f6\u95f4\u7684\u6700\u5927\u503c\uff0c\u6211\u4eec\u6709\uff1a  \u63d0\u53d6 \\(x_i-x_j\\) \u9879\u5230\u62ec\u53f7\u5916\u9762\uff0c\u53d1\u73b0\u6c42\u548c\u540e\u4e3a \\(x_n\\) \u3002\u8003\u8651\u5982\u4f55\u4f18\u5316\u62ec\u53f7\u5185\u7684\u6c42\u503c\uff0c</p> <ul> <li>\\(2(x_i-x_{j+1})\\le T\\Longrightarrow f_i=\\min_j\\{f_j\\}\\)</li> <li>\\(2(x_i-x_{j+1})&gt;T\\Longrightarrow f_i=2x_i+\\min_j\\{f_j-2x_{j+1}\\}\\)</li> </ul> <p>\u7531\u4e8e \\(x_i-x_{j+1}\\) \u968f \\(j\\) \u5355\u8c03\u9012\u51cf\uff0c\u8fd9\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u5230 \\(O(n)\\) \u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint q[N],h,t;\nll n,E,T,x[N],f[N],minn=1e18;\nint main(){\n    n=read(),E=read(),T=read();\n    rep(i,1,n)x[i]=read();\n    f[0]=0;\n    rep(i,1,n){\n        while(h&lt;=t&amp;&amp;2*(x[i]-x[q[h]+1])&gt;T){\n            minn=min(minn,f[q[h]]-2*x[q[h]+1]);\n            ++h;\n        }\n        f[i]=min(f[q[h]]+T,minn+2*x[i]);\n        q[++t]=i;\n    }\n    printf(\"%lld\\n\",f[n]+E);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC007%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#e","title":"E","text":"<p>\u795e\u4ed9\u6811\u5f62dp\u3002</p> <p>\u8981\u6c42\u6700\u5c0f\u5316\u6240\u6709\u8def\u5f84\u6743\u503c\u7684\u6700\u5927\u503c\uff0c\u8fd9\u663e\u7136\u60f3\u5230\u4e8c\u5206\u3002\u4e0b\u9762\u8003\u8651\u5bf9\u4e8e\u6700\u5927\u6743\u503c \\(V\\) \u5982\u4f55\u8ba1\u7b97\u662f\u5426\u6709\u53ef\u884c\u89e3\uff0c\u7531\u9898\u610f\u5f97\u6bcf\u4e2a\u5b50\u6811\u90fd\u8981\u8d70\u5b8c\u624d\u80fd\u53bb\u53e6\u4e00\u4e2a\u5b50\u6811\uff0c\u4e8e\u662f\u53ef\u4ee5\u60f3\u5230\u8fd9\u6837\u7684 \\(dp\\) \uff1a</p> <p>\u8bbe \\(f_u(a,b)\\) \u4e3a\u5728 \\(u\\) \u5b50\u6811\u5185\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u6784\u9020\uff0c\u4e14\u6839\u5230\u7b2c\u4e00\u4e2a\u53f6\u5b50\u548c\u6700\u540e\u4e00\u4e2a\u53f6\u5b50\u7684\u8ddd\u79bb\u5206\u522b\u4e3a \\(a,b\\) \u3002\u53ef\u4ee5\u7406\u89e3 \\(f_u\\) \u4e3a\u5b50\u6811 \\(u\\) \u4e2d\u6240\u6709\u53ef\u884c\u89e3\u7684\u89e3\u96c6\u3002\u8bb0 \\(u\\) \u7684\u5de6\u53f3\u513f\u5b50\u4e3a \\(l,r\\) \uff0c\u90a3\u4e48\u8f6c\u79fb\u5c31\u662f\uff1a  \u66b4\u529b\u5408\u5e76\u5de6\u53f3\u513f\u5b50\u7684\u72b6\u6001\u65f6\u95f4\u590d\u6742\u5ea6\u8d85\u6807\uff0c\u8003\u8651\u4f18\u5316\u3002\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u5730\u7b5b\u9009\u96c6\u5408\u5185\u7684\u5143\u7d20\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u6709 \\(a_1\\le a_2,b_1\\le b_2\\) \u90a3\u4e48 \\((a_1,b_1)\\) \u663e\u7136\u66f4\u4f18\uff0c\u53ef\u4ee5\u6392\u5e8f\u540e\u7b5b\u6389\u5f62\u5982 \\((a_2,b_2)\\) \u7684\u5143\u7d20\u3002\u4e8e\u662f\u5269\u4e0b\u7684\u5143\u7d20\u6ee1\u8db3 \\(a\\) \u5347\u5e8f\u6392\u5217\uff0c\\(b\\) \u964d\u5e8f\u6392\u5217\uff0c\u4e8e\u662f\u5728\u5408\u5e76\u65f6\u53ef\u4ee5\u4f7f\u7528 \\(two-pointers\\) \u4f18\u5316\u3002\u6ce8\u610f\u5230\u6bcf\u6b21\u5408\u5e76\u589e\u52a0\u7684\u72b6\u6001\u6570\u4e3a \\(2\\times\\min(|f_l|,|f_r|)\\) \uff0c\u4e0d\u96be\u53d1\u73b0\u603b\u72b6\u6001\u6570\u662f \\(O(n\\log n)\\) \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n\\log^2 n)\\) </p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\n#define pii pair&lt;ll,ll&gt;\n#define fi first\n#define se second\n#define pb push_back\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,ch[N][2];\nll w[N][2];\nvector &lt;pii&gt; Ans[N];\nvoid dfs(int u,ll V){\n    Ans[u].clear();\n    if(!ch[u][0]){\n        Ans[u].pb({0,0});\n        return;\n    }\n    rep(i,0,1)if(ch[u][i])dfs(ch[u][i],V);\n    vector &lt;pii&gt; vec;\n    rep(t,0,1){\n        int ls=ch[u][t],rs=ch[u][t^1];\n        ll Max=V-w[u][0]-w[u][1];\n        for(int i=0,j=0;i&lt;Ans[ls].size();++i){\n            while(j+1&lt;Ans[rs].size()&amp;&amp;Ans[rs][j+1].fi+Ans[ls][i].se&lt;=Max) ++j;\n            if(j&gt;=Ans[rs].size()||Ans[rs][j].fi+Ans[ls][i].se&gt;Max) continue;\n            vec.pb({Ans[ls][i].fi+w[u][t],Ans[rs][j].se+w[u][t^1]});\n        }\n    }\n    sort(vec.begin(),vec.end());\n    rep(i,0,(int)vec.size()-1){\n        if(!Ans[u].empty()&amp;&amp;Ans[u].back().se&lt;=vec[i].se)continue;\n        Ans[u].pb(vec[i]);\n    }\n}\ninline bool check(ll mid){\n    dfs(1,mid);\n    return Ans[1].size()&gt;=1;\n}\nint main(){\n    n=read();\n    ll l=0,r=0,ans;\n    rep(i,2,n){\n        int fa=read(),val=read();\n        r+=val;\n        if(ch[fa][0])ch[fa][1]=i,w[fa][1]=val;\n        else ch[fa][0]=i,w[fa][0]=val;\n    }\n    while(l&lt;=r){\n        ll mid=(l+r)/2;\n        if(check(mid)){\n            r=mid-1;ans=mid;\n        }else l=mid+1;\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC007%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#f","title":"F","text":"<p>\u8bbe\u6700\u5c11\u53d8\u6362 \\(m-1\\) \u6b21\uff0c\u628a\u8fd9 \\(m-1\\) \u6b21\u7684\u4e32\u4e0e\u521d\u59cb\u4e32\u4ece\u4e0a\u81f3\u4e0b\u653e\u5728\u4e00\u8d77\u6210\u4e00\u4e2a \\(n\\times m\\) \u7684\u65b9\u9635\u3002\u7531\u9898\u610f\u5f97 \\(S_{i,j}=S_{i-1,j}\\) \u6216 \\(S_{i,j}=S_{i,j-1}\\) \uff0c\u5373\u5f53\u524d\u4f4d\u7f6e\u4ece\u4e0a\u9762\u6216\u5de6\u8fb9\u4e00\u683c\u8f6c\u79fb\u800c\u6765\uff0c\u89c2\u5bdf\u539f\u4e32 \\(n\\) \u4e2a\u5b57\u7b26\u8f6c\u79fb\u7684\u8def\u5f84\u4f1a\u5728\u65b9\u9635\u91cc\u6210\u591a\u6761\u6298\u7ebf\uff0c\u5982\u4e0b\u56fe\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\u6bcf\u6761\u6298\u7ebf\u5c3d\u91cf\u9760\u53f3\u6700\u4f18\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8ba9\u8be5\u6298\u7ebf\u4e0d\u5f71\u54cd\u524d\u9762\u7684\u7ebf\uff0c\u4ee5\u53ca\u4f7f\u539f\u4e32\u8fd8\u53ef\u4ee5\u5f15\u51fa\u6298\u7ebf\u7684\u5b57\u6bcd\u5c3d\u91cf\u591a\u3002\u5982\u679c\u5f53\u524d\u884c\u753b\u4e0d\u4e0b\u5c31\u52a0\u4e00\u884c\uff0c\u4e0b\u9762\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u8fd9\u6837\u7684\u8d2a\u5fc3\u3002\u5982\u679c\u6709 \\(S_0=T\\) \u76f4\u63a5\u8f93\u51fa \\(0\\) \u3002</p> <p>\u9996\u5148\u627e\u51fa \\(T\\) \u6700\u957f\u7684\u7531\u76f8\u540c\u5b57\u7b26 \\(c\\) \u7ec4\u6210\u7684\u540e\u7f00\uff0c\u5728 \\(S\\) \u4e2d\u627e\u5230\u5269\u4f59\u5b57\u7b26\u4e2d\u6700\u53f3\u7684 \\(c\\) \uff0c\u8bb0\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e3a \\(S_i,T_j\\) \u3002\u53ef\u4ee5\u7528\u961f\u5217\u7ef4\u62a4\u6240\u6709\u62d0\u70b9\uff1a\u5148\u628a\u6240\u6709\u6a2a\u5750\u6807\u5728 \\(j\\) \u540e\u9762\u7684\u70b9\u51fa\u961f\uff0c\u7531\u8d2a\u5fc3\u7b56\u7565\u5f97\u5269\u4e0b\u7684\u62d0\u70b9\u5f80\u5de6\u4e0b\u79fb\u52a8\u4e00\u683c\u3002\u7531\u4e8e\u62d0\u70b9\u4e0d\u51fa\u73b0\u5728 \\(T\\) \u4e32\uff0c\u7b54\u6848\u5219\u662f\u6700\u4e0b\u9762\u7684\u62d0\u70b9\u7684\u7eb5\u5750\u6807 \\(+1\\) \u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e6+5;\nint n,ans,m;\nchar S[N],T[N];\nbool flg;\nqueue &lt;int&gt; q;\nint main(){\n    n=read();scanf(\"%s%s\",S+1,T+1);\n    rep(i,1,n)if(S[i]!=T[i])flg=1;\n    if(!flg)return puts(\"0\"),0;\n    int m=n;\n    while(m){\n        while(m&gt;1&amp;&amp;T[m]==T[m-1])m--;\n        while(n&amp;&amp;(n&gt;m||S[n]!=T[m]))--n;\n        if(!n)return puts(\"-1\"),0;\n        while(!q.empty()&amp;&amp;q.front()-q.size()&gt;=m)q.pop();\n        if(n!=m)q.push(n);\n        ans=max(ans,(int)q.size()+1);\n        --m;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC008%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"AGC008 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC008%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#a","title":"A","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u5206\u7c7b\u8ba8\u8bba\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u679a\u4e3e\u7ffb\u8f6c\u6b21\u6570\u66b4\u529b\u89e3\u51b3\uff0c\u8fd9\u91cc\u7528\u4e86\u540e\u8005\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint S(int x,int y){\n    if(x&lt;=y)return y-x;\n    else return x-y+2;\n}\nint main(){\n    int x=read(),y=read();\n    int ans=min(min(S(x,y),S(-x,y)+1),min(S(-x,-y)+2,S(x,-y)+1));\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC008%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#b","title":"B","text":"<p>\u719f\u77e5\u7ed3\u8bba\u4e3a\u4efb\u4f55\u5b58\u5728\u8fde\u7eed \\(k\\) \u683c\u989c\u8272\u76f8\u540c\u7684\u65b9\u6848\u90fd\u53ef\u4ee5\u88ab\u6784\u9020\uff0c\u4e8e\u662f\u66b4\u529b\u679a\u4e3e\u8fde\u7eed\u6bb5+\u524d\u7f00\u548c\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nll n,k,a[N],sum[N],sum2[N],ans;\nint main(){\n    n=read(),k=read();\n    rep(i,1,n){\n        a[i]=read();\n        sum[i]=sum[i-1]+a[i];\n        sum2[i]=sum2[i-1]+(a[i]&gt;0)*a[i];\n    }\n    rep(i,k,n){\n        ll tmp=sum[i]-sum[i-k];\n        tmp=(tmp&gt;0)*tmp+sum2[n]-sum2[i]+sum2[i-k];\n        ans=max(ans,tmp);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC008%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#c","title":"C","text":"<p>\u624b\u73a9\u51e0\u79cd\u4e0d\u540c\u7684\u4fc4\u7f57\u65af\u65b9\u5757\u53d1\u73b0 \\(T,S,Z\\) \u5f62\u65b9\u5757\u591a\u51fa\u7684\u4e00\u683c\u65e0\u6cd5\u5904\u7406\uff0c\u6240\u4ee5\u4e0d\u80fd\u653e\u7f6e\u3002\u800c \\(O\\) \u5f62\u53ef\u4ee5\u81ea\u5df1\u8d21\u732e\u7b54\u6848\uff0c\u5176\u4ed6\u65b9\u5757\u53ef\u4ee5\u548c\u76f8\u540c\u5757\u4e24\u4e24\u7ec4\u5408\u8d21\u732e\uff0c\u4e5f\u53ef\u4ee5 \\(I,J,L\\) \u5404\u4e00\u5757\u8d21\u732e\uff0c\u7b80\u5355\u5224\u65ad\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nll a[8],ans;\nll calc(ll a1,ll a4,ll a5){\n    return a1+a4+a5-a1%2-a4%2-a5%2;\n}\nint main(){\n    rep(i,1,7)a[i]=read();\n    ans=calc(a[1],a[4],a[5]);\n    if(a[1]&amp;&amp;a[4]&amp;&amp;a[5])ans=max(ans,calc(a[1]-1,a[4]-1,a[5]-1)+3);\n    printf(\"%lld\\n\",ans+a[2]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC008%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#d","title":"D","text":"<p>\u8d2a\u5fc3\u6784\u9020\u3002</p> <p>\u9996\u5148\u60f3\u5230 \\(X_i\\) \u5de6\u8fb9\u4f1a\u6709 \\(i-1\\) \u4e2a \\(i\\) \uff0c\u53f3\u8fb9\u6709 \\(n-i\\) \u4e2a \\(i\\) \uff0c\u53ea\u8981\u80fd\u6ee1\u8db3\u8fd9\u6837\u7684\u9650\u5236\u5c31\u6784\u9020\u6210\u529f\u4e86\u3002\u7136\u540e\u6211\u4eec\u5bf9 \\(X_i\\) \u6392\u5e8f\uff0c\u8d8a\u9760\u5de6\u7684\u8d8a\u9700\u8981\u7528 \\(i\\) \u586b\u7a7a\uff0c\u540c\u7406\u53cd\u7740\u4e5f\u8fd9\u4e48\u505a\u4e00\u904d\u3002\u8fd9\u6837\u7684\u8d2a\u5fc3\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u82e5 \\(X_j&gt;X_i\\) \uff0c\u90a3\u4e48 \\(X_i\\) \u524d\u9762\u7684\u4f4d\u7f6e\u5fc5\u987b\u6709 \\(i-1\\) \u4e2a\u88ab \\(i\\) \u5360\u9886\u624d\u80fd\u7ed9 \\(j\\) \u586b\u7a7a\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=505;\nstruct node{int v,p;}x[505];\nbool cmp(node a,node b){return a.p&lt;b.p;}\nint n,ans[N*N];\nint main(){\n    n=read();\n    rep(i,1,n){\n        int p=read();\n        x[i]={i,p},ans[p]=i;\n    }\n    sort(x+1,x+n+1,cmp);\n    int k=1;\n    rep(i,1,n){\n        rep(j,1,x[i].v-1){\n            while(ans[k])++k;\n            if(k&gt;=x[i].p)return puts(\"No\"),0;\n            ans[k++]=x[i].v;\n        }\n    }\n    k=n*n;\n    per(i,n,1){\n        rep(j,1,n-x[i].v){\n            while(ans[k])--k;\n            if(k&lt;=x[i].p)return puts(\"No\"),0;\n            ans[k--]=x[i].v;\n        }\n    }\n    puts(\"Yes\");\n    rep(i,1,n*n)printf(\"%d \",ans[i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC008%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#e","title":"E","text":"<p>\u7f6e\u6362\u4f1a\u5f62\u6210\u82e5\u5e72\u4e2a\u6709\u5411\u73af\u3002\u89c2\u5bdf\u8fd9\u4e9b\u73af\u5982\u4f55\u548c \\(a\\) \u56fe\u5efa\u7acb\u8054\u7cfb\uff1a</p> <ul> <li>\u60c5\u51b51\uff1a\\(p_i=a_i\\)</li> </ul> <p>\u4f1a\u5f62\u6210\u548c \\(a\\) \u56fe\u5b8c\u5168\u4e00\u6837\u7684\u73af\u3002</p> <ul> <li>\u60c5\u51b52\uff1a\\(p_{p_i}=a_i\\) \u4e14\u539f\u73af\u957f\u4e3a\u5947\u3002</li> </ul> <p>\u4f1a\u5f62\u6210\u548c\u539f\u6765\u7684\u73af\u540c\u6784\u7684\u4e00\u4e2a\u73af\u3002</p> <p>\u60c5\u51b53\uff1a\u73af\u957f\u4e3a\u5076\u3002</p> <p>\u4f1a\u628a\u539f\u6765\u7684\u73af\u5206\u6210\u4e24\u4e2a\u5927\u5c0f\u76f8\u540c\u7684\u5c0f\u73af\u3002</p> <ul> <li>\u60c5\u51b54\uff1a\u4e00\u90e8\u5206 \\(p_i=a_i\\) \uff0c\u4e00\u90e8\u5206 \\(p_{p_i}=a_i\\) \u3002</li> </ul> <p>\u4f1a\u5f62\u6210\u4e00\u4e2a\u4e0a\u9762\u6302\u7740\u51e0\u6761\u94fe\u7684\u73af\uff0c\u5373\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684\u57fa\u73af\u6811\u3002</p> <p>\u9996\u5148\u8003\u8651 \\(a\\) \u56fe\u4e2d\u7684\u6240\u6709\u73af\uff0c\u4e24\u4e2a\u5927\u5c0f\u4e00\u6837\u7684\u73af\u53ef\u80fd\u5728 \\(p\\) \u56fe\u7684\u540c\u4e00\u4e2a\u73af\u4e2d\uff08\u5373\u60c5\u51b53\uff09\u3002\u5982\u679c\u6709 \\(n_k\\) \u4e2a\u5927\u5c0f\u4e3a \\(k\\) \u7684\u73af\uff0c\u4e0d\u96be\u53d1\u73b0\u5b83\u4eec\u5e26\u6765\u7684\u603b\u65b9\u6848\u6570\u53ef\u4ee5 \\(O(n_k)\\) \u5185\u7528 \\(dp\\) \u6c42\u89e3\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5728\u60c5\u51b53\u4e2d\u6211\u4eec\u6709 \\(k\\) \u79cd\u5408\u5e76\u4e24\u4e2a\u73af\u7684\u65b9\u6848\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u5982\u4f55\u5904\u7406 \\(a\\) \u56fe\u4e2d\u7279\u6b8a\u7684\u57fa\u73af\u6811\uff0c\u6211\u4eec\u9700\u8981\u628a\u591a\u51fa\u7684\u94fe\u585e\u8fdb\u8fd9\u4e2a\u73af\u91cc\u3002\u8bbe \\(l_1\\) \u4e3a\u5f53\u524d\u94fe\u957f\uff0c\\(l_2\\) \u4e3a\u5f53\u524d\u94fe\u5728\u73af\u4e0a\u7684\u7aef\u70b9\u8ddd\u79bb\u4e0a\u4e00\u6761\u94fe\u7684\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u7ecf\u8fc7\u4e00\u4e9b\u7b80\u5355\u6784\u9020\uff0c\u6211\u4eec\u6709\uff1a</p> <ul> <li>\\(l_1&lt;l_2\\) \u65f6\u6709 \\(2\\) \u79cd\u65b9\u6848\u3002</li> <li>\\(l_1=l_2\\) \u65f6\u6709 \\(1\\) \u79cd\u65b9\u6848\u3002</li> <li>\\(l_1&gt;l_2\\) \u65f6\u65e0\u89e3\u3002</li> </ul> <p>\u7531\u4e58\u6cd5\u539f\u7406\uff0c\u6240\u6709\u60c5\u51b5\u7684\u65b9\u6848\u6570\u76f8\u4e58\u5373\u4e3a\u7b54\u6848\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5,P=1e9+7;\nint Mod(int x){return x&gt;=P?x-P:x;}\nint n,a[N],deg[N],cir[N],vis[N],flen[N],cnt[N];\nll ans=1,dp[N];\nint k(int l1,int l2){\n    if(l1&lt;l2)return 2;\n    if(l1==l2)return 1;\n    return 0;\n}\nvoid work(int x){\n    int now=0,len=0,last=0,fir=0;\n    while(cir[x]){\n        ++now,cir[x]=0;\n        if(flen[x]){\n            if(!fir)fir=last=now,len=flen[x];\n            else{\n                ans=ans*k(flen[x],now-last)%P,last=now;\n            }\n        }\n        x=a[x];\n    }\n    if(!fir)++cnt[now];\n    else{\n        ans=ans*k(len,now-last+fir)%P;\n    }\n}\nint main(){\n    n=read();\n    rep(i,1,n)a[i]=read(),++deg[a[i]];\n    rep(i,1,n){\n        if(vis[i])continue;\n        int x=i;\n        while(!vis[x])vis[x]=i,x=a[x];\n        if(vis[x]!=i)continue;//\u4e0d\u5728\u73af\u4e0a\n        while(!cir[x])cir[x]=1,x=a[x];//\u6807\u8bb0\u73af\n    }\n    rep(i,1,n){//\u7279\u5224\u65e0\u89e3\n        if((cir[i]&amp;&amp;deg[i]&gt;2)||(!cir[i]&amp;&amp;deg[i]&gt;1))\n            return puts(\"0\"),0;\n    }\n    rep(i,1,n){\n        if(deg[i])continue;\n        int x=i,len=0;\n        while(!cir[x])++len,x=a[x];\n        flen[x]=len;//\u8bb0\u5f55\u94fe\u957f\n    }\n    rep(i,1,n)if(cir[i])work(i);//\u57fa\u73af\u6811\n    rep(i,1,n){//\u73af\n        if(!cnt[i])continue;\n        dp[0]=1;\n        rep(j,1,cnt[i]){\n            if(i&gt;1&amp;&amp;(i&amp;1))dp[j]=Mod(dp[j-1]*2);//\u5947\u73af\n            else dp[j]=dp[j-1];\n            if(j&gt;1)dp[j]=Mod(dp[j]+dp[j-2]*(j-1)%P*i%P);//\u5408\u5e76\u4e24\u5c0f\u73af\u6210\u5927\u73af\n        }\n        ans=ans*dp[cnt[i]]%P;\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC008%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#f","title":"F","text":"<p>\u795e\u4ed9\u6811\u5f62dp\u3002</p> <p>\u9996\u5148\u8003\u8651\u5982\u4f55\u8f6c\u6362\u9898\u610f\u65b9\u4fbf\u6211\u4eec\u8ba1\u6570\uff0c\u4e0d\u59a8\u5148\u8bbe\u6240\u6709\u70b9\u5747\u4e3a\u5173\u952e\u70b9\u3002\u53d1\u73b0\u5bf9\u4e8e\u76f8\u540c\u7684\u67d3\u8272\u65b9\u6848\uff0c\u4ec5\u5b58\u5728\u4e00\u4e2a\u70b9 \\(u\\) \u4f5c\u4e3a\u5706\u5fc3\u65f6\u534a\u5f84\u6700\u5c0f\uff0c\u8bb0\u4e3a \\(d\\) \u3002\u6211\u4eec\u8bbe \\(f(u,d)\\) \u4e3a\u8ddd\u79bb \\(u\\) \u4e0d\u8d85\u8fc7 \\(d\\) \u7684\u70b9\u96c6\uff0c\u8ba1\u6570\u65f6\u53ea\u9700\u8981\u8bb0 \\(d\\) \u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u4e8e\u662f</p> <ul> <li>\\(f(u,d)\\) \u4e0d\u8986\u76d6\u6240\u6709\u70b9\u3002\uff08\u6700\u540e\u52a0\u4e0a\u6574\u68f5\u6811\u88ab\u67d3\u8272\u7684\u60c5\u51b5\u5373\u53ef\uff09</li> <li>\\(\\forall (u,v)\\in E,f(u,d)\\neq f(v,d-1)\\) </li> </ul> <p>\u5f53 \\(u\\) \u4e3a\u6839\u8282\u70b9\u65f6\uff0c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u5373\u4e3a \\(d&lt;mx_u\\) \uff0c\\(mx_u\\) \u4e3a\u79bb \\(u\\) \u6700\u8fdc\u7684\u70b9\u7684\u6df1\u5ea6\u3002\u800c\u56e0\u4e3a \\(f(v,d-1)\\) \u80fd\u8986\u76d6\u5176\u5b50\u6811\u5185 \\(f(u,d)\\) \u80fd\u8986\u76d6\u7684\u6240\u6709\u70b9\uff0c\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u7b49\u4ef7\u4e8e \\(f(v,d-1)\\) \u65e0\u6cd5\u8986\u76d6 \\(u\\) \u5176\u4ed6\u5b50\u6811\u4e0a \\(f(u,d)\\) \u80fd\u8986\u76d6\u5230\u7684\u8282\u70b9\uff0c\u8fd9\u63d0\u793a\u4e86\u6211\u4eec \\(d\\) \u7684\u53e6\u4e00\u4e2a\u4e0a\u754c \\(d-1\\le mx2[u]\\) \uff0c\u5373\u79bb \\(u\\) \u8282\u70b9\u6b21\u957f\u7684\u8ddd\u79bb\u3002\u5bf9\u4e8e\u7edf\u8ba1\u6240\u6709\u8282\u70b9\u7684\u7b54\u6848\uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u6362\u6839 \\(dp\\) \u5b9e\u73b0\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u4e0d\u5168\u662f\u5173\u952e\u70b9\u7684\u60c5\u51b5\u3002\u82e5 \\(u\\) \u4e0d\u662f\u5173\u952e\u70b9\uff0c\\(v\\) \u4e3a \\(u\\) \u5b50\u8282\u70b9\u4e14 \\(v\\) \u5b50\u6811\u4e2d\u6709\u5173\u952e\u70b9\uff0c\u5982\u679c \\(f(u,d)\\) \u4e3a\u67d0\u4e2a\u5173\u952e\u70b9\u4e3a\u5706\u5fc3\u8986\u76d6\u7684\u96c6\u5408\uff0c\u8bbe  \u5373\u6240\u6709 \\(v\\) \u5b50\u6811\u7684\u6df1\u5ea6\u52a0\u4e0a \\((u,v)\\) \u8fb9\u957f\u3002\u56e0\u4e3a \\(d_u\\) \u9700\u8981\u8986\u76d6\u67d0\u4e2a \\(v\\) \u5b50\u6811\u4e2d\u5173\u952e\u70b9 \\(w\\) \u80fd\u8986\u76d6\u7684\u6240\u6709\u70b9\uff0c\u4e0d\u96be\u53d1\u73b0 \\(d_u\\) \u4e3a\u534a\u5f84\u6700\u5c0f\u503c\u3002\u901a\u8fc7\u7c7b\u4f3c\u7684\u6362\u6839 \\(dp\\) \u6280\u5de7\u53bb\u7ef4\u62a4 \\(mx,mx2,d\\) \uff0c\u628a\u6bcf\u4e2a\u70b9\u4e3a\u5706\u5fc3\u7684\u53ef\u80fd\u534a\u5f84\u7edf\u8ba1\u8fdb\u7b54\u6848\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5,inf=1e9;\nint n,d[N],sz[N],mx[N],mx2[N];\nchar col[N];\nll ans;\nvector &lt;int&gt; G[N];\n//\u82e5v\u4e3au\u5b50\u8282\u70b9\u4e14v\u5b50\u6811\u4e2d\u6709\u5173\u952e\u70b9\uff0cd[u]\u4e3amin(mx[v]+1)\n//\u4e0d\u96be\u53d1\u73b0d[u]\u4e3a\u534a\u5f84\u6700\u5c0f\u503c\uff0c\u56e0\u4e3ad[u]\u9700\u8981\u8986\u76d6\u81f3\u5c11\u4e00\u4e2av\u5b50\u6811\u4e2d\u5173\u952e\u70b9\u65e0\u6cd5\u8986\u76d6\u7684\u70b9\nvoid dfs1(int u,int fa){\n    if(col[u]=='1')d[u]=0,sz[u]=1;\n    else d[u]=inf;\n    for(int v:G[u])if(v!=fa){\n        dfs1(v,u);sz[u]+=sz[v];\n        if(mx[v]+1&gt;mx[u])mx2[u]=mx[u],mx[u]=mx[v]+1;//\u6700\u957f\u8ddd\u79bb\n        else if(mx[v]+1&gt;mx2[u])mx2[u]=mx[v]+1;//\u6b21\u957f\u8ddd\u79bb\n        if(sz[v])d[u]=min(d[u],mx[v]+1);\n    }\n}\nvoid dfs2(int u,int fa){//\u6362\u6839dp\n    int R=min(mx2[u]+1,mx[u]-1);//\u6700\u5927\u534a\u5f84\n    if(d[u]&lt;=R)ans+=(ll)(R-d[u]+1);\n    for(int v:G[u])if(v!=fa){\n        int len;//v\u5b50\u6811\u5916\u7684\u6700\u957f\u8ddd\u79bb\n        if(mx[u]==mx[v]+1){\n            len=mx2[u]+1;\n        }else len=mx[u]+1;\n        if(len&gt;mx[v])mx2[v]=mx[v],mx[v]=len;\n        else if(len&gt;mx2[v])mx2[v]=len;\n        if(sz[1]&gt;sz[v]&amp;&amp;d[v]&gt;len)d[v]=len;\n        dfs2(v,u);\n    }\n}\nint main(){\n    n=read();\n    rep(i,1,n-1){\n        int u=read(),v=read();\n        G[u].push_back(v);G[v].push_back(u);\n    }\n    scanf(\"%s\",col+1);\n    dfs1(1,0);dfs2(1,0);\n    printf(\"%lld\\n\",ans+1);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC009%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"AGC009 \u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/AGC009%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#a","title":"A","text":"<p>\u53d1\u73b0 \\(A_N\\) \u53ea\u80fd\u88ab\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u5f71\u54cd\uff0c\u5012\u7740\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u53d6\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint n;\nll a[100005],b[100005],ans,num;\nint main(){\n    n=read();\n    rep(i,1,n)a[i]=read(),b[i]=read();\n    per(i,n,1){\n        a[i]+=num;\n        if(a[i]%b[i]){\n            ll tmp=b[i]-(a[i]%b[i]);\n            num+=tmp,ans+=tmp;\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC009%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#b","title":"B","text":"<p>\u6811\u5f62dp\u3002\u9996\u5148\u5c06\u6240\u6709\u70b9\u7684\u7236\u8282\u70b9\u8bbe\u4e3a \\(a_i\\) \uff0c\u8bbe \\(f_u\\) \u4e3a\u8282\u70b9 \\(u\\) \u7684\u5b50\u6811\u4e2d\u6bd4\u8d5b\u7684\u6700\u5c0f\u6df1\u5ea6\u3002\u8bbe \\(v_1,v_2,\\dots,v_k\\) \u4e3a \\(u\\) \u7684\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\u4e00\u4e2a\u8d2a\u5fc3\u601d\u8def\uff1a\u628a \\(f_v\\) \u6309\u6df1\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u6df1\u5ea6\u66f4\u6df1\u7684\u8fd9\u4e00\u8f6e\u5c31\u5c3d\u91cf\u8f6e\u7a7a\uff0c\u6df1\u5ea6\u7b2c\u4e8c\u7684\u5c11\u8f6e\u7a7a\u4e00\u8f6e\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u6837 \\(f_u=\\max\\{f_{v_i}+i\\}\\) \uff0c\\(f_{v_i}\\) \u662f\u6240\u6709\u5b50\u6811\u4e2d\u7b2c \\(i\\) \u5927\u7684\u7b54\u6848\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log N)\\) </p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint n,f[N],tmp[N];\nvector&lt;int&gt;G[N];\nvoid dfs(int u){\n    int tot=0;\n    for(int v:G[u])dfs(v);\n    for(int v:G[u])tmp[++tot]=f[v];\n    sort(tmp+1,tmp+tot+1);\n    rep(i,1,tot)f[u]=max(f[u],tmp[i]+tot-i+1);\n}\nint main(){\n    n=read();\n    rep(i,2,n){\n        int u=read();G[u].push_back(i);\n    }\n    dfs(1);\n    printf(\"%d\\n\",f[1]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC009%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#c","title":"C","text":"<p>\u9996\u5148\u4e0d\u59a8\u8bbe \\(A&gt;B\\) \uff0c\u8bbe \\(f_n\\) \u4e3a\u7b2c \\(n\\) \u4e2a\u5143\u7d20\u653e\u8fdb \\(X\\) \u96c6\u5408\u4e2d\u7684\u65b9\u6848\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u52a0\u4e00\u4e2a\u5143\u7d20 \\(S_{N+1}=\\infty\\) \uff0c\u6700\u540e\u8f93\u51fa \\(f_{N+1}\\) \u5373\u53ef\u3002\u90a3\u4e48\u6211\u4eec\u77e5\u9053 \\(f_i\\) \u53ef\u4ee5\u4ece \\(f_j\\) \u8f6c\u79fb\uff0c\u5f53\u4e14\u4ec5\u5f53 \\([j+1,i-1]\\) \u4e2d\u7684\u6240\u6709\u6570\u90fd\u53ef\u4ee5\u653e\u5165 \\(Y\\) \u3002\u7ef4\u62a4\u8fd9\u4e9b \\(f_j\\) \u7684\u548c\uff0c\u540c\u65f6\u7ef4\u62a4\u5f53\u524d \\(j\\) \u7684\u4f4d\u7f6e\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5,P=1e9+7;\nconst ll inf=2e18+5;\nll n,A,B,s[N],j;\nll f[N],sum;\nint main(){\n    n=read(),A=read(),B=read();\n    if(A&lt;B)swap(A,B);\n    rep(i,1,n)s[i]=read();\n    s[0]=-inf,s[++n]=inf;\n    f[0]=1;\n    rep(i,1,n-2){\n        if(s[i+2]-s[i]&lt;B)return puts(\"0\"),0;\n    }\n    rep(i,1,n){\n        while(s[i]-s[j]&gt;=A)sum=(sum+f[j++])%P;\n        f[i]=sum;\n        if(s[i]-s[i-1]&lt;B)sum=0,j=i-1;\n    }\n    printf(\"%lld\\n\",f[n]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC009%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#d","title":"D","text":"<p>\u7406\u89e3\u4e3a\u4e00\u4e2a\u6811\u6700\u5c11\u7684\u5206\u6cbb\u5c42\u6570\uff0c\u4e0a\u754c\u663e\u7136\u662f \\(O(\\log N)\\) \u7684\u3002\u8003\u8651\u4e00\u4e2a\u5173\u952e\u6027\u8d28\uff1a\u5982\u679c\u4e24\u70b9 \\(u,v\\) \u7684\u5206\u6cbb\u6df1\u5ea6\u76f8\u540c\uff0c\u90a3\u4e48 \\(u,v\\) \u7684\u6811\u4e0a\u8def\u5f84\u4e0a\u5fc5\u7136\u5305\u542b\u4e00\u4e2a\u6df1\u5ea6\u66f4\u5c0f\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u628a\u6bcf\u4e2a\u70b9\u4ece\u6df1\u5230\u6d45\u7f16\u53f7\uff0c\u90a3\u4e48\u6811\u4e0a\u8def\u5f84\u4e0a\u5219\u4f1a\u6709\u4e00\u4e2a\u66f4\u5927\u7684\u7f16\u53f7\uff0c\u6211\u4eec\u8981\u6700\u5c0f\u5316\u6700\u5927\u7684\u7f16\u53f7\u3002</p> <p>\u8fd9\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u6211\u4eec\u8bb0\u5f55 \\(u\\) \u7684\u5b50\u6811\u4e2d\u662f\u5426\u6709\u7f16\u53f7\u4e3a \\(i\\) \u7684\u8282\u70b9 \\(v\\) \uff0c\u4e14\u5176\u5230 \\(u\\) \u7684\u8def\u5f84\u4e2d\u4e0d\u542b \\(&gt;i\\) \u7f16\u53f7\u7684\u70b9\uff0c\u53ea\u6709\u8fd9\u6837\u65f6\u6211\u4eec\u624d\u4e0d\u80fd\u4ee4 \\(u\\) \u7684\u7f16\u53f7\u4e3a \\(i\\) \u3002\u53d6\u7b26\u5408\u6761\u4ef6\u6700\u5c0f\u7684\u7f16\u53f7\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log N)\\) \u6216 \\(O(N)\\) \uff08\u82e5\u4f7f\u7528\u4f4d\u8fd0\u7b97\u51fd\u6570\uff09</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint n,ans,f[N],c[21];\nvector &lt;int&gt; G[N];\nvoid dfs(int u,int fa){\n    for(int v:G[u])if(v!=fa)dfs(v,u);\n    rep(i,0,20)c[i]=0;\n    for(int v:G[u]){\n        rep(i,0,20){\n            if((f[v]&gt;&gt;i)&amp;1)++c[i];\n        }\n    }\n    int k=0;\n    per(i,20,0){\n        if(c[i]&gt;=2)break;\n        if(!c[i])k=i;\n    }\n    ans=max(ans,k);\n    f[u]|=(1&lt;&lt;k);\n    rep(i,k+1,20){\n        if(c[i])f[u]|=(1&lt;&lt;i);\n    }\n}\nint main(){\n    n=read();\n    rep(i,1,n-1){\n        int u=read(),v=read();\n        G[u].push_back(v),G[v].push_back(u);\n    }\n    dfs(1,0);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/AGC009%20%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#e","title":"E","text":"<p>\u597d\u6570\u4f4ddp\u3002</p> <p>\u5bf9\u8fd9\u4e9b\u64cd\u4f5c\u5efa \\(K\\) \u53c9\u6811\uff0c\u7236\u8282\u70b9\u7684\u6743\u503c\u4e3a\u5b50\u8282\u70b9\u7684\u6743\u503c\u53d6\u5e73\u5747\u6570\uff0c\u5373\u6743\u503c\u548c\u9664\u4ee5 \\(K\\) \uff0c\u6839\u8282\u70b9\u7684\u6743\u503c\u5219\u662f\u5269\u4e0b\u7684\u6570\u3002\u5982\u679c\u6211\u4eec\u8bbe \\(M\\) \u4e2a \\(1\\) \u7684\u6df1\u5ea6\u5206\u522b\u4e3a \\(x_1,x_2,\\dots,x_M\\) \uff0c\u4e0d\u96be\u5f97\u51fa\u7ed3\u679c\u4e3a \\(\\sum K^{-x_i}\\) \u3002\u540c\u65f6\u6ce8\u610f\u5230\u5982\u679c\u53f6\u5b50\u8282\u70b9\u5168\u90e8\u4e3a \\(1\\) \uff0c\u90a3\u4e48\u6839\u8282\u70b9\u4e5f\u4e3a \\(1\\) \u3002\u5728\u8fd9\u91cc\u6211\u4eec\u628a \\(N\\) \u4e2a \\(0\\) \u6539\u4e3a\u4e86 \\(1\\) \uff0c\u82e5\u5b83\u4eec\u7684\u6df1\u5ea6\u4e3a \\(y_1,y_2,\\dots,y_N\\) \uff0c\u5219\u6709 \\(\\sum K^{-x_i}=1-\\sum K^{-y_i}\\) \u3002</p> <p>\u5c06\u7b49\u5f0f\u4e24\u8fb9\u7528 \\(K\\) \u8fdb\u5236\u5c0f\u6570\u8868\u793a\u4e3a \\(z=0.c_1c_2c_3\\dots\\)\uff0c\u90a3\u4e48\u6211\u4eec\u6709\uff1a</p> <ul> <li> <p>\\(0&lt;c_1&lt;K\\) \uff0c\u5bf9\u4e8e \\(i&gt;1\\) \uff0c\\(0\\le c_i &lt; K\\)</p> </li> <li> <p>\u8003\u8651\u8f6c\u6362\u540e\u7684\u8fdb\u4f4d\uff0c \\(\\sum c_i\\equiv N\\pmod{K-1}\\)</p> </li> <li>\u5047\u8bbe\u4e3a \\(L\\) \u4f4d\u5c0f\u6570\uff0c\u8003\u8651 \\(1-z\\) \uff0c\u6709 \\(L(K-1)-\\sum c_i +1\\equiv M \\pmod{K-1}\\)</li> </ul> <p>\u5229\u7528\u8fd9\u4e9b\u6761\u4ef6\uff0c\u8bbe \\(f_{i,j,0/1}\\) \u4e3a \\(i\\) \u4f4d\u5c0f\u6570\uff0c\u6570\u4f4d\u548c\u4e3a \\(j\\) \uff0c\u9996\u4f4d\u662f\u5426\u4e3a \\(0\\) \u7684\u7b54\u6848\uff0c\u7b80\u5355\u8f6c\u79fb\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O((N+M)^2)\\) </p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2005,P=1e9+7;\nint n,m,K,ans,f[N&lt;&lt;1][N][2],sum[N];\ninline int qm(int x){return x&gt;=P?x-P:x;}\nint main(){\n    n=read(),m=read(),K=read();\n    f[0][0][0]=1;\n    rep(i,1,2*max(n,m)){\n        sum[0]=qm(f[i-1][0][0]+f[i-1][0][1]);\n        rep(j,1,n){\n            sum[j]=qm(sum[j-1]+qm(f[i-1][j][0]+f[i-1][j][1]));\n        }\n        rep(j,0,n){\n            f[i][j][0]=qm(f[i-1][j][0]+f[i-1][j][1]);\n            if(j){\n                f[i][j][1]=qm(sum[j-1]);\n                if(j-K&gt;=0)f[i][j][1]=qm(f[i][j][1]-sum[j-K]+P);\n            }\n        }\n        rep(j,0,n){\n            if(j%(K-1)==n%(K-1)&amp;&amp;(i*(K-1)-j+1)%(K-1)==m%(K-1)&amp;&amp;i*(K-1)-j+1&lt;=m){\n                ans=qm(ans+f[i][j][1]);\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/ARC115%E7%AE%80%E8%A6%81%E9%A2%98%E8%A7%A3/","title":"ARC115\u7b80\u8981\u9898\u89e3","text":""},{"location":"Old%20Posts/ARC115%E7%AE%80%E8%A6%81%E9%A2%98%E8%A7%A3/#a","title":"A","text":"<p>\u5bb9\u6613\u53d1\u73b0\uff0c\u4e24\u4eba\u65e0\u6cd5\u6709\u76f8\u540c\u6b63\u786e\u9898\u6570\u5f53\u4e14\u4ec5\u5f53\u4e24\u4eba\u4e0d\u540c\u7b54\u6848\u7684\u9898\u6570\u4e3a\u5947\u6570\u3002\u8fdb\u4e00\u6b65\uff0c\u6709\u4e24\u4eba\u7684\u6570\u5b57\u548c\u4e3a\u5947\u6570\uff08\u76f8\u540c\u7b54\u6848\u6570\u5b57\u548c\u4e3a\u5076\u6570\uff0c\u4e0d\u540c\u7b54\u6848\u7684\u4f4d\u7f6e\u4e00\u5b9a\u6700\u7ec8\u6709\u5947\u6570\u4e2a \\(1+0=1\\)\u3002\uff09\u4e8e\u662f\u7b54\u6848\u4e3a\u6570\u5b57\u548c\u4e3a\u5947\u6570\u7684\u5b66\u751f\u4e2a\u6570\u4e58\u4ee5\u6570\u5b57\u548c\u4e3a\u5076\u6570\u7684\u5b66\u751f\u4e2a\u6570\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nll n,m,tot[2];\nchar s[100005][25];\nint main(){\n    n=read(),m=read();\n    rep(i,1,n){\n        scanf(\"%s\",s[i]+1);\n        int cnt=0;\n        rep(j,1,m)cnt+=s[i][j]-'0';\n        tot[cnt&amp;1]++;\n    }\n    printf(\"%lld\\n\",tot[0]*tot[1]);\n    return 0;\n}\n\n### B\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u5b58\u5728\u6784\u9020\u7684\u77e9\u9635\uff0c\u6bcf\u4e00\u884c\u7684\u5dee\u5206\u6570\u7ec4\u4e00\u5b9a\u76f8\u7b49\u3002\u53d6\u5143\u7d20\u6700\u5c0f\u7684\u4e00\u884c\u4e3a $B_i$ \uff0c\u5176\u4ed6\u884c\u4e0e\u8be5\u884c\u7684\u5dee\u4e3a $A_i$ \u5373\u53ef\u3002\n\n```cpp\n#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint c[505][505],k=1,a[505],b[505];\ninline void solve(){\n    int n=read();\n    rep(i,1,n){\n        rep(j,1,n)c[i][j]=read();\n        if(c[i][1]&lt;c[k][1])k=i;\n    }\n    rep(i,1,n){\n        if(i==k)continue;\n        rep(j,2,n){\n            if(c[i][j]-c[k][j]!=c[i][1]-c[k][1]){\n                puts(\"No\");return;\n            }\n        }\n        a[i]=c[i][1]-c[k][1];\n    }\n    puts(\"Yes\");\n    rep(i,1,n)printf(\"%d \",a[i]);\n    printf(\"\\n\");\n    rep(i,1,n)printf(\"%d \",c[k][i]);\n}\nint main(){\n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/ARC115%E7%AE%80%E8%A6%81%E9%A2%98%E8%A7%A3/#c","title":"C","text":"<p>\u9996\u5148 \\(p^n\\) \u5bf9\u5e94\u7684 \\(A\\) \u503c\u4e0e \\(p,p^2,\\dots,p^{n-1}\\) \u90fd\u4e0d\u540c\uff0c\u5f52\u7eb3\u5f97\u81f3\u5c11\u4e3a \\(n\\) \u3002\u540c\u7406\u53ef\u5f97\u5bf9\u4e8e\u4efb\u610f \\(n\\) \uff0c\\(A_n\\) \u6700\u5c11\u4e3a \\(n\\) \u5206\u89e3\u8d28\u56e0\u6570\u540e\u7684\u6b21\u6570\u548c\uff0c\u4e0d\u96be\u9a8c\u8bc1\u8fd9\u6837\u6ee1\u8db3\u6761\u4ef6\u3002\u7ebf\u6027\u7b5b\u5373\u53ef\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5;\nint pri[N],d[N],t[N],tot;\nbool vis[N];\ninline void solve(){\n    int n=read();\n    d[1]=1;\n    rep(i,2,n){\n        if(!vis[i]){\n            pri[++tot]=i;\n            d[i]=2;\n        }\n        for(int j=1;j&lt;=tot&amp;&amp;pri[j]*i&lt;=n;j++){\n            vis[i*pri[j]]=1;\n            d[i*pri[j]]=d[i]+1;\n            if(i%pri[j]==0)break;\n        }\n    }\n    rep(i,1,n)printf(\"%d \",d[i]);\n}\nint main(){\n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/ARC115%E7%AE%80%E8%A6%81%E9%A2%98%E8%A7%A3/#d","title":"D","text":"<p>\u56e0\u4e3a\u4e00\u5f20\u56fe\u7684\u5ea6\u6570\u548c\u4e00\u5b9a\u662f\u5076\u6570\uff0c\u6240\u4ee5 \\(k\\) \u4e3a\u5076\u6570\u3002\u8003\u8651\u539f\u56fe\u662f\u4e00\u68f5\u6811\u65f6\uff0c\u6211\u4eec\u9009\u53d6\u5076\u6570\u4e2a\u70b9\u7684\u96c6\u5408\uff0c\u9009\u53d6\u4e24\u4e24\u4e4b\u95f4\u7684\u6811\u4e0a\u8def\u5f84\u4e3a\u8fb9\uff08\u9009\u6bcf\u6761\u8fb9\u7684\u6b21\u6570\u6a21\\(2\\)\uff09\u3002\u8fd9\u6837\u5c31\u8bc1\u660e\u4e86\u5bf9\u4e8e\u6bcf\u4e2a\u5076\u6570\u4e2a\u70b9\u7684\u96c6\u5408\uff0c\u90fd\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u56fe \\(H\\) \u3002</p> <p>\u8fd9\u6837\u7684\u6784\u9020\u552f\u4e00\u5417\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u56e0\u4e3a \\(n\\) \u4e2a\u70b9\u7684\u6811\u4e0a\u6709 \\(2^{n-1}\\) \u79cd\u9009\u53d6\u8fb9\u7684\u65b9\u5f0f\uff0c\u800c  \uff08\u753b\u6768\u8f89\u4e09\u89d2\u6216\u901a\u8fc7\u7ec4\u5408\u6570\u9012\u63a8\u5f0f\u65e2\u5f97\uff09</p> <p>\u8fd9\u8bf4\u660e\u6211\u4eec\u6784\u9020\u7684\u662f\u53cc\u5c04\uff0c\u4e8e\u662f\u9009 \\(k\\) \u4e2a\u70b9\u7684\u65b9\u6848\u6570\u5c31\u662f \\(C_n^k\\) .</p> <p>\u4e0b\u9762\u770b\u8fde\u901a\u56fe\u7684\u60c5\u5f62\uff0c\u6211\u4eec\u5c06\u8fb9\u5206\u4e3a\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u548c\u975e\u6811\u8fb9\u4e24\u79cd\u3002\u5bf9\u4e8e\u9009\u53d6\u7684\u975e\u6811\u8fb9\u96c6\u5408\uff0c\u6bcf\u6761\u8fb9 \\((u,v)\\) \u90fd\u5b58\u5728\u5bf9\u5e94\u7684\u6811\u4e0a\u8def\u5f84\uff0c\u5c06\u6240\u6709\u8def\u5f84\u9009\u62e9\u540e\u53d1\u73b0\u548c\u6811\u7684\u60c5\u5f62\u662f\u4e00\u6837\u7684\u3002\u4e8e\u662f\u9009 \\(k\\) \u4e2a\u70b9\u7684\u65b9\u6848\u6570\u5c31\u662f \\(2^{m-n+1}C_n^k\\) .</p> <p>\u4e00\u822c\u56fe\u5219\u662f\u628a\u6240\u6709\u8fde\u901a\u5206\u91cf\u7684\u7b54\u6848\u505a\u5377\u79ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N^2)\\) \u6216 \\(O(N\\log N)\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=5e3+5,P=998244353;\nint n,m,fac[N],ifac[N],tot,cur=1;\nint sz[N],e[N],fa[N];\nll f[N][N],g[N];\nint find(int x){\n    return fa[x]==x?x:fa[x]=find(fa[x]);\n}\nvoid merge(int u,int v){\n    int fu=find(u),fv=find(v);\n    e[fu]++;\n    if(fu!=fv)fa[fv]=fu,sz[fu]+=sz[fv],e[fu]+=e[fv];\n}\ninline ll fpow(ll x,ll y){\n    ll res=1;\n    while(y){\n        if(y&amp;1)res=res*x%P;\n        y&gt;&gt;=1;x=x*x%P;\n    }\n    return res;\n}\ninline ll C(int n,int m){return 1ll*fac[n]*ifac[m]%P*ifac[n-m]%P;}\nint main(){\n    n=read(),m=read();\n    fac[0]=1;\n    rep(i,1,n){\n        fac[i]=1ll*i*fac[i-1]%P;\n        fa[i]=i,sz[i]=1;\n    }\n    ifac[n]=fpow(fac[n],P-2);\n    rep(i,1,n)ifac[n-i]=1ll*(n-i+1)*ifac[n-i+1]%P;\n    rep(i,1,m){\n        int u=read(),v=read();\n        merge(u,v);\n    }\n    f[0][0]=1;\n    rep(i,1,n){\n        if(fa[i]==i){\n            int ni=sz[i],mi=e[i];\n            ll pow2=fpow(2,mi-ni+1);\n            for(int k=0;k&lt;=ni;k+=2){\n                g[k]=pow2*C(ni,k)%P;\n            }\n            rep(j,0,ni)rep(k,0,tot){\n                f[cur][j+k]=(f[cur][j+k]+f[cur-1][k]*g[j]%P)%P;\n            }\n            tot+=ni,cur++;\n        }\n    }\n    rep(i,0,n)printf(\"%lld\\n\",f[cur-1][i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/Boruvka/","title":"Boruvka","text":"<p>\uff08\u4e0a\u573a Codeforces div.2 F\u9898 \u6ca1\u60f3\u51fa\u6765\uff0c\u95ee\u4e86\u5927\u4f6c KarL05 \u624d\u77e5\u9053\u6709\u9664\u4e86 Kruskal \u548c Prim \u4ee5\u5916\u7684\u4e00\u79cd\u751f\u6210\u6811\u7b97\u6cd5\uff0c\u6545\u5c06\u5176\u8bb0\u5f55\u4e0b\u6765\u3002\uff09</p> <p>\u7b97\u6cd5\u5185\u5bb9\u5927\u6982\u662f\u7ef4\u62a4\u6bcf\u4e2a\u8fde\u901a\u5757\u8fde\u51fa\u7684\u6700\u5c0f\u8fb9\uff0c\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\u627e\u5230\u8fde\u51fa\u7684\u6700\u5c0f\u8fb9\uff0c\u627e\u5b8c\u540e\u5408\u5e76\u3002\u7531\u4e8e\u539f\u56fe\u8fde\u901a\uff0c\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u8fde\u901a\u5757\u4e2a\u6570\u81f3\u5c11\u51cf\u534a\uff0c\u6545\u7b97\u6cd5\u8fed\u4ee3\u6b21\u6570\u4e0d\u8d85\u8fc7 \\(O(\\log V)\\) \u6b21\u3002</p> <p>\u7b97\u6cd5\u8be6\u89e3\uff1aBoruvka \u7b97\u6cd5</p>"},{"location":"Old%20Posts/Boruvka/#cf888g-xor-mst","title":"CF888G Xor-MST","text":"<p>\u9898\u76ee\u5927\u610f\uff1a </p> <p>\u7ed9\u51fa \\(n\\) \u4e2a\u70b9\uff0c\u70b9\u6743\u4e3a \\(a_i\\) \uff0c\u8fde\u63a5 \\(i\\) \u548c \\(j\\) \u7684\u8fb9\u6743\u4e3a \\(a_i\\oplus a_j\\) \uff0c\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6743\u548c\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le n\\le 2\\times 10^5,0\\le a_i&lt;2^{30}\\) .</p> <p>\u9898\u76ee\u96be\u5ea6\uff1aCF 2300*</p> <p>\u77e5\u8bc6\u50a8\u5907\uff1a01-Trie / Boruvka</p> <p>\u89e3\u6790\uff1a</p> <p>\u603b\u4e4b\u4e0d\u80fd\u505a\u51fa\u6240\u6709\u8fb9\u540e\u7528 Kruskal \u89e3\u51b3\uff0c\u8003\u8651\u4f7f\u7528 Boruvka \u3002\u53ef\u4ee5\u5c06\u6240\u6709 \\(a_i\\) \u63d2\u5165 01-Trie \u6765\u7ef4\u62a4\u5f02\u6216\u6700\u5c0f\u503c\u3002\u628a 01-Trie \u770b\u4f5c\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u4e0d\u96be\u53d1\u73b0\u6070\u6709 \\(n-1\\) \u4e2a\u8282\u70b9\u6709\u5de6\u53f3\u513f\u5b50\u3002\\(a_i\\oplus a_j\\) \u65f6\u53ea\u7528\u8003\u8651\u4e24\u70b9\u5728\u5176 LCA \u4e4b\u540e\u7684\u5f02\u6216\u6700\u503c\uff0c\u4e8e\u662f\u5bf9\u4e8e\u6709\u5de6\u53f3\u513f\u5b50\u7684\u70b9\uff08\u5373\u4e3a\u67d0\u4e24\u70b9 LCA \u7684\u70b9\uff09\uff0c \u627e\u51fa\u5f53\u524d\u80fd\u8fde\u7684\u6700\u5c0f\u8fb9\u5e76\u5408\u5e76\u5176\u5b50\u6811\u5373\u53ef\u3002</p> <p>\u5c0f\u6280\u5de7\u662f\u628a \\(a_i\\) \u6392\u5e8f\u540e\u4ece\u5c0f\u5230\u5927\u63d2\u5165\uff0c\u8fd9\u6837\u6bcf\u4e2a\u8282\u70b9\u4f1a\u5bf9\u5e94\u6570\u7ec4\u4e2d\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n\\log a_i)\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5,inf=(1&lt;&lt;30);\nint n,m,a[N],L[N*32],R[N*32],ch[2][N*32],rt,cnt;\n//\u63d2\u5165trie\nvoid insert(int &amp;p,int id,int dep){\n    if(!p)p=++cnt;\n    if(!L[p])L[p]=id;\n    R[p]=id;\n    if(dep==-1)return;\n    insert(ch[(a[id]&gt;&gt;dep)&amp;1][p],id,dep-1);\n}\n//\u67e5\u8be2\u5f02\u6216\u6700\u5c0f\u503c\nll Q(int p,int x,int dep){\n    if(dep==-1)return 0;\n    int v=(x&gt;&gt;dep)&amp;1;\n    if(ch[v][p])return Q(ch[v][p],x,dep-1);\n    else return Q(ch[v^1][p],x,dep-1)+(1&lt;&lt;dep);\n}\n#define ls ch[0][p]\n#define rs ch[1][p]\nll dfs(int p,int dep){\n    if(dep==-1)return 0;\n    if(ls&amp;&amp;rs){\n        ll val=inf;\n        rep(i,L[ls],R[ls]){\n            val=min(val,Q(rs,a[i],dep-1)+(1&lt;&lt;dep));\n        }\n        return dfs(ls,dep-1)+dfs(rs,dep-1)+val;\n    }\n    if(ls)return dfs(ls,dep-1);\n    if(rs)return dfs(rs,dep-1);\n    return 0;\n}\nint main(){\n    n=read();\n    rep(i,1,n)a[i]=read();\n    sort(a+1,a+n+1);\n    rep(i,1,n)insert(rt,i,30);\n    printf(\"%lld\\n\",dfs(rt,30));\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/Boruvka/#cf1550e-jumping-around","title":"CF1550E Jumping Around","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u6570\u8f74\u4e0a\u6709 \\(n\\) \u4e2a\u77f3\u5934\uff0c\u5750\u6807\u4e3a \\(a_1&lt;a_2&lt;\\cdots&lt;a_n\\) \u3002\u521d\u59cb\u6709\u9752\u86d9\u5728\u77f3\u5934 \\(s\\) \u4e0a\uff0c\u6bcf\u6b21\u80fd\u5411\u5de6\u6216\u53f3\u8df3 \\([d,d+k]\\) \u533a\u95f4\u5185\u7684\u4efb\u610f\u8ddd\u79bb\uff0c\u4f46\u662f\u5fc5\u987b\u8981\u843d\u5728\u77f3\u5934\u4e0a\u3002\u7ed9 \\(q\\) \u4e2a\u8be2\u95ee\uff0c\u95ee\u5bf9\u4e8e\u7ed9\u5b9a\u7684 \\(k\\) \uff0c\u9752\u86d9\u662f\u5426\u80fd\u8df3\u5230\u77f3\u5934 \\(i\\) \uff1f</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le n,q\\le 2\\times 10^5,1\\le s,i\\le n,1\\le d,k,a_i\\le 10^6\\) .</p> <p>\u9898\u76ee\u96be\u5ea6\uff1aCF 2700*</p> <p>\u77e5\u8bc6\u50a8\u5907\uff1aBoruvka</p> <p>\u89e3\u6790\uff1a</p> <p>\u4e0d\u96be\u60f3\u5230\u5efa\u6700\u5c0f\u751f\u6210\u6811\u540e\u5224\u65ad \\(s\\) \u5230\u6bcf\u4e2a\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u6700\u5927\u6743\u503c\uff0c\u6700\u540e\u79bb\u7ebf\u5904\u7406\u8be2\u95ee\u3002\u552f\u4e00\u7684\u95ee\u9898\u5728\u5982\u4f55\u5728\u6709 \\(O(n^2)\\) \u6761\u8fb9\u7684\u56fe\u4e2d\u505a MST \u3002</p> <p>\u5177\u4f53\u5730\uff0c\u8003\u8651\u4f7f\u7528 Boruvka \uff0c\u7531\u4e8e\u8be5\u9898\u7684\u8fb9\u6743\u6709\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u4f4d\u7f6e\u653e\u5165 set \u4e2d\uff0c\u6bcf\u6b21\u7528 lower_bound \u67e5\u8be2\u79bb \\(a_i+d\\) \u548c \\(a_i-d\\) \u6700\u8fd1\u7684\u70b9\uff0c\u5e76\u52a0\u8fb9\u3002Boruvka \u4f1a\u8fed\u4ee3 \\(O(\\log n)\\) \u6b21\uff0c\u800c\u6bcf\u6b21\u52a0\u8fb9\u548c\u5408\u5e76\u7684\u603b\u590d\u6742\u5ea6\u662f \\(O(n\\log n)\\) \u7684\uff0c\u6545\u603b\u4f53\u53ef\u4ee5\u505a\u5230 \\(O(n\\log^2 n)\\) \u3002\u52a0\u8fb9\u53ef\u4ee5\u7528\u53cc\u6307\u9488\u4f18\u5316\u5230 \\(O(n)\\) \u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n\\log^2 n+q)\\) \u6216 \\(O(n\\log n+q)\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5,inf=1e9;\nstruct Edge{\n    int u,v,w;\n    friend bool operator &lt;(const Edge &amp;a,const Edge &amp;b){\n        if(a.w!=b.w)return a.w&lt;b.w;\n        if(min(a.u,a.v)!=min(b.u,b.v))\n            return min(a.u,a.v)&lt;min(b.u,b.v);\n        return max(a.u,a.v)&lt;max(b.u,b.v);\n    }\n};\nint n,q,s,D,fa[N],mn[N];\nvector&lt;int&gt;comps[N];\nbool merge(int u,int v){\n    u=fa[u],v=fa[v];\n    if(u==v)return 0;\n    if(comps[u].size()&lt;comps[v].size())swap(u,v);\n    for(int x:comps[v]){\n        fa[x]=u;\n        comps[u].pb(x);\n    }\n    comps[v].clear();\n    return 1;\n}\n\nvector &lt;pii&gt; G[N];\nvoid dfs(int u,int p,int d){\n    mn[u]=d;\n    for(auto e:G[u])if(e.fi!=p){\n        dfs(e.fi,u,max(d,e.se));\n    }\n}\nint main(){\n    n=read(),q=read(),s=read()-1,D=read();\n    vector &lt;int&gt; a(n);\n    rep(i,0,n-1){\n        comps[i]=vector&lt;int&gt;(1,i);\n        a[i]=read();\n        fa[i]=i;\n    }\n    vector&lt;int&gt;idx(a[n-1]+1);\n    rep(i,0,n-1)idx[a[i]]=i;\n    int cnt=n;\n    set&lt;int&gt;pos(a.begin(),a.end());\n    while(cnt&gt;1){\n        vector &lt;Edge&gt; tmp;\n        for(const vector&lt;int&gt; &amp;comp:comps)if(!comp.empty()){\n            for(int i:comp)pos.erase(a[i]);\n            Edge mn={-1,-1,inf};\n            for(int i:comp){//\u627e\u6700\u77ed\u8fb9\n                for(int d:{-D,D}){\n                    auto it = pos.lower_bound(a[i]+d);\n                    if(it!=pos.end()){\n                        int dis=abs(abs(a[i]-*it)-D);\n                        mn=min(mn,{i,idx[*it],dis});\n                    }\n                    if(it!=pos.begin()){\n                        it--;\n                        int dis=abs(abs(a[i]-*it)-D);\n                        mn=min(mn,{i,idx[*it],dis});\n                    }\n                }\n            }\n            for(int i:comp)pos.insert(a[i]);\n            tmp.pb(mn);\n        }\n        for(auto e:tmp){//\u52a0\u8fb9\n            if(merge(e.u,e.v)){\n                --cnt;\n                G[e.u].pb({e.v,e.w});\n                G[e.v].pb({e.u,e.w});\n            }\n        }\n    }\n    dfs(s,-1,0);\n    while(q--){\n        int i=read()-1,k=read();\n        puts(mn[i]&lt;=k?\"Yes\":\"No\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/CF1517C/","title":"CF1517C","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"Old%20Posts/CF1517C/#_1","title":"\u601d\u8def","text":"<p>\u5982\u679c\u5de6\u8fb9\u6709\u4f4d\u7f6e\u5c31\u5f80\u5de6\u8fb9\u586b\u5145\uff0c\u5426\u5219\u5f80\u4e0b\u586b\u5145\uff0c\u4e0d\u96be\u8bf4\u660e\u6b63\u786e\u6027\u3002\u586b\u5145\u65b9\u5f0f\u53ef\u4ee5\u4f7f\u7528dfs\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint p[505],a[505][505],cnt[505];\nvoid dfs(int i,int j,int col){\n    //cout&lt;&lt;i&lt;&lt;\" \"&lt;&lt;j&lt;&lt;\" \"&lt;&lt;col&lt;&lt;endl;\n    if(!a[i][j]){\n        cnt[col]++;a[i][j]=col;\n    }\n    if(!a[i][j-1]&amp;&amp;j&gt;1&amp;&amp;cnt[col]&lt;col)dfs(i,j-1,col);\n    else if(cnt[col]&lt;col)dfs(i+1,j,col);\n}\nint main(){\n    int n=read();\n    rep(i,1,n){\n        a[i][i]=p[i]=read();\n        cnt[p[i]]=1;\n    }\n    rep(i,1,p[1])a[i][1]=p[1];\n    rep(i,2,n){\n        dfs(i,i,p[i]);\n    }\n    rep(i,1,n){\n        rep(j,1,i)cout&lt;&lt;a[i][j]&lt;&lt;\" \";\n        cout&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/Google%20Kick%20Start%20Round%20H/","title":"Google Kick Start Round H","text":""},{"location":"Old%20Posts/Google%20Kick%20Start%20Round%20H/#a","title":"A","text":"<p>\u53ef\u4ee5\u4f18\u5316\u5230 \\(O(n+m)\\) \uff0c\u8fd9\u91cc\u968f\u4fbf\u6253\u4e86\u4e2a\u66b4\u529b\u3002</p> <pre><code>const int N=2e5+5;\nchar s[N],f[N];\nint main(){\n    int T=read();\n    rep(t,1,T){\n        scanf(\"%s%s\",s+1,f+1);\n        int n=strlen(s+1),m=strlen(f+1),ans=0;\n        rep(i,1,n){\n            int mx=26;\n            rep(j,1,m){\n                int k=abs(f[j]-s[i]);\n                mx=min(mx,min(k,26-k));\n            }\n            ans+=mx;\n        }\n        printf(\"Case #%d: %d\\n\",t,ans);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/Google%20Kick%20Start%20Round%20H/#b","title":"B","text":"<p>\u66b4\u529b\u9898\uff0c\u4e0d\u96be\u53d1\u73b0\u6bcf\u79cd\u989c\u8272\u662f\u72ec\u7acb\u7684\uff0c\u5206\u522b\u7b97\u6bb5\u6570\u6c42\u548c\u5c31\u884c\uff0c\\(O(n)\\) \u3002</p> <pre><code>const int N=2e5+5;\nchar s[N];\nbool R(char c){return c=='R'||c=='O'||c=='P'||c=='A';}\nbool Y(char c){return c=='Y'||c=='O'||c=='G'||c=='A';}\nbool B(char c){return c=='B'||c=='G'||c=='P'||c=='A';}\nint main(){\n    int T=read();\n    rep(t,1,T){\n        int ans=0,n=read();\n        scanf(\"%s\",s+1);\n        rep(i,1,n){\n            if(R(s[i])&amp;&amp;!R(s[i-1]))ans++;\n        }\n        rep(i,1,n){\n            if(Y(s[i])&amp;&amp;!Y(s[i-1]))ans++;\n        }\n        rep(i,1,n){\n            if(B(s[i])&amp;&amp;!B(s[i-1]))ans++;\n        }\n        printf(\"Case #%d: %d\\n\",t,ans);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/Google%20Kick%20Start%20Round%20H/#c","title":"C","text":"<p>\u601d\u7ef4\u9898\uff0c\u66b4\u529b\u505a\u6cd5 \\(O(n^2)\\) \uff0c\u8003\u8651\u4f18\u5316\u3002\u6211\u4eec\u8003\u8651\u52a0\u5feb\u626b\u63cf\u533a\u95f4\u7684\u901f\u5ea6\uff0c\u5177\u4f53\u5730\uff0c\u53ef\u4ee5\u7528 vector \u5b58\u4e0b\u6bcf\u4e2a\u53ef\u80fd\u64cd\u4f5c\u7684\u4f4d\u7f6e\uff0c\u6ce8\u610f\u5230\u65b0\u751f\u6210\u7684\u6570\u6700\u591a\u548c\u5de6\u53f3\u5404\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\uff0c\u603b\u5171\u6700\u591a\u64cd\u4f5c \\(n-1\\) \u6b21\uff0c\u4e8e\u662f\u4f4d\u7f6e\u6570\u91cf\u662f \\(O(n)\\) \u7684\u3002\u7528\u94fe\u8868\u4f18\u5316\u5220\u9664\uff0c\u6a21\u62df\u5373\u53ef\u3002</p> <pre><code>const int N=5e5+5;\nchar s[N],res[N];\nint l[N],r[N];\nbool tag[N];\nchar nc(char c){if(c&gt;='0'&amp;&amp;c&lt;'9')return c+1;return '0';}\nvi v[10];\nint main(){\n    int T=read();\n    rep(t,1,T){\n        int n=read();\n        scanf(\"%s\",s+1);\n        rep(i,1,n)l[i]=i-1,r[i]=i+1,tag[i]=0;\n        int cnt=0;\n        rep(k,'0','9')rep(i,1,n){\n            if(s[i]==k&amp;&amp;s[i+1]==nc(k))v[k-'0'].pb(i),++cnt;\n        }\n        int k=0;\n        while(cnt){\n            while(v[k].size()){\n                int x=v[k].back(),y=r[x];\n                v[k].pop_back();\n                --cnt;\n                if(s[x]!=k+'0'||s[y]!=nc(k+'0'))continue;\n                if(l[x])r[l[x]]=y;\n                l[y]=l[x],tag[x]=1;\n                s[y]=nc(s[y]);\n                if(l[y]&amp;&amp;nc(s[l[y]])==s[y]){\n                    v[(k+1)%10].pb(l[y]);\n                    cnt++;\n                }\n                if(r[y]&lt;=n&amp;&amp;nc(s[y])==s[r[y]]){\n                    v[(k+2)%10].pb(y);cnt++;\n                }\n            }\n            k=(k+1)%10;\n        }\n        printf(\"Case #%d: \",t);\n        rep(i,1,n)if(!tag[i])cout&lt;&lt;s[i];\n        cout&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/Google%20Kick%20Start%20Round%20H/#d","title":"D","text":"<p>\u4e00\u773c\u52a8\u6001 dp \u9898\u3002\u8f6c\u79fb\u662f\u663e\u7136\u7684\u3002\u4f46\u662f\u7531\u4e8e\u9898\u76ee\u4e0d\u5e26\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6811\u4e0a\u500d\u589e\u7ef4\u62a4\uff0c\u8bb0 \\(A_{u,k},B_{u,k}\\) \u4e3a \\(u\\) \u5f80\u4e0a\u8d70 \\(2^k\\) \u6b65\u7684\u7956\u5148\u662f\u5426\u88ab\u67d3\u8272\u65f6\uff0c\\(u\\) \u88ab\u67d3\u8272\u7684\u6982\u7387\u3002\u9b54\u6539\u4e00\u4e0b LCA \u51fd\u6570\u5c31\u597d\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(O((n+q)\\log n)\\) \u3002</p> <pre><code>const int N=2e5+5,P=1e9+7,M=1e6;\nll n,q,K[N],A[N][18],B[N][18],fa[N][18],dep[N],inv[M+5];\nvoid jump(int &amp;u,int k,pii &amp;a){\n    a={(a.fi*A[u][k]+a.se*(P+1-A[u][k]))%P,\n    (a.fi*B[u][k]+a.se*(P+1-B[u][k]))%P};\n    u=fa[u][k];\n}\nint calc(int x,int y){\n    pii ax={1,0},ay={1,0};\n    if(dep[x]&lt;dep[y])swap(x,y);\n    per(k,17,0){\n        if(dep[x]-(1&lt;&lt;k)&gt;=dep[y])jump(x,k,ax);\n    }\n    if(x^y){\n        per(i,17,0){\n            if(fa[x][i]!=fa[y][i]){\n                jump(x,i,ax);\n                jump(y,i,ay);\n            }\n        }\n        jump(x,0,ax),jump(y,0,ay);\n    }\n    return (ax.fi*ay.fi%P*K[x]+ax.se*ay.se%P*(P+1-K[x]))%P;\n}\nvoid solve(){\n    n=read(),q=read(),K[1]=read()*inv[M]%P;\n    rep(i,2,n){\n        fa[i][0]=read(),A[i][0]=read()*inv[M]%P,B[i][0]=read()*inv[M]%P;\n        dep[i]=dep[fa[i][0]]+1;\n        K[i]=(K[fa[i][0]]*A[i][0]+(P+1-K[fa[i][0]])*B[i][0])%P;\n        rep(j,1,18){\n            fa[i][j]=fa[fa[i][j-1]][j-1];\n            if(fa[i][j]){\n                A[i][j]=(A[i][j-1]*A[fa[i][j-1]][j-1]+B[i][j-1]*(P+1-A[fa[i][j-1]][j-1]))%P;\n                B[i][j]=(A[i][j-1]*B[fa[i][j-1]][j-1]+B[i][j-1]*(P+1-B[fa[i][j-1]][j-1]))%P;\n            }\n        }\n    }\n    while(q--){\n        int u=read(),v=read();\n        printf(\"%d \",calc(u,v));\n    }\n    puts(\"\");\n}\nint main(){\n    inv[1]=1;\n    rep(i,2,M){\n        inv[i]=(P-P/i)*inv[P%i]%P;\n    }\n    int T=read();\n    rep(t,1,T){\n        printf(\"Case #%d: \",t);\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/JOI%202021%20Final/","title":"JOI 2021 Final","text":""},{"location":"Old%20Posts/JOI%202021%20Final/#t1-4","title":"T1. \u3068\u3066\u3082\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712 4","text":"<p>\u9898\u610f\uff1a</p> <p>\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u6570\u7ec4 \\(A_i\\) \uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u4efb\u610f\u4e00\u6bb5\u533a\u95f4 \\([l,r]\\) \u4e2d\u7684\u6570 \\(+1\\) \u3002\u8981\u6c42\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u5f97\u5230\u7684\u5e8f\u5217 \\(B_i\\) \u6ee1\u8db3\u5b58\u5728\u4e00\u4e2a \\(k\\in[1,N]\\)\uff0c\u4f7f\u5f97 \\([1,k]\\) \u7684\u6570\u4e25\u683c\u9012\u589e\uff0c\\([k+1,N]\\) \u7684\u6570\u4e25\u683c\u9012\u51cf\u3002\u6700\u5c0f\u5316\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>\u89e3\u6790\uff1a</p> <p>\u53ea\u6709\u533a\u95f4\u64cd\u4f5c\uff0c\u5e76\u4e14\u6700\u540e\u5f97\u5230\u7684\u6570\u7ec4\u6ee1\u8db3\u4e00\u4e9b\u5355\u8c03\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u5dee\u5206\u4f18\u5316\u3002\u8fd9\u6837\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u5c31\u53d8\u6210\u5c06\u5dee\u5206\u6570\u7ec4 \\(d\\) \u4e2d\u7684 \\(d_l\\) \u52a0\u4e00\uff0c\\(d_{r+1}\\) \u51cf\u4e00\u3002\u6700\u540e\u7684\u5e8f\u5217\u6ee1\u8db3\u4e00\u6bb5 \\(d_i&gt;0\\) \u63a5\u4e00\u6bb5 \\(d_i&lt;0\\) \uff0c\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7b97\u51fa\u4ee4\u4e00\u6bb5\u533a\u95f4\u7684 \\(d_i\\) \u6ee1\u8db3\u6761\u4ef6\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u540e\u9762\u679a\u4e3e\u65ad\u70b9 \\(k\\) \u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,a[N],b[N];\nll f[N],g[N];\nint main(){\n    n=read();\n    rep(i,1,n)a[i]=read();\n    rep(i,1,n)b[i]=a[i]-a[i-1];\n    rep(i,2,n){\n        if(b[i]&lt;=0){\n            f[i]=f[i-1]-b[i]+1;\n        }else f[i]=f[i-1];\n    }\n    per(i,n,2){\n        if(b[i]&gt;=0){\n            g[i]=g[i+1]+b[i]+1;\n        }else g[i]=g[i+1];\n    }\n    ll ans=1e18;\n    rep(i,1,n)ans=min(ans,max(f[i],g[i+1]));\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/JOI%202021%20Final/#t2","title":"T2. \u96ea\u7389","text":"<p>\u9898\u610f\uff1a</p> <p>\u4e00\u4e2a\u6570\u8f74\u4e0a\u6709 \\(N\\) \u4e2a\u8d28\u91cf\u4e3a \\(0\\) \u7684\u96ea\u7403\uff0c\u6700\u521d\u7b2c \\(i\\) \u4e2a\u96ea\u7403\u7684\u5750\u6807\u4e3a \\(X_i\\) \uff0c\u6570\u8f74\u4e0a\u8986\u76d6\u4e86\u96ea\u3002\u6709 \\(Q\\) \u5929\u7684\u5f3a\u98ce\uff0c\u7b2c \\(j\\) \u5929\u7684\u98ce\u4f1a\u4f7f\u6240\u6709\u96ea\u7403\u540c\u65f6\u79fb\u52a8 \\(W_j\\) \u8ddd\u79bb\u3002 \u5982\u679c\u6709\u96ea\u7403\u6eda\u8fc7\u4e00\u4e2a\u88ab\u96ea\u8986\u76d6\u7684\u533a\u95f4 \\([a,a+1]\\) \uff0c\u533a\u95f4\u4e0a\u7684\u96ea\u4f1a\u6d88\u5931\uff0c\u540c\u65f6\u96ea\u7403\u7684\u8d28\u91cf\u589e\u52a0 \\(1\\) \u3002\u8ba1\u7b97\u5728 \\(Q\\) \u5929\u540e\u6bcf\u4e2a\u96ea\u7403\u7684\u8d28\u91cf\u3002</p> <p>\u89e3\u6790\uff1a</p> <p>\u6240\u6709\u96ea\u7403\u4e00\u8d77\u5e73\u79fb\uff0c\u6240\u4ee5\u4efb\u610f\u4e00\u4e2a\u96ea\u7403\u90fd\u65e0\u6cd5\u8de8\u8d8a\u76f8\u90bb\u7684\u96ea\u7403\u53bb\u79ef\u96ea\uff0c\u800c\u5bf9\u4e00\u4e2a\u96ea\u7403\u8d21\u732e\u96ea\u7684\u533a\u95f4\u5fc5\u7136\u8fde\u7eed\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u96ea\u7403\uff0c\u8ba1\u7b97\u5b83\u6eda\u5230\u96ea\u7684\u6700\u5de6\u548c\u6700\u53f3\u7aef\u70b9 \\(l_i,r_i\\) \u3002</p> <p>\u5177\u4f53\u5730\uff0c\u6211\u4eec\u53d1\u73b0\u4e24\u4e2a\u96ea\u7403\u95f4\u7684\u8ddd\u79bb\u8d8a\u77ed\uff0c\u91cc\u9762\u7684\u96ea\u4f1a\u5148\u88ab\u6eda\u5b8c\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e9b\u533a\u95f4\u957f\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u8bb0\u5f55\u5411\u5de6\u548c\u5411\u53f3\u7684\u6700\u5927\u4f4d\u79fb \\(L,R\\) \uff0c\u82e5\u5f53\u524d\u7684\u98ce\u529b\u66f4\u65b0\u4e86\u8fd9\u4e2a\u4f4d\u79fb\uff0c\u4f7f\u5f97 \\(L+R\\) \u8d85\u8fc7\u4e86\u67d0\u4e2a\u533a\u95f4\u7684\u5927\u5c0f\uff0c\u5c31\u53ef\u4ee5\u7ef4\u62a4 \\(r_i,l_{i+1}\\) \uff0c\u5373\u4e24\u70b9\u5728\u533a\u95f4\u5185\u5206\u96ea\u7684\u4f4d\u7f6e\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log N+Q)\\) </p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;ll,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nll n,q,a[N];\nll l[N],r[N],w,x,L,R;\npii d[N];\nint main(){\n    n=read(),q=read();\n    rep(i,1,n){\n        a[i]=read();\n        l[i]=r[i]=-1;\n    }\n    rep(i,1,n-1)d[i]={a[i+1]-a[i],i};\n    sort(d+1,d+n);\n    int now=1;\n    while(q--){\n        x=read();w+=x;\n        if(w&gt;0)R=max(R,w);\n        else L=max(L,-w);\n        while(L+R&gt;=d[now].fi&amp;&amp;now&lt;n){\n            int i=d[now].se;\n            if(w&gt;0)r[i]=a[i+1]-L;\n            else r[i]=a[i]+R;\n            l[i+1]=r[i];\n            ++now;\n        }\n    }\n    rep(i,1,n){\n        if(l[i]==-1)l[i]=a[i]-L;\n        if(r[i]==-1)r[i]=a[i]+R;\n    }\n    rep(i,1,n)printf(\"%lld\\n\",r[i]-l[i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/JOI%202021%20Final/#t3","title":"T3. \u96c6\u5408\u5199\u771f","text":"<p>\u9898\u610f\uff1a</p> <p>\u7ed9\u4e00\u4e2a \\(1\\sim N\\) \u7684\u6392\u5217 \\(a\\) \uff0c\u8981\u6c42\u7ecf\u8fc7\u82e5\u5e72\u6b21\u4ea4\u6362 \\(a_i,a_{i+1}\\) \u540e\uff0c\u5bf9\u6240\u6709 \\(i\\) \u5747\u6ee1\u8db3 \\(a_i&lt;a_{i+1}+2\\) \u3002\u6c42\u6700\u5c11\u7684\u4ea4\u6362\u6b21\u6570\u3002</p> <p>\u89e3\u6790\uff1a</p> <p>\u521a\u5f00\u59cb\u5f88\u6ca1\u6709\u5934\u7eea\uff0c\u4e0d\u59a8\u770b\u770b\u64cd\u4f5c\u5b8c\u540e\u7684\u5e8f\u5217\u957f\u4ec0\u4e48\u6837\u5b50\u3002\u7531 \\(a_i&lt;a_{i+1}+2\\) \u5f97 \\(a_i\\le a_{i+1}+1\\) \uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6570\u6700\u591a\u6bd4\u540e\u9762\u7684\u6570\u5927 \\(1\\) \u3002\u90a3\u4e48\u53ef\u4ee5\u628a\u6700\u7ec8\u7684\u5e8f\u5217\u5206\u6210\u82e5\u5e72\u4e2a\u4e0b\u964d\u5e8f\u5217\uff0c\u5373\u5206\u4e3a \\(k\\) \u4e2a\u533a\u95f4 \\([l_1,r_1],[l_2,r_2],\\dots,[l_k,r_k]\\) \u3002\u4e0d\u96be\u53d1\u73b0 \\([l_i,r_i]\\) \u4e2d\u7684\u6570\u53ea\u80fd\u662f \\(r_i \\sim l_i\\) \u3002</p> <p>\u8003\u8651\u5bf9\u4e8e\u8fd9\u6837\u7684\u5408\u6cd5\u5e8f\u5217\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u662f\u4ec0\u4e48\uff0c\u8bbe\u539f\u6392\u5217\u4e2d \\(i\\) \u5728 \\(p_i\\) \u4f4d\u7f6e\uff0c\u5219\u65b0\u5e8f\u5217\u5230\u539f\u5e8f\u5217\u7684\u64cd\u4f5c\u6b21\u6570\u548c\u9006\u5e8f\u5bf9\u6709\u5173\uff0c\u5373\uff1a  \u8bbe \\(f_i\\) \u4e3a\u5c06\u524d \\(i\\) \u4e2a\u6570\u64cd\u4f5c\u6210\u5408\u6cd5\u5e8f\u5217\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u679a\u4e3e\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u8d77\u70b9\u53ef\u5f97 \\(\\(f_i=\\min_{1\\le j\\le i}\\{f_{j-1}+\\operatorname{calc}(j,i)\\}\\)\\) \uff0c\u63a5\u4e0b\u6765\u53ea\u7528\u8003\u8651\u5982\u4f55\u5feb\u901f\u8ba1\u7b97 \\(\\operatorname{calc}\\) \u51fd\u6570\u3002</p> <p>\u5bf9\u4e8e \\(k\\in[j,i]\\) \uff0c\u6211\u4eec\u8ba1\u7b97\u5b83\u4e0e \\([1,j-1]\\) \u4e2d\u7684\u9006\u5e8f\u5bf9\u6570\u548c\u5b83\u4e0e\u81ea\u5df1\u533a\u95f4\u5185\u7684\u9006\u5e8f\u5bf9\u6570\u3002\u77e5\u9053\u5728\u65b0\u5e8f\u5217\u4e2d \\(x&lt;j,k&lt;x\\le i\\) \u5728\u5b83\u524d\u9762\uff0c\\(j\\le x&lt;k\\) \u5728\u5b83\u540e\u9762\u3002\u5012\u5e8f\u679a\u4e3e \\(j\\) \uff0c\u9006\u5e8f\u5bf9\u6570\u53ef\u4ee5\u5f00\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^2\\log N)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5,inf=1e9;\nint n,p[N],f[N],A[N],B[N];\nvoid I(int *t,int x,int val){\n    for(;x&lt;=n;x+=x&amp;-x)t[x]+=val;\n}\nint Q(int *t,int x){\n    int res=0;\n    for(;x;x-=x&amp;-x)res+=t[x];\n    return res;\n}\nint main(){\n    n=read();\n    rep(i,1,n){\n        int x=read();\n        p[x]=i;\n    }\n    rep(i,1,n){\n        //printf(\"i=%d:\\n\",i);\n        f[i]=inf;\n        int sum=0;\n        memset(B,0,sizeof(B));\n        I(A,p[i],1);\n        per(j,i,1){\n            sum+=i-Q(A,p[j])-Q(B,p[j]);\n            //printf(\"j=%d: sum=%d,f=%d\\n\",j,sum,f[j-1]);\n            f[i]=min(f[i],f[j-1]+sum);\n            I(B,p[j],1);\n        }\n    }\n    printf(\"%d\\n\",f[n]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/JOI%202021%20Final/#t4","title":"T4. \u30ed\u30dc\u30c3\u30c8","text":"<p>\u9898\u610f\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a \\(N\\) \u4e2a\u70b9\uff0c\\(M\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u7b2c \\(i\\) \u6761\u8fb9\u7684\u989c\u8272\u4e3a \\(C_i\\in[1,M]\\) \uff0c\u4f46\u4e0d\u4fdd\u8bc1 \\(C_i\\) \u4e92\u4e0d\u76f8\u7b49\u3002</p> <p>\u6709\u4e00\u4e2a\u667a\u80fd\u673a\u5668\u4eba\uff0c\u4f60\u544a\u8bc9\u8fd9\u4e2a\u673a\u5668\u4eba\u4e00\u4e2a\u989c\u8272\uff0c\u5982\u679c\u5b83\u5f53\u524d\u6240\u5728\u8282\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8fd9\u79cd\u989c\u8272\u7684\u8fb9\uff0c\u5b83\u5c31\u4f1a\u8d70\u8fd9\u6761\u8def\uff0c\u5426\u5219\u5b83\u4f1a\u505c\u7559\u5728\u539f\u5730\u3002</p> <p>\u73b0\u5728\u8fd9\u4e2a\u673a\u5668\u4eba\u4ece\u70b9 \\(1\\) \u51fa\u53d1\u60f3\u79fb\u52a8\u5230\u70b9 \\(N\\) \uff0c\u4f46\u662f\u4f60\u4e0d\u4e00\u5b9a\u80fd\u901a\u8fc7\u4ec5\u4ec5\u544a\u8bc9\u5b83\u989c\u8272\u6765\u4f7f\u5b83\u8d70\u5230 \\(N\\) \u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u9884\u5148\u6539\u53d8\u4e00\u4e9b\u8fb9\u7684\u989c\u8272\uff0c\u6539\u53d8\u7b2c \\(i\\) \u6761\u8fb9\u7684\u4ee3\u4ef7\u662f \\(P_i\\) \u3002\u6c42\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5982\u65e0\u89e3\u5219\u8f93\u51fa \\(-1\\) \u3002</p> <p>\u89e3\u6790\uff1a</p> <p>\u5982\u679c\u5f53\u524d\u8fb9\u552f\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8d70\u3002\u5426\u5219\u5982\u679c\u6211\u4eec\u60f3\u8d70\u4e00\u6761\u8fb9\uff0c\u53ef\u9009\u7684\u64cd\u4f5c\u53ea\u6709\u4e24\u79cd\uff1a</p> <ol> <li> <p>\u628a\u5b83\u7684\u989c\u8272\u6362\u6210\u65b0\u989c\u8272\u3002</p> </li> <li> <p>\u6539\u53d8\u6240\u6709\u548c\u5b83\u989c\u8272\u76f8\u540c\u7684\u8fb9\u7684\u989c\u8272\u3002</p> </li> </ol> <p>\u53d1\u73b0\u597d\u50cf\u5e76\u4e0d\u80fd\u8fd9\u6837\u5efa\u56fe\u8dd1 dijkstra\uff0c\u56e0\u4e3a\u6709\u7279\u6b8a\u60c5\u51b5:</p> <p>\u82e5\u6709 \\((u,v),(v,w)\\) \u4e24\u8fb9\u989c\u8272\u76f8\u540c\uff0c\u800c\u6211\u4eec\u5bf9 \\((u,v)\\) \u4f7f\u7528\u4e86\u64cd\u4f5c 1\uff0c\u5bf9 \\((v,w)\\) \u4f7f\u7528\u4e86\u64cd\u4f5c 2\uff0c\u5219\u4f1a\u91cd\u590d\u8ba1\u7b97\u5bf9 \\((u,v)\\) \u64cd\u4f5c\u7684\u4ee3\u4ef7\u3002\u8003\u8651\u5efa\u865a\u70b9\u6765\u53bb\u6389\u8fd9\u4e2a\u4ee3\u4ef7\uff0c\u5bf9\u6bcf\u6761\u8fb9 \\((u,v,c)\\) \u5efa \\(u\\) \u5411 \\(v_c\\) \u7684\u8fb9\u6743\u4e3a \\(0\\) \u7684\u6709\u5411\u8fb9\uff0c\u5373\u7701\u53bb\u4e86\u64cd\u4f5c 1 \u7684\u4ee3\u4ef7\u3002\\(v_c\\) \u5411 \\(w\\) \u8fde\u8fb9\u6743\u4e3a\u64cd\u4f5c 2 \u4ee3\u4ef7\u7684\u6709\u5411\u8fb9\uff0c\u8fd9\u6837 \\(u\\to v_c\\to w\\) \u76f8\u5f53\u4e8e\u8fdb\u884c\u4e86\u4e00\u6b21\u64cd\u4f5c 1 \u548c\u4e00\u6b21\u64cd\u4f5c 2\u3002</p> <p>\u6ce8\u610f\u5230\u6211\u4eec\u5bf9\u6bcf\u6761\u8fb9\u90fd\u5efa\u4e00\u4e2a\u865a\u70b9\uff0c\u8fd9\u6837\u7684\u70b9\u6570\u662f \\(O(N+M)\\) \u7684\uff0c\u8fb9\u6570\u662f \\(O(M)\\) \u7684\uff0c\u53ef\u4ee5\u7528 dijkstra \u901a\u8fc7\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O((N+M)\\log(N+M))\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nstruct node{\n    ll d;int u,c;\n    friend bool operator &lt;(node a,node b){\n        return a.d&gt;b.d;\n    }\n};\npriority_queue &lt;node&gt; Q;\nconst int N=1e5+5,M=4e5+5;\nint n,m,tot,head[N];\nstruct E{\n    int to,nxt,c,w;\n}e[M];\nmap &lt;int,ll&gt; sum[N],dis[N];\nmap &lt;int,vector&lt;pii&gt;&gt; mp[N];\ninline void addedge(int u,int v,int c,int w){\n    e[++tot]={v,head[u],c,w};head[u]=tot;\n    mp[u][c].push_back({v,w});\n    sum[u][c]+=w;\n}\ninline void upd(int u,int c,ll d){\n    if(!dis[u].count(c)||dis[u][c]&gt;d){\n        dis[u][c]=d,Q.push({d,u,c});\n    }\n}\ninline void dijkstra(){\n    upd(1,0,0);\n    while(!Q.empty()){\n        node tmp=Q.top();Q.pop();\n        ll d=tmp.d;\n        int u=tmp.u,c=tmp.c;\n        if(dis[u][c]!=d)continue;\n        if(!c){\n            for(int i=head[u];i;i=e[i].nxt){\n                int v=e[i].to;\n                upd(v,e[i].c,d);\n                upd(v,0,d+min((ll)e[i].w,sum[u][e[i].c]-e[i].w));\n            }\n        }else{\n            if(dis[u].count(c)){\n                for(pii tmp:mp[u][c]){\n                    int v=tmp.fi,w=tmp.se;\n                    upd(v,0,d+sum[u][c]-w);\n                }\n            }\n        }\n    }\n}\nint main(){\n    n=read(),m=read();\n    rep(i,1,m){\n        int u=read(),v=read(),c=read(),w=read();\n        addedge(u,v,c,w),addedge(v,u,c,w);\n    }\n    dijkstra();\n    if(dis[n].count(0))printf(\"%lld\\n\",dis[n][0]);\n    else puts(\"-1\");\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/JOI%202021%20Final/#t5-3","title":"T5. \u30c0\u30f3\u30b8\u30e7\u30f3 3","text":"<p>\u9898\u610f\uff1a</p> <p>\u6709\u4e00\u4e2a \\(N+1\\) \u5c42\u7684\u5730\u7262\u548c \\(M\\) \u4e2a\u4eba\u3002\u73a9\u5bb6\u53ea\u80fd\u4ece\u4e00\u5c42\u79fb\u52a8\u5230\u4e0b\u4e00\u5c42\uff0c\u5bf9\u4e8e \\(1\\le i\\le N\\) \uff0c\u4ece\u7b2c \\(i\\) \u5c42\u79fb\u52a8\u5230\u7b2c \\(i+1\\) \u5c42\u9700\u8981\u80fd\u91cf \\(A_i\\) \u3002\u6bcf\u5c42\u8fd8\u6709\u6cbb\u7597\u6cc9\uff0c\u5728\u7b2c \\(i\\) \u5c42\u7684\u6cbb\u7597\u6cc9\u4e2d\uff0c\u73a9\u5bb6\u53ef\u4ee5\u82b1 \\(B_i\\) \u91d1\u5e01\u6765\u8d2d\u4e70\u4e00\u683c\u80fd\u91cf\u3002\u4f46\u662f\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u90fd\u6709\u4e00\u4e2a\u80fd\u91cf\u4e0a\u9650\uff0c\u4f7f\u7528\u6cbb\u7597\u6cc9\u65e0\u6cd5\u4f7f\u80fd\u91cf\u8d85\u8fc7\u8be5\u4e0a\u9650\u3002</p> <p>\u73b0\u5728\u544a\u8bc9\u4f60\u7b2c \\(j\\) \u4e2a\u73a9\u5bb6\u5728\u7b2c \\(S_j\\) \u5c42\uff0c\u8981\u53bb \\(T_j\\) \u5c42\u4e14\u4ed6\u521d\u59cb\u80fd\u91cf\u4e3a \\(0\\) \uff0c\u80fd\u91cf\u4e0a\u9650\u4e3a \\(U_j\\) \u3002\u5728\u8def\u4e0a\u4ed6\u7684\u80fd\u91cf\u4e0d\u80fd\u5c0f\u4e8e \\(0\\) \uff0c\u90a3\u4e48\u4ed6\u9700\u8981\u591a\u5c11\u91d1\u5e01\u5462\uff1f</p> <p>\u89e3\u6790\uff1a</p> <p>\u5148\u628a\u6bcf\u4e00\u5c42\u770b\u4f5c\u6570\u8f74\u4e0a\u7684\u70b9\uff0c\u5373\u7b2c\u4e00\u5c42\u770b\u4f5c\u6570\u8f74\u539f\u70b9\uff0c\u4e24\u5c42\u4e4b\u95f4\u8ddd\u79bb\u4e3a \\(A_i\\) \u3002\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a\u8d2a\u5fc3\uff1a\u6bcf\u6b21\u53bb\u6700\u8fd1\u7684 \\(B\\) \u6bd4\u5f53\u524d\u70b9\u5c0f\uff08\u56de\u590d\u6cc9\u4fbf\u5b9c\uff09\u7684\u70b9\uff0c\u5e76\u5c06\u80fd\u91cf\u56de\u590d\u5230\u6070\u597d\u5230\u8fbe\u8fd9\u4e2a\u70b9\uff0c\u5426\u5219\u5c31\u56de\u6ee1\u80fd\u91cf\u3002</p> <p>\u63a5\u4e0b\u6765\u5148\u770b\u5b50\u4efb\u52a1 \\(2\\) \uff0c\u5373\u5bf9\u6240\u6709\u4eba \\(U\\) \u4e3a\u5b9a\u503c\u7684\u60c5\u51b5\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u4ece\u540e\u5f80\u524d\u626b\u4e00\u904d\u505a\u51fa\u5bf9\u4e8e\u7b2c \\(i\\) \u4e2a\u70b9\u6700\u4f18\u7684\u8f6c\u79fb\u70b9\u3002\u8fd9\u6837\u53ef\u4ee5\u505a\u5230 \\(O(N\\log N)\\) \u3002</p> <p>\u518d\u770b\u5b50\u4efb\u52a1 \\(3\\) \uff0c\\(T_i=N+1\\) \u5373\u6240\u6709\u4eba\u7684\u7ec8\u70b9\u76f8\u540c\uff0c\u663e\u7136\u53ef\u4ee5\u5bf9\u8d77\u70b9\u6392\u5e8f\u540e\u5012\u7740\u626b\u4e00\u904d\u5904\u7406\u7b54\u6848\u3002\u6ce8\u610f\u5230\u4ecd\u7136\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u4ef7\u683c\uff0c\u5982\u679c\u5f53\u524d\u7684\u4ef7\u683c\u66f4\u4fbf\u5b9c\uff0c\u5c31\u5f39\u51fa\u6808\u9876\u5e76\u4e14\u8003\u8651\u662f\u5426\u80fd\u5728\u5f53\u524d\u70b9\u4e70\u80fd\u91cf\u3002</p> <p>\u7b54\u6848\u663e\u7136\u968f\u7740 \\(U\\) \u589e\u5927\u800c\u51cf\u5c0f\uff0c\u4e14\u53ef\u4ee5\u628a\u5728 \\(i\\) \u70b9\u56de\u590d\u770b\u4f5c\u659c\u7387\u4e3a \\(B_i\\) \u7684\u4e00\u6b21\u51fd\u6570\uff0c\u5219\u672c\u8d28\u4e0a\u4e3a\u82e5\u5e72\u4e2a\u5206\u6bb5\u51fd\u6570\u7684\u548c\u3002\u79bb\u6563\u5316 \\(U\\) \u5373\u53ef\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u659c\u7387\u548c\u622a\u8ddd\u3002</p> <p>\u6700\u540e\uff0c\u5982\u679c\u627e\u51fa \\([S,T]\\) \u4e2d\u79bb \\(T\\) \u8ddd\u79bb \\(\\le U\\) \u7684\u6700\u5c0f\u4f4d\u7f6e \\(mid\\) \uff0c\u8bbe \\(f(S,T)\\) \u4e3a \\(S\\) \u5230 \\(T\\) \u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u6709\uff1a  \u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u539f\u9898\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log N)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,m,a[N],b[N];\nint lg[N],lsh[N],top,stk[N],tp;\nll x[N],ans[N];\npii mx[N][20],mn[N][20];\nstruct BIT{\n    ll c1[N],c2[N];\n    void add(ll x,ll y,ll z){\n        int i=lower_bound(lsh+1,lsh+top+1,x)-lsh;\n        for(;i&lt;=n;i+=i&amp;-i)c1[i]+=y,c2[i]+=z;\n    }\n    ll sum(ll x){\n        ll res1=0,res2=0;\n        int i=lower_bound(lsh+1,lsh+top+1,x)-lsh;\n        for(;i;i-=i&amp;-i)res1+=c1[i],res2+=c2[i];\n        return res1*x+res2;\n    }\n}T;\nstruct query{int u,id,t;};\nvector &lt;query&gt; Q[N];\ninline pii Mx(int l,int r){\n    int L=lg[r-l+1];\n    return max(mx[l][L],mx[r-(1&lt;&lt;L)+1][L]);\n}\ninline pii Mn(int l,int r){\n    int L=lg[r-l+1];\n    return min(mn[l][L],mn[r-(1&lt;&lt;L)+1][L]);\n}\nint main(){\n    //freopen(\"02-01.in\",\"r\",stdin);\n    //freopen(\"tes.out\",\"w\",stdout);\n    n=read(),m=read();\n    lg[0]=-1;\n    rep(i,1,n){\n        a[i]=read(),mx[i][0]={a[i],i};\n        x[i]=x[i-1]+a[i];\n        lg[i]=lg[i&gt;&gt;1]+1;\n    }\n    per(i,n+1,1)x[i]=x[i-1];\n    rep(i,1,n){\n        b[i]=read(),mn[i][0]={b[i],i};\n    }\n    rep(j,1,20)rep(i,1,n-(1&lt;&lt;j)+1){\n        mx[i][j]=max(mx[i][j-1],mx[i+(1&lt;&lt;(j-1))][j-1]);\n        mn[i][j]=min(mn[i][j-1],mn[i+(1&lt;&lt;(j-1))][j-1]);\n    }\n    rep(i,1,m){\n        int s=read(),t=read(),u=read();\n        if(Mx(s,t-1).fi&gt;u){\n            ans[i]=-1;continue;\n        }\n        ll l=max((ll)(lower_bound(x+1,x+n+1,x[t]-u)-x),(ll)s);\n        int mid=Mn(l,t-1).se;\n        assert(mid&lt;t);\n        ans[i]=(x[t]-x[mid])*b[mid];\n        Q[s].push_back({u,i,1}),Q[mid].push_back({u,i,-1});\n        lsh[++top]=u;\n    }\n    sort(lsh+1,lsh+top+1);\n    top=unique(lsh+1,lsh+top+1)-lsh-1;\n    stk[0]=n+1;\n    per(i,n,1){\n        while(b[stk[tp]]&gt;b[i]){\n            int u=stk[tp],v=stk[tp-1];tp--;\n            ll L0=x[u]-x[i],L1=x[v]-x[i];\n            T.add(L0,-b[u],L0*b[u]);\n            T.add(L1,b[u],-L1*b[u]);\n        }\n        ll L0=x[stk[tp]]-x[i];\n        T.add(0,b[i],0);\n        T.add(L0,-b[i],L0*b[i]);\n        stk[++tp]=i;\n        for(auto q:Q[i])ans[q.id]+=1ll*q.t*T.sum(q.u);\n    }\n    rep(i,1,m)printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/P3396%20%E5%93%88%E5%B8%8C%E5%86%B2%E7%AA%81/","title":"P3396 \u54c8\u5e0c\u51b2\u7a81","text":"<p>\u601d\u8def\uff1a\u5bf9\u4e8e \\(p&gt;\\sqrt n\\) \uff0c\u4f59 \\(k\\) \u7684\u6c60\u5b50\u91cc\u9762\u6700\u591a\u4e0d\u8d85\u8fc7 \\(\\sqrt n\\) \u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u66b4\u529b\u3002\u5bf9\u4e8e \\(p&lt;\\sqrt n\\)\uff0c\u6211\u4eec\u6362\u4e00\u79cd\u5904\u7406\u601d\u8def\uff1a</p> <pre><code>for(int p=1;p&lt;=B;p++)ans[p][i%p]+=val[i];\n</code></pre> <p>\u8fd9\u6837\u7684\u4fee\u6539\u4e5f\u662f \\(O(\\sqrt n)\\) \u7684\uff0c\u9884\u5904\u7406\u9700\u8981 \\(O(n\\sqrt n)\\) \uff0c\u6545\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O((n+m)\\sqrt n)\\) \u3002</p>"},{"location":"Old%20Posts/P4238%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%A4%9A%E9%A1%B9%E5%BC%8F%E4%B9%98%E6%B3%95%E9%80%86/","title":"P4238 \u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u4e58\u6cd5\u9006","text":""},{"location":"Old%20Posts/P4238%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%A4%9A%E9%A1%B9%E5%BC%8F%E4%B9%98%E6%B3%95%E9%80%86/#p4238","title":"P4238 \u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u4e58\u6cd5\u9006","text":"<p>\u601d\u8def\uff1a\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86\\(F(x)\\)\u5728\u6a21\\(x^{\\lceil\\frac{n}{2}\\rceil}\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143\\(H(x)\\). \u90a3\u4e48</p> \\[F(x)(G(x)-H(x))\\equiv 0 (\\mathrm{mod} \\,x^{\\left\\lceil\\frac{n}{2}\\right\\rceil})\\] \\[G(x)-H(x)\\equiv 0 (\\mathrm{mod} \\,x^{\\left\\lceil\\frac{n}{2}\\right\\rceil})\\] \\[(G(x)-H(x))^2\\equiv 0 (\\mathrm{mod} \\,x^n)\\] \\[G^2(x)-2G(x)H(x)+H^2(x)\\equiv 0(\\mathrm{mod}x^n)\\] \\[F(x)(G^2(x)-2G(x)H(x)+H^2(x))\\equiv G(x)-2H(x)+F(x)H^2(x)\\equiv0(\\mathrm{mod}x^n)\\] \\[\\Longrightarrow G(x)=H(x)(2-F(x)H(x))(\\mathrm{mod}\\,x^n)\\] <p>\u53ef\u4ee5\u901a\u8fc7\u6b64\u7b97\u6cd5\u9012\u5f52\u5904\u7406\u9006\u5143\uff0c\u591a\u9879\u5f0f\u4e58\u6cd5\u7528\\(NTT\\)\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n\\log n)\\)\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);i++)\n#define per(i,a,b) for(int i=(b);i&gt;=(a);i--)\n#define ll long long\nusing namespace std;\nconst ll N=400000,P=998244353,G=3,IG=(P+1)/G;\nint n,limit,m,type,inv,a[N];\nll A[N],B[N],C[N];\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\ninline ll fpow(ll a,ll b){\n    ll ret=1;\n    while(b){\n        if(b&amp;1)ret=(ret*a)%P;\n        b&gt;&gt;=1;a=(a*a)%P;\n    }\n    return ret;\n}\nint rev[N];\ninline void init(int x){\n    for(limit=1;limit&lt;x;)limit&lt;&lt;=1;\n    rep(i,0,limit)rev[i]=(rev[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)?limit&gt;&gt;1:0);\n    inv=fpow(limit,P-2);\n}\nvoid ntt(ll *f,bool flag){\n    for(int i=0;i&lt;limit;i++)if(i&lt;rev[i])swap(f[i],f[rev[i]]);\n    for(int len=2,k=1;len&lt;=limit;len&lt;&lt;=1,k&lt;&lt;=1){\n        ll wn=fpow(flag?G:IG,(P-1)/len);\n        for(int i=0;i&lt;limit;i+=len){\n            for(ll j=i,w=1;j&lt;i+k;j++,w=w*wn%P){\n                ll tmp=w*f[j+k]%P;\n                f[j+k]=(f[j]-tmp+P)%P;f[j]=(f[j]+tmp)%P;\n            }\n        }\n    }\n    if(!flag)rep(i,0,limit)f[i]=f[i]*inv%P;\n}\ninline void work(int deg,ll *a,ll *b){\n    if(deg==1){\n        b[0]=fpow(a[0],P-2);\n        return;\n    }\n    work((deg+1)&gt;&gt;1,a,b);\n    init(deg&lt;&lt;1);\n    rep(i,0,deg-1)C[i]=a[i];\n    rep(i,deg,limit-1)C[i]=0;\n    ntt(C,1);ntt(b,1);\n    rep(i,0,limit-1){\n        b[i]=(2-C[i]*b[i]%P+P)%P*b[i]%P;\n    }\n    ntt(b,0);\n    rep(i,deg,limit-1)b[i]=0;\n}\nint main(){\n    n=read();\n    rep(i,0,n-1)A[i]=read();\n    work(n,A,B);\n    rep(i,0,n-1)printf(\"%lld \",B[i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/P5978%20%5BCEOI2018%5DGlobal%20warming%20%E9%A2%98%E8%A7%A3/","title":"P5978 [CEOI2018]Global warming \u9898\u89e3","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u957f\u5ea6\u4e3a\\(n\\)\u7684\u6570\u7ec4\\(a\\)\uff0c\u4f60\u53ef\u4ee5\u5c06\u4efb\u610f\u4e00\u6bb5\u533a\u95f4\\([l,r]\\)\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\\(+d\\)\uff0c\u5176\u4e2d\\(-x\\le d\\le x\\)\uff0c\u95ee\u4e00\u6b21\u64cd\u4f5c\u540e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le n\\le 2\\times 10^5\\)\u3002</p> <p>\u601d\u8def\uff1a\u5982\u679c\u628a\\([l,r]\\)\u533a\u95f4\u7684\u6570\u53d8\u5c0f\uff0c\u53ef\u80fd\u4f1a\u589e\u52a0\u5230\u8fd9\u4e00\u6bb5\u533a\u95f4\u548c\u540e\u9762\\([r+1,n]\\)\u63a5\u4e0a\u7684LCS\u957f\u5ea6\uff0c\u4f46\u540c\u65f6\u53ef\u80fd\u51cf\u5c11\\([1,r]\\)\u8fd9\u6bb5\u7684LCS\u957f\u5ea6\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u540c\u6837\u7684\\(d&lt;0\\)\uff0c\u64cd\u4f5c\\([1,r]\\)\u8fd9\u4e2a\u533a\u95f4\u4e00\u5b9a\u6bd4\u64cd\u4f5c\\([l,r]\\)\u533a\u95f4\u66f4\u4f18\u3002</p> <p>\u540c\u65f6\uff0c\u7531\u4e8e\u64cd\u4f5c\u8fc7\u540e\u5143\u7d20\u7684\u76f8\u5bf9\u5927\u5c0f\u4e0d\u53d8\uff0c\\([1,r]\\)\u51cf\u5c0f\\(d\\)\u548c\\([r+1,n]\\)\u589e\u52a0\\(d\\)\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\u3002\u56e0\u4e3a\u524d\u7f00\u4e2d\u5143\u7d20\u7684\u76f8\u5bf9\u5927\u5c0f\u4e0d\u53d8\uff0c\u4e3a\u4e86LCS\u66f4\u957f\uff0c\u663e\u7136\\(d=x\\)\u65f6\u6700\u4f18\u3002\u4e8e\u662f\u9898\u76ee\u5c31\u8f6c\u5316\u6210\u4e86\uff1a\u8003\u8651\u5bf9\u524d\u7f00\\([1,r]\\) \u4e2d\u7684\u5143\u7d20\\(-x\\)\uff0c\u95ee\u64cd\u4f5c\u540e\u6700\u957f\u7684LCS\u957f\u5ea6\u3002\u66b4\u529b+LCS\u53ef\u4ee5\u505a\u5230\\(O(n^2\\log n)\\)\uff0c\u4f46\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002</p> <p>\u64cd\u4f5c\u4e86\u4e00\u6bb5\u524d\u7f00\u5e76\u4e0d\u4f1a\u5f71\u54cd\u8fd9\u6bb5\u524d\u7f00\u5185\u90e8\u7684LCS\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7dp\u6c42\u89e3\\([1,i]\\)\u8fd9\u6bb5\u524d\u7f00\u4ee5\\(a_i\\)\u4e3a\u7ec8\u70b9\u7684LCS\u957f\u5ea6\uff0c\u8bb0\u4e3a\\(L_i\\)\u3002\u8bbe\\(R_i\\)\u4e3a\u5728\\([1,i]\\)\u533a\u95f4\u4fee\u6539\u8fc7\u540e\uff0c\u4ee5\\(a_i\\)\u4e3a\u8d77\u70b9\u7684LCS\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\uff1a</p> \\[\\max_{i=1}^n L_i+R_i-1\\] <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n\\log n)\\)\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);i++)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);i--)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,x,a[N],lis[N],L[N],R[N],ans;\nint main(){\n    n=read(),x=read();\n    rep(i,1,n)a[i]=read();\n    memset(lis,0x3f,sizeof(lis));\n    rep(i,1,n){//\u8ba1\u7b97[1,i]\u7684LIS\n        int j=lower_bound(lis,lis+n,a[i])-lis;\n        lis[j]=a[i];\n        L[i]=j+1;\n        ans=max(ans,L[i]);\n    }\n    memset(lis,0x3f,sizeof(lis));\n    per(i,n,1){//\u8ba1\u7b97\u540e\u7f00\u7684\u4e0b\u964d\u5b50\u5e8f\u5217=\u4ee5i\u4e3a\u8d77\u70b9\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\n        int j=lower_bound(lis,lis+n,-a[i]+x)-lis;\n        int jj=lower_bound(lis,lis+n,-a[i])-lis;\n        lis[jj]=-a[i];\n        ans=max(ans,L[i]+j);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/P6078%20%5BCEOI2004%5D%20Sweets%E9%A2%98%E8%A7%A3/","title":"P6078 [CEOI2004] Sweets\u9898\u89e3","text":""},{"location":"Old%20Posts/P6078%20%5BCEOI2004%5D%20Sweets%E9%A2%98%E8%A7%A3/#p6078-ceoi2004-sweets","title":"P6078 [CEOI2004] Sweets\u9898\u89e3","text":"<p>\u9898\u610f\uff1a\\(n\\)\u79cd\u7cd6\u679c\uff0c\u7b2c\\(i\\)\u79cd\u6709\\(m_i\\)\u9897\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u65b9\u6848\u4ece\u4e2d\u9009\u51fa\u603b\u6570\\([a,b]\\)\u4e4b\u95f4\u9897\u7cd6\uff0c\u7b54\u6848\u5bf9\\(2004\\)\u53d6\u6a21\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le n\\le 10,0\\le a\\le b\\le 10^7,0\\le m_i\\le 10^6\\)</p> <p>\u601d\u8def\uff1a</p> <p>\u751f\u6210\u51fd\u6570\u5165\u95e8\u9898\uff0c\u4e0d\u96be\u5f97\u51fa\u603b\u65b9\u6848\u7684\u751f\u6210\u51fd\u6570\u4e3a\uff1a</p> \\[G(x)=\\prod_{i=1}^n \\frac{1-x^{m_i+1}}{1-x}=(1-x)^{-n}\\cdot\\prod_{i=1}^{n}(1-x^{m_i+1})\\] <p>\u6ce8\u610f\u5230\\(n\\)\u5f88\u5c0f\uff0c\u56e0\u6b64\u5bf9\u4e8e\u53f3\u8fb9\u7684\u5f0f\u5b50\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u6c42\u89e3\uff08\u8fd9\u4e00\u90e8\u5206\u662f\\(O(2^n)\\)\uff09\uff0c\u800c\u5de6\u8fb9\u53ef\u4ee5\u7528\u725b\u987f\u4e8c\u9879\u5f0f\u5b9a\u7406\u6c42\u89e3\uff1a</p> \\[(1-x)^{-n}=\\sum_{i\\ge 0}\\binom{n-1+i}{i}x^i\\] <p>\u4e8e\u662f\u6211\u4eec\u5f97\u51fa\u4e86\u8fd9\u4e2a\u591a\u9879\u5f0f\u3002\u73b0\u5728\u8981\u6c42\u7684\u662f\\(\\sum_{i=a}^b[x^i]G(x)\\)\u3002</p> <p>\u679a\u4e3e\\(\\prod_{i=1}^{n}(1-x^{m_i+1})\\)\u4e2d\u7b2c\\(k\\)\u9879\u7cfb\u6570\uff0c\u8bbe\u4e3a\\(c_k\\)\u3002\u90a3\u4e48\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\uff1a</p> \\[c_k\\sum_{i=a-k}^{b-k}\\binom{n-1+i}{i}=c_k(\\binom{n+b-k}{b-k}-\\binom{n+a-k-1}{a-k-1})\\] <p>\u6700\u540e\u7ec4\u5408\u6570\\(\\binom{n+b-k}{n}=\\dfrac{(n+b-k)!}{n!(b-k)!}\\)\u5bf9\\(2004\\)\u53d6\u6a21\u7684\u7ec6\u8282\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\\(\\dfrac{(n+b-k)!}{(b-k)!}\\)\u5bf9\\(2004\\cdot n!\\)\u53d6\u6a21\u518d\u5c06\u7b54\u6848\u9664\u4ee5\\(n!\\)\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(2^n+b)\\)\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define ll long long\nusing namespace std;\nconst int mod=2004;\nint n,l,r;ll a[15],fac=1,sum=0;\ninline ll C(int m,int n){\n    ll M=mod*fac,ans=1;\n    for(int i=n-m+1;i&lt;=n;i++)ans=(ans*i)%M;\n    return (ans/fac)%mod;\n}\nvoid dfs(int pos,int val,int key,int lim){\n    if(key&gt;lim)return;\n    if(pos&gt;n){\n        sum+=1ll*val*C(n,n+lim-key)%mod;\n        sum=(sum+mod)%mod;\n        return;\n    }\n    dfs(pos+1,val,key,lim);dfs(pos+1,-val,key+a[pos]+1,lim);\n}\nll solve(int lim){\n    sum=0;dfs(1,1,0,lim);\n    return (sum%mod+mod)%mod;\n}\nint main(){\n    scanf(\"%d%d%d\",&amp;n,&amp;l,&amp;r);\n    for(int i=1;i&lt;=n;i++){\n        scanf(\"%lld\",&amp;a[i]);\n        fac*=i;\n    }\n    printf(\"%lld\\n\",((solve(r)-solve(l-1))%mod+mod)%mod);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/SP34096%20DIVCNTK%20%E9%A2%98%E8%A7%A3/","title":"SP34096 DIVCNTK \u9898\u89e3","text":""},{"location":"Old%20Posts/SP34096%20DIVCNTK%20%E9%A2%98%E8%A7%A3/#sp34096-divcntk","title":"SP34096 DIVCNTK \u9898\u89e3","text":"<p>\u9898\u610f\uff1a\u6c42\\(S_k(n)=\\sum_{i=1}^{n}d(i^k)\\)\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\u591a\u7ec4\u6570\u636e\uff0c\\(1\\le T\\le 10^4,n,k\\le 10^{10}\\)</p> <p>\u601d\u8def\uff1a\u8bbe\\(f(x)=d(x^k)\\)\uff0c\u53d1\u73b0\\(f(p^c)=kc+1\\)\uff0c\u5728\u8d28\u6570\u5e42\u65f6\u53ef\u4ee5\u5feb\u901f\u6c42\u503c\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\\(Min\\_25\\)\u7b5b\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(\\dfrac{n^{0.75}}{\\log n}+n^{1-\\epsilon})\\)</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef unsigned long long ll;\nconst int N=1e6+5;\nint T,sqr;\nll n,k,lmt,num,pri[N],val[N&lt;&lt;1],tot,g[N&lt;&lt;1],id1[N],id2[N];\nbool v[N];\ninline ll S(ll x,int y){\n    if(x&lt;pri[y])return 0;\n    ll t=(x&lt;=sqr?id1[x]:id2[n/x]);\n    ll ans=g[t]-y*(k+1);\n    for(int i=y+1;i&lt;=num&amp;&amp;1ll*pri[i]*pri[i]&lt;=x;i++){\n        ll pe=pri[i];\n        for(int e=1;pe&lt;=x;e++,pe=pe*pri[i]){\n            ans+=(k*e+1)*(S(x/pe,i)+(e!=1));\n        }\n    }\n    return ans;\n}\nint main(){\n    for(int i=2;i&lt;N;i++){\n        if(!v[i])pri[++num]=i;\n        for(int j=1;j&lt;=num&amp;&amp;pri[j]*i&lt;N;j++){\n            v[i*pri[j]]=1;\n            if(i%pri[j]==0)break;\n        }\n    }\n    scanf(\"%d\",&amp;T);\n    while(T--){\n        scanf(\"%lld%lld\",&amp;n,&amp;k);\n        sqr=sqrt(n);\n        for(lmt=1;lmt&lt;=num&amp;&amp;pri[lmt]&lt;=sqr;)lmt++;lmt--;\n        tot=0;\n        for(ll l=1,r;l&lt;=n;l=r+1){\n            r=n/(n/l);\n            val[++tot]=n/l;\n            g[tot]=val[tot]-1;\n            if(n/l&lt;=sqr)id1[n/l]=tot;\n            else id2[r]=tot;\n        }\n        for(int j=1;j&lt;=lmt;j++){\n            for(int i=1;pri[j]*pri[j]&lt;=val[i];i++){\n                ll k=val[i]/pri[j];\n                k=(k&lt;=sqr?id1[k]:id2[n/k]);\n                g[i]-=(g[k]-j+1);\n            }\n        }\n        for(int i=1;i&lt;=tot;i++)g[i]*=(k+1);\n        printf(\"%llu\\n\",S(n,0)+1);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2021DEC/","title":"USACO 21DEC Platinum","text":""},{"location":"Old%20Posts/USACO%2021DEC/#t1-ticket","title":"T1 Ticket","text":"<p>\u9898\u76ee\u96be\u5ea6\uff1aUSACO P/\u7701\u9009</p> <p>\u5148\u60f3\u66b4\u529b\u505a\u6cd5\u3002\u6ce8\u610f\u5230\u4e00\u4e2a\u4eba\u4e0d\u4f1a\u91cd\u590d\u4e70\u7968\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u79cd\u7968\u770b\u4f5c\u865a\u62df\u8282\u70b9\uff0c\u4e70\u7968\u770b\u4f5c\u4ece \\(c_i\\) \u5230 \\(i\\) \u53f7\u7968\u8fb9\u6743\u4e3a \\(p_i\\) \u7684\u8fb9\uff0c\u540c\u65f6 \\(i\\) \u53f7\u7968\u5411\u533a\u95f4 \\([a_i,b_i]\\) \u4e2d\u7684\u6240\u6709\u70b9\u8fde\u8fb9\u6743\u4e3a \\(0\\) \u7684\u8fb9\u3002\u9898\u76ee\u5e0c\u671b\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u8fbe \\(1\\) \u548c \\(n\\) \u6240\u9700\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u4e0d\u59a8\u5efa\u53cd\u56fe\u4ee5 \\(1\\) \u548c \\(n\\) \u4e3a\u539f\u70b9\u5206\u522b\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u3002</p> <p>\u7136\u800c\u8fd9\u6837\u4f1a\u559c\u63d0 WA \u3002\u56e0\u4e3a\u4ecd\u7136\u6ca1\u6709\u89e3\u51b3\u91cd\u590d\u4e70\u7968\u7684\u95ee\u9898\uff0c\u4e24\u6761\u6700\u77ed\u8def\u7684\u4ea4\u96c6\u4e2d\u7684\u6240\u6709\u8fb9\u88ab\u7b97\u4e86\u4e24\u904d\u3002\u600e\u4e48\u89e3\u51b3\uff1f\u5148\u8bb0\u5f53\u524d\u7b54\u6848\u4e3a \\(dis_i=d1_i+dn_i\\) \uff0c\u82e5\u8282\u70b9 \\(u\\) \u7684\u4e24\u6761\u6700\u77ed\u8def\u5747\u7ecf\u8fc7\u5b83\u7684\u90bb\u5c45 \\(v\\) \uff0c\u4e0d\u96be\u53d1\u73b0 \\(dis_u=dis_v+w\\) \u3002\u8fd9\u548c\u5355\u6e90\u6700\u77ed\u8def\u7684\u677e\u5f1b\u672c\u8d28\u76f8\u540c\uff0c\u6211\u4eec\u5bf9\u7b54\u6848\u6570\u7ec4\u91cd\u65b0\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NK\\log(NK))\\)</p> <p>\u4e0b\u9762\u63d0\u4f9b\u4e24\u79cd\u4f18\u5316\u7684\u601d\u8def\uff0c\u7b2c\u4e00\u79cd\u662f\u8003\u573a\u7b2c\u4e00\u773c\u770b\u51fa\u7684\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\uff0c\u5177\u4f53\u77e5\u8bc6\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a\u535a\u5ba2 DS\u4f18\u5316\u5efa\u56fe \u3002</p> <p>\u5bf9\u533a\u95f4\u4e2d\u7684\u6bcf\u4e2a\u70b9\u66b4\u529b\u8fde\u8fb9\u662f\u4e0d\u597d\u7684\uff01\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u5efa\u56fe\u7684\u65b9\u5f0f\u8fde\u8fb9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N\\log^2 N)\\) \u3002USACO\u8bc4\u6d4b\u673a\u6216\u6d1b\u8c37\u5f00 O2 \u5747\u53ef\u901a\u8fc7\u672c\u9898\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e6+5,M=7e6+5;\nconst ll inf=1e16;\nint head[N],cnt;\nstruct Edge{\n    int to,nxt,w;\n}e[M];\ninline void add(int u,int v,int w){e[++cnt]={v,head[u],w};head[u]=cnt;}\nint n,q,s;\nstruct Node{int l,r;}t[N];\n#define ls (p&lt;&lt;1)\n#define rs (ls|1)\ninline void build(int p,int l,int r){\n    t[p].l=l,t[p].r=r;\n    if(l==r){//\u53f6\u5b50\u8282\u70b9\u4e0e\u539f\u56fe\u52a0\u8fb9\n        add(l+8*n,p,0);add(p+4*n,l+8*n,0);\n        add(p,l+8*n,0);add(l+8*n,p+4*n,0);\n        return;\n    }\n    //\u5411\u513f\u5b50\u8fde\u8fb9\n    add(p,ls,0);add((ls)+4*n,p+4*n,0);\n    add(p,rs,0);add((rs)+4*n,p+4*n,0);\n    int mid=(l+r)&gt;&gt;1;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n}\ninline void upd(int p,int L,int R,int u,int w){\n    int l=t[p].l,r=t[p].r,mid=(l+r)&gt;&gt;1;\n    if(l==L&amp;&amp;r==R){//\u5f53\u524d\u8282\u70b9\u8986\u76d6\u533a\u95f4\n        add(p+4*n,u+8*n,w);\n        return;\n    }\n    if(R&lt;=mid)upd(ls,L,R,u,w);\n    else if(L&gt;mid)upd(rs,L,R,u,w);\n    else{\n        upd(ls,L,mid,u,w);upd(rs,mid+1,R,u,w);\n    }\n}\nll dis[N],d[N];\nstruct node{\n    ll dis;int pos;\n    bool operator &lt;( const node &amp;x )const{\n        return x.dis &lt; dis;\n    }\n};\nbool vis[N];\npriority_queue &lt;node&gt; pq;\ninline void dijkstra(bool op=0){\n    if(!op){\n        memset(dis,0x3f,sizeof(dis));\n        dis[s]=0;pq.push({0,s});\n    }else{\n        rep(i,1,9*n+q)pq.push({dis[i],i});\n    }\n    memset(vis,0,sizeof(vis));\n    while(!pq.empty()){\n        node tmp=pq.top();pq.pop();\n        int x=tmp.pos;\n        if(vis[x])continue;\n        vis[x]=1;\n        for(int i=head[x];i;i=e[i].nxt){\n            int y=e[i].to;\n            if(dis[y]&gt;dis[x]+e[i].w){\n                dis[y]=dis[x]+e[i].w;\n                pq.push({dis[y],y});\n            }\n        }\n    }\n}\nint main(){\n    n=read(),q=read();\n    build(1,1,n);\n    rep(i,1,q){\n        int a=read(),w=read(),b=read(),c=read();\n        upd(1,b,c,i+n,0);\n        add(9*n+i,a+8*n,w);\n    }\n    s=8*n+1;\n    dijkstra();\n    memcpy(d,dis,sizeof(d));\n    //rep(i,1,n)cout&lt;&lt;dis[i+8*n]&lt;&lt;' ';\n    s=9*n;\n    dijkstra();\n    rep(i,1,9*n+q)dis[i]+=d[i];\n    dijkstra(1);\n    rep(i,1,n){\n        if(dis[i+8*n]&gt;inf)puts(\"-1\");\n        else printf(\"%lld\\n\",dis[i+8*n]);\n    }\n    return 0;\n}\n</code></pre> <p>\u5982\u4f55\u4f18\u5316\uff1f\u8003\u8651 dijkstra \u65f6\u5b9e\u9645\u4e0a\u5728\u505a\u4ec0\u4e48\u3002\u539f\u56fe\u4e2d\u7684\u8282\u70b9\u4f1a\u5f71\u54cd\u5c06\u5b83\u5305\u542b\u7684\u7968\u7684\u865a\u62df\u8282\u70b9\uff0c\u7136\u540e\u8fd9\u4e2a\u865a\u62df\u8282\u70b9\u4ec5\u5f71\u54cd\u5176\u6240\u5bf9\u5e94\u7684\u4e00\u4e2a\u539f\u56fe\u8282\u70b9 \\((i\\to c_i)\\) \u3002\u5176\u6b21\uff0c\u6211\u4eec\u77e5\u9053\u5806\u4f18\u5316 dijkstra \u540e\u6bcf\u4e2a\u7968\u4ec5\u4f1a\u88ab\u66f4\u65b0\u4e00\u6b21\u3002\u4e8e\u662f\u5e76\u4e0d\u9700\u8981\u5efa\u51fa\u56fe\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u8f6c\u79fb\u5e76\u4e14\u5bf9\u66f4\u65b0\u5b8c\u7684\u533a\u95f4\u6253\u4e0a\u6807\u8bb0\u5c31\u53ef\u4ee5\u505a\u5230 \\(O(N\\log N)\\) \uff08\u4ee3\u7801\u5495\u5495\u5495\uff09\u3002</p> <p>\u7b2c\u4e8c\u79cd\u505a\u6cd5\u6765\u81ea Benq \u7684\u9898\u89e3\u3002\u540c\u6837\u5229\u7528\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u5bf9\u6240\u6709\u7968\u6309\u5de6\u7aef\u70b9\u5347\u5e8f\u6392\u5217\uff0c\u6ce8\u610f\u5230\u6bcf\u4e2a\u95e8\u7968\u6700\u591a\u5165\u961f\u4e00\u6b21\uff0c\u5efa\u4e00\u68f5\u52bf\u80fd\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u7684\u6240\u6709\u7968\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\u5728\u6bcf\u4e2a\u7968\u5165\u961f\u540e\u6253\u4e0a\u6807\u8bb0\uff0c\u5747\u644a\u5206\u6790\u53ef\u4ee5\u5f97\u51fa\u590d\u6742\u5ea6\u4e3a \\(O(N\\log N)\\) \u3002\u76ee\u524d\u5728\u6d1b\u8c37\u4e0a\u662f\u6700\u4f18\u89e3\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log N)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ALL(x) x.begin(),x.end()\n#define sz(x) int(x.size())\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nconst ll inf = 1e18;\nstruct ticket{int c,p,a,b;};\nbool cmp(ticket x,ticket y){return x.a&lt;y.a;}\nstruct SegTree{\n    int n,sz;\n    vector &lt;int&gt; mx;\n    vector &lt;ticket&gt; tickets;\n#define ls (p&lt;&lt;1)\n#define rs (ls|1)\n    void pushup(int p){mx[p]=max(mx[ls],mx[rs]);}\n    SegTree(vector &lt;ticket&gt; tickets) : tickets(tickets){//\u521d\u59cb\u5316\n        n = 1;\n        sz = sz(tickets);\n        while(n &lt; sz)n&lt;&lt;=1;\n        mx.assign(2*n,0);\n        rep(i,0,n-1){\n            if(i &lt; sz){\n                mx[i+n] = tickets[i].b;\n            }else mx[i+n] = -1;\n        }\n        per(i,n-1,1)pushup(i);\n    }\n    //\u627e\u5230\u6240\u6709\u53ef\u80fd\u8f6c\u79fb\u7684\u95e8\u7968\u5e76\u79fb\u9664\n    void remove(vector &lt;int&gt; &amp;v,int x,int p=1,int L=0,int R=-1){\n        if(R==-1)R+=n;\n        if(L&gt;=sz||tickets[L].a&gt;x||mx[p]&lt;x)return;\n        if(L==R){\n            mx[p] = -1;\n            v.pb(L);\n            return;\n        }\n        int mid = (L+R)&gt;&gt;1;\n        remove(v,x,ls,L,mid),remove(v,x,rs,mid+1,R);\n        pushup(p);\n    }\n};\nvoid Min(ll &amp;a,const ll b){if(a&gt;b)a=b;}\nint main(){\n    int n=read(),k=read();\n    vector &lt;ticket&gt; tickets(k);\n    for(auto &amp;t: tickets){\n        t.c=read()-1,t.p=read(),t.a=read()-1,t.b=read()-1;\n    }\n    sort(ALL(tickets),cmp);\n    auto Dij = [&amp;](vector&lt;ll&gt; &amp;dis){//Dijkstra\n        priority_queue &lt;pair&lt;ll,int&gt;&gt; pq;\n        rep(i,0,k-1){\n            Min(dis[tickets[i].c],dis[i+n]+tickets[i].p);\n        }\n        rep(i,0,n-1){\n            if(dis[i]&lt;inf)pq.push({-dis[i],i});\n        }\n        SegTree seg(tickets);\n        while(!pq.empty()){\n            pii x = pq.top();\n            pq.pop();\n            if(-x.fi&gt;dis[x.se])continue;\n            vector &lt;int&gt; vec;\n            seg.remove(vec,x.se);//\u627e\u5230\u8f6c\u79fb\u7684\u95e8\u7968\n            for(int t : vec){\n                if(dis[t+n] &gt; dis[x.se]){\n                    dis[t+n] = dis[x.se];\n                    if(dis[tickets[t].c] &gt; dis[x.se] + tickets[t].p){\n                        dis[tickets[t].c] = dis[x.se] + tickets[t].p;\n                        pq.push({-dis[tickets[t].c],tickets[t].c});\n                    }\n                }\n            }\n        }\n    };\n    //\u4e09\u6b21\u6700\u77ed\u8def\n    vector &lt;ll&gt; L(n+k,inf),R(n+k,inf),dis(n+k);\n    L[0]=0,R[n-1]=0;\n    Dij(L),Dij(R);\n    rep(i,0,n+k-1)dis[i] = L[i] + R[i];\n    Dij(dis);\n    rep(i,0,n-1){\n        if(dis[i]&lt;inf)printf(\"%lld\\n\",dis[i]);\n        else puts(\"-1\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2021DEC/#t2-paired-up","title":"T2 Paired Up","text":"<p>\u9898\u76ee\u96be\u5ea6\uff1aUSACO P+/NOI-</p> <p>\u5b50\u4efb\u52a1 1\uff1a\\(T=1,N\\le 5000\\)</p> <p>\u8bbe \\(dp[i][j]\\) \u4e3a\u5f53\u524d\u8003\u8651\u5230\u7b2c \\(i\\) \u5934 H \u725b\uff0c\u7b2c \\(j\\) \u5934 G \u725b\u65f6\u5339\u914d\u7684\u725b\u7684\u6700\u5927\u6743\u503c\u548c\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e0d\u5339\u914d \\(i\\) \uff0c\u4e0d\u5339\u914d \\(j\\) \uff0c\u6216\u8005\u662f\u5c06 \\(i\\) \u548c \\(j\\) \u5339\u914d\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(N^2)\\)</p> <pre><code>#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\nint main(){\n    T=read(),n=read(),K=read();\n    vector &lt;pii&gt; cow[2];\n    cow[0].pb({0,0}),cow[1].pb({0,0});\n    rep(i,1,n){\n        cin&gt;&gt;c;\n        int x=read(),y=read();\n        cow[c=='H'].pb({x,y});\n        sum+=y;\n    }\n    A=sz(cow[0]),B=sz(cow[1]);\n    if(T==1){\n        vector &lt;vi&gt; dp(A+1,vi(B+1));\n        rep(i,1,A)rep(j,1,B){\n            dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n            if(abs(cow[0][i].x-cow[1][j].x)&lt;=K)\n                dp[i][j]=max(dp[i][j],dp[i-1][j-1]+cow[0][i].y+cow[1][j].y);\n        }\n        printf(\"%d\\n\",sum-dp[A][B]);\n    }\n}\n</code></pre> <p>\u5b50\u4efb\u52a1 2\uff1a\\(T=2,N\\le 300\\)</p> <p>\u5bf9\u4e8e\u6700\u5927\u5316\u672a\u5339\u914d\u7684\u6743\u503c\u548c\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u7c7b\u4f3c\u7684 dp \u72b6\u6001\u3002\u4f46\u662f\u6ce8\u610f\u5230\u5728\u4e0a\u8ff0\u8f6c\u79fb\u65f6\uff0c\u6709\u65f6\u5019\u6211\u4eec\u8003\u8651\u7684\u5e76\u4e0d\u662f\u6700\u5927\u5339\u914d\uff0c\u53ea\u662f\u56e0\u4e3a\u6700\u4f18\u89e3\u53ea\u4ea7\u751f\u4e8e\u6700\u5927\u5339\u914d\uff08\u82e5\u4e0d\u662f\u6700\u5927\u5339\u914d\uff0c\u591a\u5339\u914d\u4e24\u5934\u725b\u663e\u7136\u66f4\u4f18\uff09\uff0c\u6211\u4eec\u624d\u80fd\u5f97\u5230 \\(T=1\\) \u65f6\u7684\u7b54\u6848\u3002 </p> <p>\u4e8e\u662f\u6211\u4eec\u9700\u8981\u628a\u6700\u5927\u5339\u914d\u8fd9\u4e00\u9650\u5236\u52a0\u5165\u6211\u4eec\u7684 dp \u72b6\u6001\uff0c\u5177\u4f53\u5730\uff0c\u6211\u4eec\u52a0\u5165\u4e00\u7ef4 \\(k\\) \u8868\u793a\u6700\u540e\u4e00\u5934\u672a\u5339\u914d\u7684\u725b\uff0c\u5047\u8bbe\u6211\u4eec\u4e0d\u60f3\u5339\u914d\u5f53\u524d\u7684 H \u725b\uff0c\u90a3\u4e48\u725b \\(k\\) \u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u4e4b\u4e00\uff1a</p> <ul> <li>\u725b \\(k\\) \u7684\u54c1\u79cd\u662f \\(H\\)</li> <li>\u725b \\(k\\) \u4e0e\u5f53\u524d\u725b\u7684\u8ddd\u79bb\u5927\u4e8e \\(K\\)</li> </ul> <p>\u72b6\u6001\u91cf\u662f \\(O(N^3)\\) \uff0c\u6bcf\u6b21\u8f6c\u79fb\u8fd8\u662f \\(O(1)\\) \u7684\uff0c\u8db3\u591f\u901a\u8fc7\u8be5\u5b50\u4efb\u52a1\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^3)\\)</p> <pre><code>vector &lt;vector&lt;vi&gt;&gt; dp(A+1,vector&lt;vi&gt;(B+1,vi(n+1,-1)));\ndp[0][0][n]=0;\nrep(i,0,A)rep(j,0,B)rep(k,0,n){\n    if(dp[i][j][k]==-1)continue;\n    if(i&lt;A&amp;&amp;j&lt;B&amp;&amp;abs(cow[0][i].x-cow[1][j].x)&lt;=K)\n        Max(dp[i+1][j+1][k],dp[i][j][k]);\n    if(i&lt;A&amp;&amp;(!(A&lt;=k&amp;&amp;k&lt;n&amp;&amp;cow[0][i].x&lt;=cow[1][k-A].x+K)))\n        Max(dp[i+1][j][i],dp[i][j][k]+cow[0][i].y);\n    if(j&lt;B&amp;&amp;(!(k&lt;A&amp;&amp;cow[1][j].x&lt;=cow[0][k].x+K)))\n        Max(dp[i][j+1][A+j],dp[i][j][k]+cow[1][j].y);\n}\nint ans = 0;\nrep(i,0,n)Max(ans,dp[A][B][i]);\nprintf(\"%d\\n\",ans);\n</code></pre> <p>\u5b50\u4efb\u52a1 1\uff1a\\(T=1,N\\le 5000\\)</p> <p>\u8003\u8651\u6700\u7ec8\u7684\u4f18\u5316\uff0c\\(i,j\\) \u4e24\u7ef4\u6bd4\u8f83\u96be\u820d\u53bb\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u6700\u540e\u4e00\u7ef4\u7684\u5b9a\u4e49\u3002\u5b9a\u4e49 \\(dp[i][j][x]\\) \u4e3a\u5904\u7406\u5230\u524d \\(i\\) \u5934 H \u725b\uff0c \\(j\\)  \u5934 G \u725b\uff0c\u5e76\u4e14\u94a6\u5b9a\u4e0b\u4e00\u79cd\u4e0d\u653e\u5165\u5339\u914d\u7684\u725b\u7684\u54c1\u79cd\u4e3a \\(x\\) \u3002\u6709\u8f6c\u79fb\uff1a   \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u8f6c\u6362\u94a6\u5b9a\u7684\u54c1\u79cd\uff1a\u5982\u679c\u4e4b\u524d\u6211\u4eec\u88ab\u5f3a\u5236\u4e0d\u9009 H \u725b\uff0c\u90a3\u4e48\u6700\u540e\u4e00\u4e2a\u672a\u5339\u914d\u7684 H \u725b\u6700\u591a\u662f\u7b2c \\(i\\) \u4e2a\u3002\u80fd\u4e0d\u653e\u5165\u5339\u914d\u7684 G \u725b\u9700\u8981\u79bb\u8be5\u725b\u8ddd\u79bb\u81f3\u5c11\u4e3a \\(K\\) \uff0c\u4e14\u5728\u8be5\u725b\u4e4b\u524d\u7684\u6240\u6709\u725b\u90fd\u8981\u653e\u5165\u5339\u914d\u3002\u9884\u5904\u7406\u51fa\u5bf9\u4e8e\u6240\u6709 \\(i\\) \uff0c\u6ee1\u8db3\u6761\u4ef6\u7684 G \u725b\u7f16\u53f7\u7684\u6700\u5c0f\u503c\uff0c\u5e76\u4e14\u5224\u65ad\u8fd9\u6bb5\u533a\u95f4\u7684\u725b\u662f\u5426\u80fd\u5168\u90e8\u5339\u914d\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^2)\\)</p> <pre><code>per(i,A,1)per(j,B,1){\n    if(chk(i,j))lst[i][j]=lst[i+1][j+1]+1;\n    else lst[i][j]=0;\n}\nint j=1;\nrep(i,1,A){\n    while(j&lt;=B&amp;&amp;(chk(i,j)||G[j].x&lt;H[i].x))j++;\n    nxtH[i] = j;\n}\nj=1;\nrep(i,1,B){\n    while(j&lt;=A&amp;&amp;(chk(j,i)||H[j].x&lt;G[i].x))j++;\n    nxtG[i] = j;\n}\nmemset(f,-0x3f,sizeof(f));\nmemset(g,-0x3f,sizeof(g));\nnxtG[0] = nxtH[0] = 1;\nf[0][0] = g[0][0] = 0;\nrep(i,0,A)rep(j,0,B){\n    int cnt = max(nxtH[i]-j-1,0);\n    if(i+cnt&lt;=A &amp;&amp; lst[i+1][j+1]&gt;=cnt)\n        Max(g[i+cnt][j+cnt],f[i][j]);\n    cnt = max(nxtG[j]-i-1,0);\n    if(j+cnt&lt;=B &amp;&amp; lst[i+1][j+1]&gt;=cnt)\n        Max(f[i+cnt][j+cnt],g[i][j]);\n    if(i&lt;A &amp;&amp; j&lt;B &amp;&amp; chk(i+1,j+1)){\n        Max(f[i+1][j+1],f[i][j]);\n        Max(g[i+1][j+1],g[i][j]);\n    }\n    if(i&lt;A) Max(f[i+1][j],f[i][j]+H[i+1].y);\n    if(j&lt;B) Max(g[i][j+1],g[i][j]+G[j+1].y);\n}\nprintf(\"%d\\n\",max(f[A][B],g[A][B]));\n</code></pre>"},{"location":"Old%20Posts/USACO%2021DEC/#t3-hilo","title":"T3 HILO","text":"<p>\u9898\u76ee\u96be\u5ea6\uff1aUSACO P/\u7701\u9009-</p> <p>\u4e0d\u96be\u53d1\u73b0\u731c HI \u7684\u6570\u4e0d\u4f1a\u4f7f\u731c LO \u7684\u6570\u88ab\u8df3\u8fc7\u3002\u8bbe \\(y=N-x\\) \uff0c\u90a3\u4e48\u539f\u9898\u76f8\u5f53\u4e8e\u5c06 \\(a_1,a_2,\\dots,a_x\\) \u548c \\(b_1,b_2,\\cdots,b_y\\) \u6392\u5217\uff0c\u53ea\u8bb0\u5f55 \\(a,b\\) \u7684\u6bcf\u6b21\u4e0b\u6807\u6700\u5927\u503c\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u6c42\u671f\u671b \\(ba\\) \u7684\u6570\u91cf\u3002</p> <p>\u8fd9\u53ef\u4ee5 dp \uff0c\u8bbe \\(dp[i][j][0/1]\\) \u4e3a\u5f53\u524d\u6700\u5927\u51fa\u73b0 \\(a_i,b_j\\) \u4ee5\u53ca\u6700\u540e\u4e00\u4e2a\u51fa\u73b0\u7684\u662f \\(a/b\\) \uff0c\u901a\u8fc7\u7b80\u5355\u7684\u8f6c\u79fb\u53ef\u4ee5\u505a\u5230 \\(O(N^3)\\) \u3002\u524d\u7f00\u548c\u4f18\u5316\u53ef\u4ee5\u505a\u5230 \\(O(N^2)\\) \uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u6bd4\u8f83\u5438\u5f15\u6211\u7684\u662f\u5728\u8d5b\u540e\u8ba8\u8bba\u4e2d\u770b\u5230\u7684 \\(O(N)\\) \u505a\u6cd5\uff0c\u8fd9\u91cc\u7b80\u5355\u7684\u8bc1\u660e\u4e00\u4e0b\u3002</p> <p>\u7ed3\u8bba\uff1a\u4ee4 \\(H_0=0,H_N=1+\\frac{1}{2}+\\cdots+\\frac{1}{N}\\) . \u6709  \u8bc1\u660e\uff1a</p> <p>\\(x=0\\) \u6216 \\(y=0\\) \u65f6\u7ed3\u8bba\u663e\u7136\u6210\u7acb\uff0c\u4e0d\u59a8\u5bf9 \\(y\\) \u5f52\u7eb3\u3002\u5373\u8bc1 \\((x,y)\\to(x,y+1)\\) \u540e\u671f\u671b\u7684\u53d8\u5316\u4e3a\uff1a  \u8ba1\u7b97\u5bf9 \\(a_1a_2\\dots a_xb_2b_3\\dots b_y\\) \u7684\u6392\u5217\u4e2d\u63d2\u5165 \\(b_1\\) \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c \\(b_1\\) \u53ea\u80fd\u6392\u5728\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684 \\(b\\) \u4e4b\u524d\uff0c\u5426\u5219\u4f1a\u88ab\u8df3\u8fc7\u3002\\(y\\) \u4e2a \\(b\\) \u5c06 \\(x\\) \u4e2a \\(a\\) \u5206\u6210 \\(y+1\\) \u6bb5\uff0c\u6545\u7b2c\u4e00\u4e2a \\(b\\) \u524d \\(a\\) \u7684\u671f\u671b\u4e2a\u6570\u4e3a \\(\\frac{x}{y+1}\\) \u4e2a\u3002\u8bbe\u524d\u9762\u6709 \\(k\\) \u4e2a \\(a\\) \u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u53ea\u8981 \\(b_1\\) \u88ab\u63d2\u5165\u5728 \\(k\\) \u4e2a \\(a\\) \u4e2d\u6700\u5927\u7684 \\(a\\) \u524d\u9762\uff0c\u90fd\u4f1a\u5bf9\u671f\u671b\u8d21\u732e\u4e00\u4e2a \"ba\" \u3002\u6700\u5927\u7684 \\(a\\) \u7684\u671f\u671b\u4f4d\u7f6e\u4e3a\uff1a  \\(k=0\\) \u5373\u4e3a\u539f\u6392\u5217\u9996\u9879\u662f \\(b\\) \u7684\u6982\u7387\uff0c\u4e3a \\(\\frac{y}{N}\\) \u3002 \u80fd\u5f97\u51fa\uff1a  </p> <pre><code>const int N=2e5+5,P=1e9+7;\nint n,x;\nll H[N],inv[N];\nint main(){\n    n=read(),x=read();\n    inv[1]=1;\n    ll fac = 1;\n    rep(i,2,n){\n        inv[i]=(P-P/i)*inv[P%i]%P;\n        fac = fac*i%P;\n    }\n    rep(i,1,n)H[i]=(H[i-1]+inv[i])%P;\n    int y = n-x;\n    cout&lt;&lt;(fac*inv[2]%P*(inv[n]*y%P+H[x]+H[y]-H[n])%P+P)%P;\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2022FEB/","title":"USACO 22FEB","text":""},{"location":"Old%20Posts/USACO%2022FEB/#t1","title":"T1","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u79bb\u6563\u5316\u5750\u6807\u540e\u7684 \\(n\\) \u4e2a\u77e9\u5f62\u7684\u4f4d\u7f6e \\((x_1,y_1,x_2,y_2)\\) \uff0c\u5b83\u4eec\u5c06\u5e73\u9762\u5206\u4e3a\u82e5\u5e72\u4e2a\u533a\u57df\u3002\u4ee5\u4e0b\u5217\u89c4\u5219\u9ed1\u767d\u67d3\u8272\uff1a</p> <ul> <li>\u6240\u6709\u77e9\u5f62\u7684\u5e76\u96c6\u7684\u5916\u754c\u662f\u767d\u8272</li> <li>\u76f8\u90bb\u533a\u57df\u7684\u989c\u8272\u4e0d\u540c</li> </ul> <p>\u4e00\u4e2a\u8be2\u95ee\uff0c\\(T=1\\) \u65f6\u8be2\u95ee\u603b\u533a\u57df\u6570\u91cf\uff0c\\(T=2\\) \u65f6\u8be2\u95ee\u9ed1\u767d\u8272\u533a\u57df\u5206\u522b\u7684\u6570\u91cf\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le n\\le 10^5\\)</p> <p>\u5bf9\u4e8e \\(T=1\\) \uff0c\u6211\u4eec\u8fd0\u7528\u5e73\u9762\u56fe\u6b27\u62c9\u5b9a\u7406\uff08\u6216\u8005\u627e\u89c4\u5f8b\uff09\uff1a\\(V-E+F=C+1\\) \uff0c\u53d1\u73b0\u533a\u57df\u6570\u91cf\u7b49\u4e8e\u4ea4\u70b9\u6570\u91cf\u52a0\u8fde\u901a\u5757\u6570\u91cf\u52a01\uff0c\u626b\u63cf\u7ebf\u8ba1\u7b97\u4ea4\u70b9\u6570\u91cf\u5373\u53ef\uff0c\u7528 set \u7ef4\u62a4\u8fde\u901a\u5757\u5373\u53ef\u3002</p> <p>\\(T=2\\) \uff0c\u5bf9\u4e8e \\(n\\le 2500\\) \uff0c\u53ef\u4ee5\u53d1\u73b0\u88ab\u5947\u6570\u4e2a\u77e9\u5f62\u8986\u76d6\u7684\u533a\u57df\u662f \\(1\\) \uff0c\u5076\u6570\u4e2a\u662f \\(0\\) \uff0c\u5c06\u4e8c\u7ef4\u533a\u95f4\u64cd\u4f5c\u5dee\u5206\u4e3a\u5355\u70b9\u4fee\u6539\uff0c\u6700\u540e\u524d\u7f00\u548c\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7684\u989c\u8272\u518dbfs\u7b97\u533a\u57df\u6570\u91cf\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \u3002</p> <p>\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9700\u8981\u6b27\u62c9\u5b9a\u7406\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u989c\u8272\u6bb5\u6570\uff0cset\u7ef4\u62a4\u6bcf\u4e2a\u8fb9\u8fde\u901a\u5757\u6700\u5de6\u4e00\u6761\u8fb9\u7684\u4e0a\u4e0b\u7aef\u70b9\uff0c\u5c31\u53ef\u4ee5\u5904\u7406\u591a\u4e2a\u8fde\u901a\u5757\u7684\u60c5\u51b5\u3002idea \u6765\u81ea @SharpnessV \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ALL(x) x.begin(),x.end()\n#define sz(x) int(x.size())\n#define ll long long\nusing namespace std;\nconst int N=2e5+5;\nint n,T,op[N],L[N],R[N],t[N];\nll c[2];\nvoid ins(int x,int v){\n    for(;x &lt;= n + n;x += x &amp; -x)t[x] += v;\n}\nint sum(int x){\n    int res = 0;\n    for(;x;x -= x &amp; -x)res += t[x];\n    return res;\n}\nvoid work(int x,int y){\n    int cur = sum(x) &amp; 1,cnt = 1 + sum(y) - sum(x);//start color &amp; number of segs\n    c[cur] += (cnt + 1) / 2,c[cur ^ 1] += cnt / 2;\n}\nbool vis[N];\nstruct node{\n    int pos,val,id;\n    bool operator &lt;(const node &amp;a)const{return pos &lt; a.pos;}\n};\nset &lt;node&gt; S;\nvoid check(int x,int y){\n    auto cur = S.lower_bound({x,0,0});\n    vector &lt;node&gt; v;\n    while(cur != S.end()){\n        if((*cur).pos &gt; y)break;\n        v.pb(*cur);cur++;\n    }\n    if(v.empty())return;\n    sort(v.begin(),v.end(),[](node x,node y){return x.id &lt; y.id;});\n    int id = v[0].id;\n    for(auto t : v)if(t.id != id){//\u5408\u5e76\n        if(!vis[t.id]){\n            vis[t.id] = 1,c[t.val]--;\n            S.erase({L[t.id],0,0}),S.erase({R[t.id] + 1,0,0});\n        }\n    }\n}\nint main(){\n    cin.tie(0)-&gt;sync_with_stdio(0);\n    cin &gt;&gt; n &gt;&gt; T;\n    rep(i,1,n){\n        int x,y,X,Y;\n        cin &gt;&gt; x &gt;&gt; y &gt;&gt; X &gt;&gt; Y;\n        op[x] = 1,L[x] = y,R[x] = Y - 1;\n        op[X] = -1,L[X] = y,R[X] = Y - 1;\n    }\n    rep(i,1,2*n){\n        ins(L[i],op[i]),ins(R[i] + 1,op[i]);\n        work(L[i],R[i]);\n        check(L[i],R[i] + 1);\n        if(op[i] == 1){\n            if(sum(L[i]) == sum(R[i])){//\u65b0\u8fde\u901a\u5757\n                int w = (sum(L[i]) &amp; 1) ^ 1;\n                c[w]++;\n                S.insert({L[i],w,i}),S.insert({R[i] + 1,w,i});\n            }\n        }else{\n            //\u51cf\u53bb\u591a\u7b97\u7684\u989c\u8272\n            c[sum(L[i] - 1) &amp; 1]--,c[sum(R[i] + 1) &amp; 1]--;\n            auto cur = S.lower_bound({L[i],0,0});\n            if(cur != S.end() &amp;&amp; (*cur).pos == L[i]){\n                S.erase(cur);S.erase({R[i] + 1,0,0});\n            }\n        }\n    }\n    c[0]++;\n    if(T == 1)cout &lt;&lt; c[0] + c[1] &lt;&lt; '\\n';\n    else cout &lt;&lt; c[0] &lt;&lt; ' ' &lt;&lt; c[1] &lt;&lt; '\\n';\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2022FEB/#t2","title":"T2","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\) \uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u5408\u5e76\uff1a\u5c06\u76f8\u90bb\u4e24\u4e2a\u6570 \\(a,b\\) \u5220\u9664\u5e76\u5728\u540c\u4e00\u4f4d\u7f6e\u63d2\u5165 \\(a+b\\) \u3002</li> <li>\u5206\u88c2\uff1a\u5c06\u67d0\u4e2a\u6570 \\(a\\) \u5220\u9664\u5e76\u5728\u540c\u4e00\u4f4d\u7f6e\u63d2\u5165 \\(x,y\\) \uff0c\u6ee1\u8db3 \\(x+y = a\\) \u3002</li> </ul> <p>\u6709 \\(q\\) \u4e2a\u8be2\u95ee\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u4e2d\u7684 \\(k\\) \uff0c\u6c42\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u4f7f\u5f97\u5e8f\u5217\u4e2d\u6240\u6709\u6570\u90fd\u4e3a \\(k\\) \u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le n,q\\le 10^5,1\\le a_i,k,\\sum a_i\\le 10^{18}\\)</p> <p>\u9996\u5148 \\(k\\) \u4e0d\u4e3a \\(S=\\sum a_i\\) \u7684\u56e0\u5b50\u65f6\u663e\u7136\u65e0\u89e3\u3002</p> <p>\u5982\u679c \\(n=1\\) \uff0c\u90a3\u4e48\u76f4\u63a5\u780d \\(a_1/k - 1\\) \u5200\u5c31\u884c\u3002\u7136\u540e\u53d1\u73b0\u539f\u9898\u7b49\u4ef7\u4e8e\u780d\u4e86 \\(n-1\\) \u5200\u7684 \\(S\\) \u8fd8\u8981\u51e0\u6b21\u64cd\u4f5c\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd8\u662f\u6309\u7167\u957f\u5ea6\u4e3a \\(k\\) \u5206\u6bb5\u780d\uff0c\u4f46\u662f\uff1a</p> <ul> <li>\u82e5\u539f\u6765\u7684\u843d\u5200\u6ca1\u95ee\u9898\uff0c\u5219\u5c11\u780d\u4e00\u5200</li> <li>\u53cd\u4e4b\uff0c\u9700\u8981\u591a\u4e00\u6b21\u5408\u5e76\u64cd\u4f5c</li> </ul> <p>\u8bb0 \\(b_i = \\sum_{k=1}^i a_i\\) \uff0c\u90a3\u4e48\u7b54\u6848\u663e\u7136\u4e3a\uff1a   \u4e8e\u662f\u6211\u4eec\u5c06\u539f\u547d\u9898\u8f6c\u6362\u4e3a\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n-1\\) \u7684\u5e8f\u5217 \\(b\\) \uff0c\u6bcf\u6b21\u5bf9\u4e8e\u4e00\u4e2a \\(S\\) \u7684\u56e0\u5b50 \\(k\\) \uff0c\u8be2\u95ee \\(b\\) \u4e2d \\(k\\) \u7684\u500d\u6570\u7684\u4e2a\u6570\u3002\u628a \\(b\\) \u6362\u6210 \\(\\gcd(b,S)\\) \u4e0d\u5f71\u54cd\u7b54\u6848\u3002\\(10^{18}\\) \u4ee5\u5185\u7684\u6570 \\(S\\) \u7684\u56e0\u5b50\u4e2a\u6570\u7684\u6700\u5927\u503c\u662f \\(O(10^5)\\) \uff0c\u627e\u51fa \\(S\\) \u7684\u6240\u6709\u7d20\u56e0\u5b50\uff0c\u505a\u9ad8\u7ef4\u540e\u7f00\u548c\u89e3\u51b3\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define ALL(x) x.begin(),x.end()\n#define sz(x) int(x.size())\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N= 1e6 + 5;\nint n,q,pri[N],tot,flg;\nbool vis[N];\nll a[N],s[N];\nmap &lt;ll,int,greater&lt;ll&gt; &gt; mp;\nvector &lt;ll&gt; P;\nll gcd(ll x,ll y){return !y ? x : gcd(y,x % y);}\nint main(){\n    n = read();\n    rep(i,2,1000000){\n        if(!vis[i])pri[++tot] = i;\n        for(int j = 1;j &lt;= tot &amp;&amp; i * pri[j] &lt;= 1000000;j++){\n            vis[i * pri[j]] = 1;\n            if(i % pri[j] == 0)break;\n        }\n    }\n    rep(i,1,n)a[i] = read();\n    rep(i,1,n)s[i] = s[i-1] + a[i];\n    ll S = s[n];\n    rep(i,1,tot){\n        if(S % pri[i] == 0){\n            while(S % pri[i] == 0)S /= pri[i];\n            P.pb(pri[i]);\n        }\n    }\n    ll x = sqrt(S);\n    if(x &gt; 1 &amp;&amp; x * x == S)P.pb(S/x),flg = 1;\n    rep(i,1,n-1){\n        s[i] = gcd(s[i],s[n]);\n        mp[s[i]]++;\n        if(!flg){\n            ll x = s[i];\n            for(ll p : P)while(x % p == 0)x /= p;\n            if(x &gt; 1e6 &amp;&amp; flg != 1){\n                if(x &lt; S){\n                    P.pb(x),P.pb(S/x),flg = 1;\n                }else flg = 2;\n            }\n        }\n    }\n    if(flg == 2)P.pb(S);\n    for(ll p : P){\n        for(auto it = mp.begin();it != mp.end();it++){\n            if(it-&gt;fi % p == 0)mp[it-&gt;fi / p] += it-&gt;se;\n        }\n    }\n    q = read();\n    while(q--){\n        ll k = read();\n        if(s[n] % k != 0){\n            puts(\"-1\");\n            continue;\n        }\n        ll ans = s[n] / k + n - 2 - 2 * mp[k];\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2022FEB/#t3","title":"T3","text":"<p>\u9898\u610f\uff1a\\(T\\) \u7ec4\u6570\u636e\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u53ea\u5305\u542b1-9\u7684\u5b57\u7b26\u4e32\u3002\u4f60\u53ef\u4ee5\u5c06\u4e32\u5212\u5206\u6210\u4e0d\u4ea4\u7684\u4e00\u4e9b\u533a\u95f4\uff0c\u533a\u95f4\u5185\u7684\u6570\u5b57\u5728\u4e5d\u5bab\u683c\u5185\u9700\u8981\u662f\u5355\u72ec\u3001\u76f8\u90bb\u3001\u62162*2\u65b9\u683c\u3002\u8fd9\u4e9b\u533a\u95f4\u5185\u7684\u6570\u5b57\u53ef\u4ee5\u4efb\u610f\u6392\u5217\uff0c\u95ee\u80fd\u4ea7\u751f\u7684\u4e0d\u540c\u4e32\u4e2a\u6570\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(\\sum n\\le 10^5\\)</p> <p>\u9996\u5148\u770b\u90e8\u5206\u5206\uff0c\u82e5\u6ca1\u6709 2*2 \u65b9\u683c\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbe \\(f[i][0/1]\\) \u4e3a\u5f53\u524d\u8003\u8651\u5230\u7b2c \\(i\\) \u4f4d\uff0c\u6709\u6ca1\u6709\u548c\u524d\u4e00\u4f4d\u6210\u533a\u95f4\u3002\u56de\u5230\u539f\u9898\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u4e0d\u540c\u5206\u5212\u5e26\u6765\u540c\u6837\u7684\u4e32\u7684\u65b9\u6848\u53bb\u91cd\uff0c\u4e8e\u662f\u72b6\u6001\u5e94\u8be5\u52a0\u5165\u524d\u9762\u56db\u4e2a\u6570\u7684\u6392\u5217\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f\u5927\u5e38\u6570 \\(O(n)\\) \uff1f\u8d5b\u65f6\u60f3\u5230\u8fd9\u4e4b\u540e\u5c31\u4e0d\u5927\u4f1a\u505a\u4e86\uff08</p> <p>\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u4e32 \\(B\\) \uff0c\u5982\u4f55\u7528 dp \u5224\u65ad\u4e32 \\(A\\) \u662f\u5426\u80fd\u64cd\u4f5c\u540e\u53d8\u6210 \\(B\\) \u3002\u8bbe \\(f_i=0/1\\) \u8868\u793a\u524d \\(i\\) \u4f4d\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002\u82e5\u5f53\u524d\u8003\u8651\u5230\u7b2c \\(i\\) \u4f4d\uff0c\\(f_i=1\\) \u4ec5\u5f53\uff1a</p> <ul> <li>\u82e5 \\(f_{i-1}=1\\) \u4e14 \\(A_i=B_i\\) \u3002</li> <li>\u82e5 \\(f_{i-2}=1\\) \u4e14 \\(A_{i-1},A_{i}\\) \u662f \\(B_{i-1},B_i\\) \u7684\u6392\u5217\u3002</li> <li>\u82e5 \\(f_{i-4}=1\\) \u4e14 \\(A_{i-2},A_{i-3},A_{i-1},A_{i}\\) \u662f \\(B_{i-2},B_{i-3},B_{i-1},B_{i}\\) \u7684\u6392\u5217\u3002</li> </ul> <p>\u5c06\u8fd9\u4e2a dp \u6539\u6210\u81ea\u52a8\u673a\uff0c\u5219\u5bf9\u4e8e\u7b2c \\(i\\) \u4f4d\u53ea\u9700\u8981\u8bb0\u4f4f\u524d\u4e09\u4f4d\u7684\u6570\u5b57\u4ee5\u53ca \\(f_i\\) \uff0c\u628a\u8fd9\u4e9b\u6570\u5b57\u4e00\u8d77\u5f53\u6210\u81ea\u52a8\u673a\u7684\u8282\u70b9\u5373\u53ef\u3002\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a \\(i\\) \uff0c\u5408\u6cd5\u8282\u70b9\u7684\u6570\u91cf\u4e0d\u591a\uff0c\u76f4\u63a5 dp \u5373\u53ef\u3002\u5e76\u4e14\u6709\u4e86\u81ea\u52a8\u673a\u4e4b\u540e\uff0c\u76f4\u63a5\u628a \\(f_i\\) \u6539\u6210\u7edf\u8ba1\u4e2a\u6570\u5373\u53ef\uff0c\u4e0d\u540c\u8282\u70b9\u4ee3\u8868\u7684\u4fe1\u606f\u4e0d\u540c\uff0c\u6240\u4ee5\u4e0d\u4f1a\u7b97\u91cd\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define ALL(x) x.begin(),x.end()\n#define sz(x) int(x.size())\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5,P = 1e9+7;\nint num[2048];\nconst int A[4] = {\n    1&lt;&lt;1|1&lt;&lt;2|1&lt;&lt;4|1&lt;&lt;5,1&lt;&lt;2|1&lt;&lt;3|1&lt;&lt;5|1&lt;&lt;6,\n    1&lt;&lt;4|1&lt;&lt;5|1&lt;&lt;7|1&lt;&lt;8,1&lt;&lt;5|1&lt;&lt;6|1&lt;&lt;8|1&lt;&lt;9\n};\nint sta4(int a,int b,int c,int d){return 1&lt;&lt;a|1&lt;&lt;b|1&lt;&lt;c|1&lt;&lt;d;}\nint sta2(int a,int b){return 1&lt;&lt;a|1&lt;&lt;b;}\nbool insq(int S,int c,int sq){\n    if((S &amp; sq) != S)return 0;\n    if(num[S] != c)return 0;\n    if(find(A,A+4,sq) == A+4)return 0;\n    return 1;\n}\nbool line(int a,int b){\n    if(a != b)return 0;\n    if(a % 9 == 0){//\u662f\u5426\u5217\u76f8\u90bb\n        a /= 9;\n        return (a &amp; (a-1)) == 0;\n    }\n    if(a % 3 == 0){//\u884c\u76f8\u90bb\n        a /= 3;\n        if(a &amp; a-1)return 0;\n        if(a == 1&lt;&lt;3 || a == 1&lt;&lt;6)return 0;\n        return 1;\n    }\n    return 0;\n}\nstruct S{\n    int a3,a2,a1,a0;\n    bool operator &lt; (const S &amp;x)const{\n        return a3 &lt; x.a3 || a3 == x.a3 &amp;&amp; (a2 &lt; x.a2 || a2 == x.a2 &amp;&amp; (a1 &lt; x.a1 || a1 == x.a1 &amp;&amp; a0 &lt; x.a0));\n    }\n};\nchar s[N];\nint n,a[N];\ninline int c(char ch){return ch - '0';}\nmap &lt;S,int&gt; f,g;\nvoid solve(){\n    scanf(\"%s\",s+1);\n    int n = 0;\n    while(s[n+1])n++;\n    rep(i,1,n)a[i] = s[i] - '0';\n    f.clear();\n    f[(S){-1,-1,-1,0}] = 1;\n    rep(i,1,n){\n        g.clear();\n        for(auto &amp;pre : f){\n            S o = pre.fi;\n            rep(x,1,9){\n                S nxt;\n                nxt.a3 = o.a2 | 1 &lt;&lt; x;\n                nxt.a2 = o.a1 | 1 &lt;&lt; x;\n                nxt.a1 = o.a0 | 1 &lt;&lt; x;\n                nxt.a0 = -1;\n                if(o.a3 != -1 &amp;&amp; insq(o.a3 | 1 &lt;&lt; x,4,sta4(a[i-3],a[i-2],a[i-1],a[i])))nxt.a0 = 0;\n                if(nxt.a2 != -1 &amp;&amp; line(nxt.a2,sta2(a[i-1],a[i])))nxt.a0 = 0;\n                if(nxt.a1 == (1&lt;&lt;a[i]))nxt.a0 = 0;\n                if(nxt.a3 != -1 &amp;&amp; (i == n || !insq(nxt.a3,3,sta4(a[i-2],a[i-1],a[i],a[i+1]))))nxt.a3 = -1;\n                if(nxt.a2 != -1 &amp;&amp; (i &gt;= n-1 || !insq(nxt.a2,2,sta4(a[i-1],a[i],a[i+1],a[i+2]))))nxt.a2 = -1;\n                if(nxt.a0 != -1 || nxt.a1 != -1 || nxt.a2 != -1 || nxt.a3 != -1){\n                    g[nxt] = (g[nxt] + pre.se) % P;\n                }\n            }\n        }\n        f = g;\n    }\n    ll ans = 0;\n    for(auto &amp;i : f)if(i.fi.a0 == 0)ans = (ans + i.se) % P;\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\nint main(){\n    rep(i,1,2047)num[i] = num[i&gt;&gt;1] + (i&amp;1);\n    int T = read();\n    while(T--)solve();\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2022JAN/","title":"USACO 22JAN","text":"<p>\u8d5b\u65f6\u7206\u70b8\u4e86\uff0c\u5f88\u591a\u5e73\u5e38\u719f\u6089\u7684\u5957\u8def\u90fd\u6ca1\u60f3\u8d77\u6765\uff0c\u4f46\u9898\u76ee\u8fd8\u662f\u8981\u8865\u7684\u4e0d\u662f\u5417\uff1f</p>"},{"location":"Old%20Posts/USACO%2022JAN/#t1","title":"T1","text":"<p>\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u6570\u7ec4 \\(a\\) \uff0c\u82e5\u76f8\u90bb\u4e24\u6570\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 \\(K\\) \u5219\u53ef\u4ee5\u4ea4\u6362\uff0c\u95ee\u80fd\u5f97\u5230\u7684\u6240\u6709 \\(a\\) \u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u4e2a\u3002 </p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le N,K\\le 10^5,1\\le a_i\\le 10^9\\)</p> <p>\u53d1\u73b0 \\(|a_i-a_j| &gt; K\\) \u7684\u6570\u65e0\u6cd5\u4ea4\u6362\uff0c\u4e8e\u662f\u627e\u5230\u6240\u6709\u8fd9\u6837\u7684\u9650\u5236\u505a\u62d3\u6251\u6392\u5e8f\u3002\u5982\u4f55\u505a\uff1f\u6b63\u5e38\u6700\u5c0f\u62d3\u6251\u5e8f\u662f\u628a\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u653e\u5165\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u5806\u9876\u7684\u70b9\u5e76\u4ece\u56fe\u4e2d\u5220\u9664\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(NK)\\) \u3002</p> <p>\u601d\u8003\u4e00\u4e0b\u5982\u4f55\u4f18\u5316\uff0c\u9996\u5148\u53ef\u4ee5\u5bf9\u539f\u6570\u7ec4\u79bb\u6563\u5316\uff0c\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u5f53\u524d\u53ef\u80fd\u7684\u6700\u5c0f\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u53d6\u51fa\u4f5c\u4e3a\u7b54\u6848\u5e76\u66f4\u65b0\u4e0e\u5176\u6709\u8fde\u8fb9\u7684\u70b9\u7684\u5165\u5ea6\u5373\u53ef\u3002\u5177\u4f53\u5730\uff0c\u82e5\u5f53\u524d\u70b9\u7684\u6743\u503c\u4e3a \\(u\\) \uff0c\u5219 \\([1,m]\\setminus[u-K+1,u+K-1]\\) \u4e2d\u7684\u6240\u6709\u6743\u503c\u5bf9\u5e94\u7684\u70b9\u7684\u5165\u5ea6 \\(-1\\) \u3002\u9700\u8981\u4e00\u4e2a\u5e26\u61d2\u6807\u8bb0\u7ebf\u6bb5\u6811\u505a\u533a\u95f4\u66f4\u65b0\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log N)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define ALL(x) x.begin(),x.end()\n#define sz(x) int(x.size())\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,K,a[N],val[N],deg[N];\nunordered_map &lt;int,int&gt; vis;\n#define ls (p&lt;&lt;1)\n#define rs (ls|1)\n#define mid ((L+R)&gt;&gt;1)\npii t[N&lt;&lt;2];\nint tag[N&lt;&lt;2];\ninline pii Min(const pii a,const pii b){\n    if(a.se == b.se)return make_pair(min(a.fi,b.fi),a.se);\n    return a.se &lt; b.se ? a : b;\n}\nvoid build(int p,int L,int R){\n    if(L == R){\n        t[p] = make_pair(L,deg[L]);\n        return;\n    }\n    build(ls,L,mid),build(rs,mid+1,R);\n    t[p] = Min(t[ls],t[rs]);\n}\nvoid push(int p,int v){tag[p] += v,t[p].se += v;}\nvoid down(int p){\n    if(!tag[p])return;\n    push(ls,tag[p]),push(rs,tag[p]);\n    tag[p] = 0;\n}\nvoid upd(int p,int L,int R,int l,int r,int v){\n    if(l &gt; R || r &lt; L)return;\n    if(l &lt;= L &amp;&amp; R &lt;= r){\n        push(p,v);\n        return;\n    }\n    down(p);\n    upd(ls,L,mid,l,r,v),upd(rs,mid+1,R,l,r,v);\n    t[p] = Min(t[ls],t[rs]);\n}\nint T[N];\nvoid add(int x){for(;x &lt;= n;x += x &amp; -x)T[x]++;}\nint Q(int x){\n    int res = 0;\n    for(;x;x -= x &amp; -x)res += T[x];\n    return res;\n} \nint main(){\n    n = read(),K = read();\n    rep(i,1,n)a[i] = read(),val[i] = a[i];\n    sort(val+1,val+n+1);\n    rep(i,1,n){\n        vis[a[i]]++;\n        a[i] = lower_bound(val+1,val+n+1,a[i]) - val + vis[a[i]] - 1;\n    }\n    //calculating in-degree\n    rep(i,1,n){\n        int x = lower_bound(val+1,val+n+1,val[a[i]]-K) - val - 1;\n        int y = lower_bound(val+1,val+n+1,val[a[i]]+K+1) - val - 1;\n        deg[a[i]] = (i-1) + Q(x) - Q(y);\n        add(a[i]);\n    }\n    build(1,1,n);\n    rep(i,1,n){\n        int u = t[1].fi;\n        cout &lt;&lt; val[u] &lt;&lt; '\\n';\n        int x = lower_bound(val+1,val+n+1,val[u]-K) - val - 1;\n        //cout &lt;&lt; 1 &lt;&lt; ' ' &lt;&lt; x &lt;&lt; '\\n';\n        int y = lower_bound(val+1,val+n+1,val[u]+K+1) - val - 1;\n        //cout &lt;&lt; y+1 &lt;&lt; ' ' &lt;&lt; n &lt;&lt; '\\n';\n        //cout &lt;&lt; u &lt;&lt; ' ' &lt;&lt; u &lt;&lt; '\\n';\n        upd(1,1,n,1,x,-1);\n        upd(1,1,n,y+1,n,-1);\n        upd(1,1,n,u,u,n);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2022JAN/#t2","title":"T2","text":"<p>\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u6570\u7ec4 \\(a\\) \uff0c\u76f8\u90bb\u4e24\u9879\u82e5\u5dee\u4e0d\u5927\u4e8e1\u5219\u53ef\u4ee5\u4ea4\u6362\uff0c\u95ee\u80fd\u5f97\u5230\u7684\u4e0d\u540c \\(a\\) \u4e2a\u6570\uff0c\u7b54\u6848\u6a21 \\(10^9+7\\) \u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le N\\le 5000,1\\le a_i\\le10^9\\) </p> <p>\u8ba1\u6570\u95ee\u9898\u57fa\u672c\u5c31\u662f dp \u4e86\u3002\u53d1\u73b0\u4ece\u4e0a\u4e00\u9898\u4e2d\u7684\u4e0d\u5927\u4e8e \\(K\\) \u53d8\u6210\u4e86\u4e0d\u5927\u4e8e \\(1\\) \uff0c\u5fc5\u7136\u6709\u732b\u817b\u3002\u7531\u4e8e\u5dee\u5927\u4e8e \\(1\\) \u7684\u6570\u5f88\u591a\uff0c\u6240\u4ee5\u5927\u90e8\u5206\u6570\u4e4b\u95f4\u662f\u4e0d\u80fd\u591f\u5bf9\u6362\u4f4d\u7f6e\u7684\uff0c\u8003\u8651\u4ece\u8fd9\u4e00\u70b9\u5165\u624b\u89e3\u51b3\u95ee\u9898\u3002</p> <p>\u7136\u540e\u6b64\u65f6\u5982\u679c\u89c2\u5bdf\u5230\u4e86\u5947\u6570\u4e4b\u95f4\u4e0d\u53ef\u80fd\u8c03\u6362\u4f4d\u7f6e\uff08\u9664\u975e\u4e24\u6570\u76f8\u540c\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8c03\u6362\u6ca1\u6709\u610f\u4e49\uff09\uff0c\u5076\u6570\u4e5f\u540c\u7406\u3002\u4e8e\u662f\u8bbe\u8ba1 dp \u72b6\u6001\u4e3a \\(dp[i][j]\\) \u8868\u793a\u5f53\u524d\u786e\u5b9a\u4e86\u524d \\(i+j\\) \u4e2a\u4f4d\u7f6e\uff0c\u6709 \\(i\\) \u4e2a\u5947\u6570\uff0c\\(j\\) \u4e2a\u5076\u6570\u3002\u5bf9\u6bcf\u4e2a\u6570\uff0c\u9884\u5904\u7406\u5b83\u6700\u8fdc\u80fd\u4e0e\u5b83\u4e0d\u540c\u5947\u5076\u6027\u7684\u54ea\u4e2a\u6570\u4ea4\u6362\u5373\u53ef\u3002\u8f6c\u79fb\u662f\u7b80\u5355\u7684\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^2)\\) \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define ALL(x) x.begin(),x.end()\n#define sz(x) int(x.size())\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=5e3+5,P = 1e9+7;\nint n,a[N],pos[N];\nvoid add(int &amp;x,const int y){x += y;if(x &gt; P)x -= P;}\nvoid sub(int &amp;x,const int y){x -= y;if(x &lt; 0)x += P;}\nvoid solve(){\n    n = read();\n    vector &lt;int&gt; even,odd;\n    rep(i,1,n){\n        a[i] = read();\n        if(a[i] &amp; 1){\n            pos[i] = sz(odd);\n            odd.pb(i);\n        }else{\n            pos[i] = sz(even);\n            even.pb(i);\n        }\n    }\n    vector &lt;int&gt; pre(n+1);\n    rep(i,1,n){\n        if(a[i] &amp; 1)pre[i] = sz(even);\n        else pre[i] = sz(odd);\n        rep(j,i+1,n)if(((a[i] - a[j]) &amp; 1) &amp;&amp; abs(a[i] - a[j]) &gt; 1){\n            pre[i] = min(pre[i],pos[j]);\n        }\n    }\n    vector &lt;vi&gt; dp(sz(even) + 1,vi(sz(odd) + 1));\n    dp[0][0] = 1;\n    rep(i,0,sz(even))rep(j,0,sz(odd)){\n        if(!dp[i][j])continue;\n        if(i &lt; sz(even) &amp;&amp; j &lt;= pre[even[i]])\n            add(dp[i+1][j],dp[i][j]);\n        if(j &lt; sz(odd) &amp;&amp; i &lt;= pre[odd[j]])\n            add(dp[i][j+1],dp[i][j]);\n    }\n    cout &lt;&lt; dp[sz(even)][sz(odd)] &lt;&lt; '\\n';\n}\nint main(){\n    int T = read();\n    while(T--)solve();\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2022JAN/#t3","title":"T3","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a \\(n\\) \u7ec4\u5411\u91cf\uff0c\u6c42\u6bcf\u4e00\u7ec4\u4e2d\u9009\u51fa\u4e00\u4e2a\u5411\u91cf\uff0c\u52a0\u8d77\u6765\u540e\u6700\u5927\u7684\u957f\u5ea6\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\u5411\u91cf\u6570\u4e0d\u8d85\u8fc7 \\(10^5\\) \uff0c\\(|x|,|y|\\le \\frac{10^9}{N}\\) \u3002</p> <p>\u6211\u4eec\u7ef4\u62a4\u5f53\u524d\u6240\u6709\u53ef\u80fd\u7b54\u6848\u6784\u6210\u7684\u70b9\u96c6\uff0c\u6709</p> <p>\u6027\u8d281\uff1a\u5982\u679c\u4e00\u4e2a\u70b9\u4e0d\u5728\u8be5\u70b9\u96c6\u7684\u51f8\u5305\u4e0a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u79bb\u539f\u70b9\u7684\u8ddd\u79bb\u4e0d\u662f\u6700\u5927\u7684\u3002</p> <p>\u5bf9\u6bcf\u4e00\u7ec4\u5411\u91cf\u6211\u4eec\u90fd\u53ef\u4ee5\u6c42\u51fa\u5b83\u7684\u51f8\u5305\u3002\u5bf9\u4e8e\u7b2c \\(i\\) \u7ec4\u5411\u91cf\uff0c\u6211\u4eec\u5c06\u5b83\u7684\u51f8\u5305\u4e0e\u524d \\(i-1\\) \u7ec4\u5f97\u5230\u7684\u7b54\u6848\u51f8\u5305\u5408\u5e76\uff0c\u7528 Minkowski \u548c\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log N)\\) \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define ALL(x) x.begin(),x.end()\n#define sz(x) int(x.size())\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nstruct node{\n    ll x,y;\n    node operator - (const node a){return (node){x-a.x,y-a.y};}\n    node operator + (const node a){return (node){x+a.x,y+a.y};}\n    ll operator * (node a)const{return x*a.y - y*a.x;}//cross pro\n    ll len()const{return x*x + y*y;}\n}O;\nbool cmpy(const node &amp;a,const node &amp;b){return a.y == b.y ? a.x &lt; b.x : a.y &lt; b.y;}\nbool cmp(const node &amp;a,const node &amp;b){return a*b == 0 ? a.len() &lt; b.len() : a*b &gt; 0;}\nint n,m,q,stk[N],top,tot;\nvoid Convex(vector &lt;node&gt; &amp;A){\n    sort(A.begin(),A.end(),cmpy);\n    O = A[0];\n    stk[top=1] = 0;\n    rep(i,0,sz(A)-1)A[i] = A[i] - O;\n    sort(A.begin()+1,A.end(),cmp);//\u6781\u89d2\u6392\u5e8f\n    rep(i,1,sz(A)-1){\n        while(top &gt; 1 &amp;&amp; (A[i] - A[stk[top-1]]) * (A[stk[top]] - A[stk[top-1]]) &gt;= 0)top--;\n        stk[++top] = i;\n    }\n    rep(i,1,top)A[i-1] = A[stk[i]] + O;\n    A.resize(top);\n    //rep(i,0,sz(A)-1)cout &lt;&lt; A[i].x &lt;&lt; ' ' &lt;&lt; A[i].y &lt;&lt; '\\n';\n    A.pb(A[0]);\n}\nvector &lt;node&gt; A,B,vec[N],dA,dB,ans,tmp;\nvoid Minkowski(vector &lt;node&gt; &amp;A,vector &lt;node&gt; &amp;B){\n    dA.resize(sz(A)),dB.resize(sz(B));\n    rep(i,0,sz(A)-1)dA[i] = A[(i+1)%sz(A)] - A[i];\n    rep(i,0,sz(B)-1)dB[i] = B[(i+1)%sz(B)] - B[i];\n    ans.pb(A[0] + B[0]);\n    int a = 0,b = 0;\n    while(a &lt; sz(A) &amp;&amp; b &lt; sz(B)){\n        if(dA[a] * dB[b] &gt;= 0)ans.pb(ans.back() + dA[a++]);\n        else ans.pb(ans.back() + dB[b++]);\n    }\n    while(a &lt; sz(A))ans.pb(ans.back() + dA[a++]);\n    while(b &lt; sz(B))ans.pb(ans.back() + dB[b++]);\n}\nint main(){\n    n = read();\n    rep(i,1,n){\n        int x = read();\n        rep(j,1,x)vec[i].pb((node){read(),read()});\n        Convex(vec[i]);\n    }\n    ans = vec[1];\n    rep(i,2,n){\n        tmp = ans;ans.clear();\n        Minkowski(vec[i],tmp);\n        Convex(ans);\n    }\n    ll len = 0;\n    for(auto t : ans)len = max(len,t.len());\n    cout &lt;&lt; len &lt;&lt; '\\n';\n    return 0;\n}\n</code></pre> <p>\u8d5b\u540e\u603b\u7ed3\uff1a</p> <p>\u8fd9\u6b21\u6bd4\u8d5b\u5bf9\u65f6\u95f4\u7684\u628a\u63a7\u6781\u4e3a\u5931\u8d25\uff0c\u4e0d\u5e94\u8be5\u56e0\u4e3a\u770b\u5230\u4e86\u719f\u6089/\u611f\u89c9\u80fd\u505a\u7684\u9898\u76ee\u5c31\u4e00\u76f4\u6b7b\u78d5\u5728\u4e0a\u9762\uff0c\u8fd9\u5bf9\u6bd4\u8d5b\u662f\u6781\u5176\u4e0d\u5229\u7684\uff0c\u5e0c\u671b\u4ee5\u540e\u80fd\u5b66\u4f1a\u5408\u7406\u5229\u7528\u65f6\u95f4\u3002\u9664\u4e86T3\u7684\u8ba1\u7b97\u51e0\u4f55\u5bf9USACO\u662f\u76f8\u5bf9\u65b0\u9896\u7684\u8003\u70b9\uff0c\u53e6\u5916\u4e24\u9898\u5e76\u6ca1\u6709\u4ec0\u4e48\u65b0\u7684\u4e1c\u897f\uff0cT3\u4e5f\u5bb9\u6613\u5728\u4e86\u89e3\u4e00\u70b9\u77e5\u8bc6\u540e\u5957\u6a21\u677f\u89e3\u51b3\u3002</p>"},{"location":"Old%20Posts/USACO%2022OPEN/","title":"USACO 22OPEN","text":"<p>\u4e8b\u5b9e\u8bc1\u660eUSACO\u9898\u76ee\u96be\u5ea6\u4e0d\u518d\u4e25\u683c\u5347\u5e8f\u6392\u5217\uff0c\u5012\u5e8f\u5f00\u9898\u4eba\u8d62\u9ebb\u4e86\uff08</p> <p>\u8bf4\u660e\uff1a\u6700\u8fd1\u6709\u70b9\u5fd9\uff0c\u6ca1\u6765\u5f97\u53ca\u5199\u9898\u89e3qwq\u3002\u4e0d\u8fc7\u8fd9\u573a\u6bd4\u8d5b\u559c\u63d0 USA rk3 \u5e76\u4e14\u6df7\u8fdb\u961f\uff0c\u503c\u5f97\u7eaa\u5ff5\u4e00\u6ce2\u3002</p>"},{"location":"Old%20Posts/USACO%2022OPEN/#t1","title":"T1","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5e8f\u5217 \\(a\\) \uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u4e24\u4e2a\u76f8\u90bb\u6570 \\(x,y\\) \u5408\u5e76\u4e3a \\(\\max(x,y)+1\\) \uff0c\u76ee\u6807\u662f\u6700\u5c0f\u5316\u6700\u540e\u5269\u4e0b\u7684\u6570\u3002\u6c42\u5bf9\u6570\u5217\u7684\u6240\u6709 \\(\\frac{N(N+1)}{2}\\) \u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\uff0c\u6240\u6709\u7b54\u6848\u7684\u548c\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le N\\le 2^{18},1\\le a_i\\le 10^6\\)</p> <p>\u8bc4\u4ef7\uff1a\u4e2a\u4eba\u8ba4\u4e3a\u662f\u672c\u573a\u6700\u5927\u6bd2\u7624\uff0c\u4f46\u662f\u505a\u51fa\u6765\u7684\u4eba\u6570\u83ab\u540d\u548cT2\u76f8\u5f53\u3002\u91cd\u70b9\u5e94\u8be5\u662f\u5148\u4ece\u5b50\u4efb\u52a1\u4e2d\u7684\u500d\u589e dp \u5165\u624b\uff0c\u7136\u540e\u89c2\u5bdf\u5230\u6781\u5927\u7684\u5b50\u6bb5\u4e0d\u591a\u5c31\u505a\u51fa\u6765\u4e86\u3002</p> <p>\u9996\u5148\u6709\u663e\u7136\u7684\u533a\u95f4dp\uff1a  \u76f4\u63a5\u66b4\u529b\u662f \\(O(N^3)\\) \uff0c\u53d1\u73b0\u5355\u8c03\u6027\u5c31\u53ef\u4ee5 \\(O(N^2)\\) \u3002</p> <p>\u601d\u8003\u600e\u4e48\u5408\u5e76\u662f\u6700\u4f18\u7684\uff0c\u5f53 \\(N\\) \u4e3a 2 \u7684\u5e42\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u5c06 \\((1,2),(3,4),\\dots,(N-1,N)\\) \u8fd9\u6837\u7684\u7ec4\u5408\u5e76\uff0c\u4e0d\u96be\u53d1\u73b0\u6bcf\u6b21\u6570\u51cf\u534a\uff0c\u5f97\u5230\u7684\u7b54\u6848\u6700\u5927\u4e3a \\(\\max{a_i}+\\log N\\) \u3002\u6545\u4e00\u6bb5\u533a\u95f4\u7684\u7b54\u6848\u8303\u56f4\u5728 \\([x,x+\\log N]\\) \u4e4b\u95f4\u3002</p> <p>\u8bbe \\(f_{i,k}\\) \u4e3a\u6700\u5927\u6ee1\u8db3 \\([i,f_{i,k}]\\) \u5408\u5e76\u51fa \\(k\\) \u7684\u53f3\u7aef\u70b9\u3002 \u6709 \\(f[i][k+1]=f[f[i][k]+1][k+1]\\) \u3002\u7edf\u8ba1\u7b54\u6848\u65f6\u679a\u4e3e \\(i,k\\) \u5373\u53ef\uff0c\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u4e3a \\(O(N\\max a_i)\\) \uff0c\u53ef\u4ee5\u6253\u4e00\u6863\u90e8\u5206\u5206\u3002</p> <p>\u8003\u8651\u4f18\u5316 dp \u7684\u8fc7\u7a0b\u3002\u79f0\u4e00\u4e2a\u5b50\u6bb5\u662f\u6781\u5927\u7684\uff0c\u82e5\u5b83\u5411\u5de6\u6216\u5411\u53f3\u62d3\u5c55\u90fd\u4f1a\u4f7f\u5b83\u5408\u5e76\u7684\u503c\u589e\u52a0\u3002</p> <p>\u5f15\u7406\uff1a\u6781\u5927\u5b50\u6bb5\u4e2a\u6570\u4e3a \\(f(N)=O(N\\log N)\\) \u3002</p> <p>\u8bc1\u660e\uff1a\u8003\u8651\u539f\u5e8f\u5217\u7684\u7b1b\u5361\u5c14\u6811\uff0c\u8bbe\u5e8f\u5217\u7684\u5176\u4e2d\u4e00\u4e2a\u6700\u5927\u5143\u7d20\u5728\u4f4d\u7f6e \\(p\\) \u3002\u6709  \u5176\u4e2d \\(C\\) \u4e3a\u539f\u5e8f\u5217\u7684\u5305\u542b\u4f4d\u7f6e \\(p\\) \u7684\u6700\u5927\u5b50\u6bb5\u6570\u91cf\u3002\u4e0b\u8bc1  \u53ea\u9700\u53d1\u73b0\u503c\u4e3a \\(a_p+k\\) \u7684\u5305\u542b\u4f4d\u7f6e \\(p\\) \u7684\u5b50\u6bb5\u4e0d\u8d85\u8fc7 \\(\\min(p,2^k)\\) \uff0c\u6c42\u548c\u5373\u5f97\u3002</p> <p>\u7528 set \u8bb0\u5f55\u6240\u6709\u503c\u4e3a \\(v\\) \u7684\u6781\u957f\u5b50\u6bb5\u540e\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u5408\u5e76\u533a\u95f4\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log^2 N)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ALL(x) x.begin(),x.end()\n#define sz(x) int(x.size())\n#define ll long long\nusing namespace std;\nconst int N = 3e5 + 5,M = 1e6 + 50;\nstruct DSU{\n    vector &lt;int&gt; p,sz;\n    void init(int n){\n        p.resize(n);sz.assign(n,1);\n        iota(p.begin(),p.end(),0);\n    }\n    int find(int x){return p[x] == x ? x : p[x] = find(p[x]);}\n    void merge(int u,int v){\n        u = find(u),v = find(v);\n        if(u == v)return;\n        if(sz[u] &gt; sz[v])swap(u,v);\n        p[u] = v,sz[v] += sz[u],sz[u] = 0;\n    }\n}d;\nint n;\nint main(){\n    cin.tie(0)-&gt;sync_with_stdio(0);\n    cin &gt;&gt; n;\n    vi a(n);for(auto &amp;x : a)cin &gt;&gt; x;\n    vector &lt;vi&gt; vec(M);\n    rep(i,0,n-1)vec[a[i]].pb(i);\n    vector &lt;ll&gt; cnt(M);\n    vi R(n,-1),L(n+1,-1);\n    auto getR = [&amp;](int x){\n        if(x == n)return n;\n        return R[d.find(x)];\n    };\n    set &lt;int&gt; alive;\n    ll ans = 0,now = 0;//the amount of values &lt;= i\n    d.init(n);\n    rep(i,1,M-1){\n        vector &lt;int&gt; dead,remove;\n        for(int x : alive){\n            int r = getR(x);\n            int nxtR = max(r,r == n ? -1 : getR(r));\n            if(nxtR == r)dead.pb(x);\n            else{\n                if(L[nxtR] != -1)dead.pb(x);\n                else{\n                    L[nxtR] = x;\n                    remove.pb(nxtR);\n                }\n                now += 1ll * (nxtR - r) * d.sz[d.find(x)];\n                R[d.find(x)] = nxtR;\n            }\n        }\n        for(int x : dead){\n            alive.erase(x);\n            if(L[getR(x)] == -1)L[getR(x)] = x;\n            else d.merge(L[getR(x)],x);\n        }\n        for(int x : remove)L[x] = -1;\n        for(int x : vec[i]){\n            ++now;\n            R[x] = x + 1;\n            alive.insert(x);\n            if(L[x] != -1)alive.insert(L[x]);\n            L[x] = -1;\n        }\n        cnt[i] = now;\n    }\n    per(i,M-1,0)cnt[i] -= cnt[i-1];\n    rep(i,1,M-1)ans += cnt[i] * i;\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2022OPEN/#t2","title":"T2","text":"<p>\u9898\u610f\uff1a\u6709\u4e00\u4e2a \\(N\\) \u4e2a\u70b9 \\(M\\) \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u4e24\u4e2a\u4eba\u5728\u4e0a\u9762\u505a\u6e38\u620f\u3002\u6e38\u620f\u5f00\u59cb\u65f6\u6709\u4e24\u679a\u68cb\u5b50\u5206\u522b\u653e\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\uff0c\u6bcf\u4e00\u8f6e\u6e38\u620f\u4e2d\u7531\u5c0fB\u51b3\u5b9a\u79fb\u52a8\u54ea\u4e00\u679a\u68cb\u5b50\uff0c\u5c0fH\u51b3\u5b9a\u6cbf\u7740\u54ea\u4e00\u6761\u8fb9\u79fb\u52a8\u3002\u5982\u679c\u5c0fH\u5728\u67d0\u4e2a\u65f6\u523b\u65e0\u6cd5\u79fb\u52a8\u4e86\uff0c\u5219\u5c0fB\u83b7\u80dc\uff1b\u53cd\u4e4b\u5c0fH\u83b7\u80dc\u3002</p> <p>\u73b0\u5728\u6709 \\(Q\\) \u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u5206\u522b\u7ed9\u51fa\u521d\u59cb\u4e24\u4e2a\u68cb\u5b50\u7684\u4f4d\u7f6e\uff0c\u8981\u6c42\u56de\u7b54\u54ea\u4e2a\u73a9\u5bb6\u4f1a\u83b7\u80dc\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(2\\le N\\le 10^5,2\\le M\\le 2\\times 10^5,1\\le Q\\le 10^5\\)</p> <p>\u8bc4\u4ef7\uff1a\u53cc\u4eba\u535a\u5f08\u4e2d\u8003\u8651\u53cc\u65b9\u7684\u6700\u4f18\u7b56\u7565\u6765\u7b80\u5316\u5c40\u9762\uff0c\u611f\u89c9\u6bd4\u8f83\u7ecf\u5178\u3002\u4e0d\u60f3\u504f\u5e94\u8be5\u86ee\u597d\u505a\u7684\uff1f</p> <p>\u51fa\u5ea6\u4e3a0\u663e\u7136\u6b7b\uff0c\u4e8e\u662f\u5728\u53cd\u56fe\u4e0a\u5148\u62d3\u6251\u6392\u5e8f\u628a\u6240\u6709\u5fc5\u6b7b\u70b9\u627e\u51fa\u6765\uff0c\u5269\u4e0b\u7684\u70b9\u51fa\u5ea6\u663e\u7136\u90fd\u4e0d\u5c0f\u4e8e1\u3002\u518d\u5408\u5e76\u6240\u6709\u51fa\u5ea6\u7b49\u4e8e1\u7684\u70b9\u548c\u51fa\u8fb9\u6240\u6307\u5411\u7684\u70b9\u3002\u6700\u540e\u5269\u4e0b\u7684\u70b9\u51fa\u5ea6\u90fd\u4e0d\u5c0f\u4e8e2\uff0c\u6b64\u65f6\u82e5\u4e24\u4e2a\u68cb\u5b50\u5728\u4e0d\u540c\u4f4d\u7f6e\uff0cB \u65e0\u6cd5\u628a H \u9a97\u8fdb\u6b7b\u8def\u6216\u8005\u7528\u4e00\u4e2a\u68cb\u5b50\u5835\u4f4f\u53e6\u4e00\u4e2a\uff0cH \u8d62\u3002\u4e24\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u5904\u7406\uff0c\u5408\u5e76\u4e24\u70b9\u7684\u8fb9\u96c6\u7528set\u8fdb\u884c\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u7b49\u4ef7\u5173\u7cfb\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N\\log N)\\) \u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ALL(x) x.begin(),x.end()\n#define sz(x) int(x.size())\n#define ll long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n,m,q,fa[N],out[N];\nint find(int x){return fa[x] == x ? x : fa[x] = find(fa[x]);}\nset &lt;int&gt; G[N],R[N];\nbool chk(int x,int y){\n    x = find(x),y = find(y);\n    if(!fa[x] || !fa[y])return 1;//dead end\n    if(x == y)return 1;\n    return 0;\n}\nint main(){\n    cin.tie(0)-&gt;sync_with_stdio(0);\n    cin &gt;&gt; n &gt;&gt; m;\n    int u,v;\n    rep(i,1,m){\n        cin &gt;&gt; u &gt;&gt; v;\n        out[u]++;\n        R[v].insert(u);//reverse graph\n        G[u].insert(v);\n    }\n    queue &lt;int&gt; Q;\n    rep(i,1,n){\n        fa[i] = i;\n        if(sz(G[i]) &lt;= 1)Q.push(i);\n    }\n    while(!Q.empty()){//topo\n        int u = Q.front();\n        Q.pop();\n        int v = 0;\n        for(int x : G[u])if(find(x) != 0){\n            v = find(x);\n            break;\n        }\n        if(v == 0){//dead end\n            fa[u] = 0;\n            for(int x : R[u]){\n                --out[x];\n                if(out[x] == 1)Q.push(x);\n            }\n        }else{\n            //merge points of outdeg = 1\n            if(u == v)continue;\n            R[v].erase(u);\n            if(sz(R[u]) &gt; sz(R[v]))swap(R[u],R[v]);\n            fa[u] = v;\n            for(int x : R[u]){\n                if(R[v].find(x) != R[v].end()){\n                    --out[x];\n                    if(out[x] == 1)Q.push(x); \n                }else R[v].insert(x);\n            }\n        }\n        R[u].clear();\n    }\n    cin &gt;&gt; q;\n    while(q--){\n        cin &gt;&gt; u &gt;&gt; v;\n        if(chk(u,v))putchar('B');\n        else putchar('H');\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/USACO%2022OPEN/#t3","title":"T3","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u4e00\u4e2a\u6392\u5217 \\(p\\) \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N-1\\) \u7684\u5b57\u7b26\u4e32 \\(S\\) \uff0c\\(S\\) \u53ea\u5305\u542b\u5b57\u6bcd U \u548c D \u3002\u8981\u6c42\u627e\u51fa \\(p\\) \u6700\u957f\u7684\u5b50\u5e8f\u5217 \\(a_0,a_1,\\dots,a_K\\) \uff0c\u6ee1\u8db3 \\(S_i = U\\) \u65f6 \\(a_{i-1} &lt; a_i\\) \uff0c\u53cd\u4e4b \\(a_{i-1} &gt; a_i\\) \u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(2\\le N\\le 3\\times 10^5\\)</p> <p>\u8bc4\u4ef7\uff1a\u8fd9\u662f\u94c2\u91d1\u9898\uff1f</p> <p>\u8bbe \\(f_{i,j}\\) \u4e3a\u8003\u8651\u5230\u7b2c \\(i\\) \u4f4d\uff0c\u4e0e \\(S\\) \u7684\u524d \\(j\\) \u4f4d\u5339\u914d\u540e\u6700\u540e\u4e00\u4f4d\u6700\u4f18\u662f\u591a\u5c11\uff0c\u53ef\u4ee5\u505a\u5230 \\(O(N^2)\\) \u3002</p> <p>\u8003\u8651\u4f18\u5316\uff0c\u95ee\u9898\u5728\u539f\u6765\u7684\u72b6\u6001\u8bbe\u8ba1\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001\u5206\u522b\u66f4\u65b0\u3002\u4e0d\u59a8\u8bbe \\(f_i,g_i\\) \u4e3a\u4ee5\u6743\u503c \\(i\\) \u7ed3\u5c3e\uff0c\u4e0b\u4e00\u4f4d\u94a6\u5b9a\u4e3a U/D \u65f6\u80fd\u5339\u914d\u7684\u6700\u957f\u524d\u7f00\u3002\u8fd9\u6837\u4e00\u6765\u6bcf\u6b21\u8f6c\u79fb\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u67e5\u8be2\u6700\u4f18\u7684\u65b9\u6848\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N\\log N)\\) \u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ll long long\nusing namespace std;\nconst int N = 3e5 + 5;\n#define mid ((L + R) &gt;&gt; 1)\n#define ls (p &lt;&lt; 1)\n#define rs (ls | 1)\nstruct SegTree{\n    int mx[N &lt;&lt; 2];\n    void pushup(int p){mx[p] = max(mx[ls],mx[rs]);}\n    void modify(int p,int L,int R,int x,int v){\n        if(L == R){\n            mx[p] = max(mx[p],v);\n            return;\n        }\n        x &lt;= mid ? modify(ls,L,mid,x,v) : modify(rs,mid + 1,R,x,v);\n        pushup(p);\n    }\n    int Q(int p,int L,int R,int l,int r){\n        if(r &lt; L || R &lt; l)return 0;\n        if(l &lt;= L &amp;&amp; R &lt;= r)return mx[p];\n        return max(Q(ls,L,mid,l,r),Q(rs,mid + 1,R,l,r));\n    }\n}f,g;\nint n,a[N];\nstring s;\nint main(){\n    cin.tie(0)-&gt;sync_with_stdio(0);\n    cin &gt;&gt; n;\n    rep(i,1,n)cin &gt;&gt; a[i];\n    cin &gt;&gt; s;\n    rep(i,1,n){\n        int U = f.Q(1,1,n,1,a[i]),D = g.Q(1,1,n,a[i],n);\n        U++,D++;\n        if(s[U - 1] == 'U')f.modify(1,1,n,a[i],U);\n        else g.modify(1,1,n,a[i],U);\n        if(s[D - 1] == 'U')f.modify(1,1,n,a[i],D);\n        else g.modify(1,1,n,a[i],D);\n    }\n    int ans = max(f.Q(1,1,n,1,n),g.Q(1,1,n,1,n));\n    cout &lt;&lt; ans - 1 &lt;&lt; '\\n';\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E3%80%8CJOI%202020%20Final%E3%80%8D%E7%81%AB%E4%BA%8B/","title":"\u300cJOI 2020 Final\u300d\u706b\u4e8b","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5e8f\u5217 \\(S\\) \uff0c\u6709 \\(Q\\) \u4e2a\u8be2\u95ee\u3002\u521d\u59cb\u4e3a\u65f6\u523b \\(0\\) \uff0c\u4e14\u5728 \\(T\\) \u65f6\u523b\u65f6\u5e8f\u5217\u53d8\u6362\u4e3a \\(S'_i=\\max_{i-T\\le j\\le i}\\{S_j\\}\\) \u3002\u8981\u6c42\u5bf9\u8be2\u95ee\u7ed9\u51fa\u7684 \\((T,L,R)\\) \uff0c\u56de\u7b54   \u6570\u636e\u8303\u56f4\uff1a\\(1\\le N,Q\\le 2\\times10^5,1\\le S_i\\le 10^9,1\\le T,L,R\\le N\\) \u3002</p> <p>\u9898\u76ee\u96be\u5ea6\uff1aNOI/NOI+</p> <p>\u6807\u7b7e\uff1a\u6570\u636e\u7ed3\u6784</p> <p>\u89e3\u6790\uff1a</p> <p>\u5b50\u4efb\u52a1 \\(1\\) \uff0c\\(Q,N\\le 200\\) \u3002\u76f4\u63a5\u6a21\u62df\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(QN^2)\\) \u3002</p> <p>\u5b50\u4efb\u52a1 \\(2\\) \uff0c\u6240\u6709\u8be2\u95ee\u65f6\u95f4 \\(T\\) \u76f8\u7b49\u3002\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4e00\u6b21\u6027\u6c42\u51fa\u6b64\u65f6\u7684 \\(S\\) \u5e8f\u5217\uff0c\u524d\u7f00\u548c\u5904\u7406\u540e\u56de\u7b54\u8be2\u95ee\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N)\\) \u3002</p> <p>\u5b50\u4efb\u52a1 \\(3\\) \uff0c\u6240\u6709\u8be2\u95ee \\(L=R\\) \u3002\u7b49\u4ef7\u4e8e\u5355\u70b9\u67e5\u8be2\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 RMQ \u505a\u5230 \\(O(N\\log N+Q)\\) \uff08ST\u8868\uff09\u6216 \\(O(N+Q\\log N)\\) \uff08\u7ebf\u6bb5\u6811\uff09\u3002</p> <p>\u5b50\u4efb\u52a1 \\(4\\) \uff0c\\(S_i\\le 2\\) \u3002 \u9996\u5148\u53d1\u73b0\u6bcf\u4e2a \\(S_i\\) \u4ece\u67d0\u4e2a\u65f6\u95f4\u5f00\u59cb\u5c31\u4e00\u76f4\u4e3a \\(2\\) \uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u5f71\u54cd\u4e00\u6b21\u3002\u5bf9\u8be2\u95ee\u6309\u65f6\u95f4\u987a\u5e8f\u6392\u5e8f\uff0c\u6211\u4eec\u6700\u591a\u7684\u5355\u70b9\u4fee\u6539\u6b21\u6570\u4e0d\u8d85\u8fc7 \\(N\\) \u3002\u5355\u70b9\u66f4\u65b0+\u533a\u95f4\u6c42\u548c\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u505a\u5230 \\(O((N+Q)\\log N)\\) \u3002</p> <p>\u6700\u540e\u8003\u8651\u7ed3\u5408\u4e0a\u8ff0\u601d\u60f3\uff0c\u63a8\u5e7f\u81f3\u6ee1\u5206\u505a\u6cd5\u3002</p> <p>\u4ecd\u7136\u53ef\u4ee5\u6309\u65f6\u95f4\u987a\u5e8f\u5904\u7406\u6240\u6709\u8be2\u95ee\uff0c\u6211\u4eec\u5217\u51fa\u4e00\u4e2a\u8868\u683c\uff0c\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u6570\u8868\u793a\u65f6\u523b \\(i\\) \u65f6 \\(S_j\\) \u7684\u53d6\u503c\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u6570\u5728\u8868\u683c\u91cc\u586b\u5145\u7684\u90e8\u5206\u5448\u5e73\u884c\u56db\u8fb9\u5f62\u6216\u76f4\u89d2\u68af\u5f62\u72b6\u3002\u5e76\u4e14\u82e5\u627e\u51fa \\(S_i\\) \u5f80\u5de6\u548c\u53f3\u7b2c\u4e00\u4e2a\u5927\u4e8e\u5b83\u7684\u6570\u6240\u5728\u4f4d\u7f6e \\(l_i,r_i\\) \uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u56db\u9876\u70b9\u5750\u6807\u3002</p> <p>\uff08\u4e4b\u540e\u5c31\u4e0d\u4f1a\u4e86\uff0c\u6682\u5495 QAQ</p>"},{"location":"Old%20Posts/%E3%80%8CJOI%20Open%202016%E3%80%8D%E6%91%A9%E5%A4%A9%E5%A4%A7%E6%A5%BC/","title":"\u300cJOI Open 2016\u300d\u6469\u5929\u5927\u697c","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1ahttps://loj.ac/p/2743</p> <p>\u9898\u76ee\u96be\u5ea6\uff1aUSACO P/\u7701\u9009</p> <p>\u597d\u50cf\u662f\u6691\u5047\u4e4b\u524d\u5728 KarL05 \u63a8\u8350\u7ed9\u6211\u7684dp\u535a\u5ba2\u91cc\u9762\u770b\u5230\u7684\u9898\u76ee\uff0c\u4f46\u662f\u56e0\u4e3a\u592a\u61d2\u4e00\u76f4\u6ca1\u6709\u505a\uff0c\u73b0\u5728\u51ed\u4e0d\u5b8c\u6574\u7684\u8bb0\u5fc6\u628a\u6b63\u89e3\u91cd\u65b0\u5199\u51fa\u6765\u3002</p> <p>\u601d\u8def\uff1a</p> <p>\u4f30\u4e00\u4e0b\u590d\u6742\u5ea6\u5fc5\u7136\u548c \\(N,L\\) \u6709\u5173\uff0c\u5e76\u4e14\u9898\u76ee\u8981\u6c42\u5e26\u9650\u5236\u7684\u6392\u5217\u6570\uff0c\u4e0d\u96be\u60f3\u5230\u89e3\u6cd5\u5e94\u8be5\u662f\u67d0\u79cddp\u3002\u7531\u4e8e\u8981\u6c42 \\(A\\) \u4e2d\u4e00\u4e9b\u6570\u5dee\u503c\u7684\u548c\uff08\u4e0b\u6587\u8bb0\u4e3a\u8d39\u7528\uff09\uff0c\u4e0d\u59a8\u5148\u5c06 \\(A\\) \u6570\u7ec4\u6392\u5e8f\u3002\u63a5\u4e0b\u6765\uff0c\u8003\u8651\u5982\u4f55\u53bb\u6389\u7edd\u5bf9\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u5c06\u6570\u63d2\u5165\u6392\u5217\uff0c\u7c7b\u4f3c\u7684trick\u53eb Component dp \u6216\u8005 \u63d2\u5165dp\u3002</p> <p>\u5047\u8bbe\u73b0\u5728\u63d2\u5165\u5230 \\(A_i\\) \uff0c\u5982\u4f55\u8ba1\u7b97\u63d2\u5165\u540e\u5bf9\u8d39\u7528\u7684\u53d8\u5316\u5462\uff1f\u53ef\u4ee5\u5dee\u5206\u8ba1\u7b97\uff0c\u4e8e\u662f\u8bb0 \\(dp_{i,j,k,l}\\) \u4e3a\u586b\u5230\u7b2c \\(i\\) \u4e2a\u6570\uff0c\u6709 \\(j\\) \u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u5f53\u524d\u8d39\u7528\u4e3a \\(k\\) \uff0c\u4ee5\u53ca\u6392\u5217\u7684\u5934\u5c3e\u88ab\u586b\u5165\u4e86\u51e0\u4e2a\u3002\u5177\u4f53\u5730\uff1a</p> <ul> <li>\u63d2\u5728\u4e24\u4e2a\u8fde\u901a\u5757\u4e2d\u95f4\u5e76\u5c06\u4e24\u5757\u5408\u5e76\uff0c\u6709 \\(j-1\\) \u79cd\u65b9\u6848\u3002</li> <li>\u65b0\u589e\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5982\u679c\u5934\u548c\u5c3e\u6ca1\u6709\u653e\u5c31\u53ef\u4ee5\u653e\uff0c\u5171\u6709 \\(j+1-l\\) \u79cd\u65b9\u6848\u3002</li> <li>\u653e\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u5934\u6216\u5c3e\u90e8\uff0c\u5e76\u4e14\u4e0d\u6539\u53d8 \\(l\\) \uff0c\u6709 \\(2j-s\\) \u79cd\u65b9\u6848\u3002</li> <li>\u653e\u5728\u6574\u4e2a\u6392\u5217\u7684\u5934\u6216\u5c3e\u90e8\uff0c\u5982\u679c\u5f53\u524d\u6392\u5217\u5df2\u7ecf\u586b\u5165\u4e86\u6570\uff0c\u5219\u53ef\u4ee5\u770b\u4f5c\u52a0\u5165\u4e86\u8fd9\u4e2a\u6392\u5217\u4e2d\u6700\u5de6\u7684\u8fde\u901a\u5757\u7684\u5de6\u7aef\uff0c\u6216\u6700\u53f3\u8fde\u901a\u5757\u7684\u53f3\u7aef\u3002\u6709 \\(2-s\\) \u79cd\u65b9\u6848\u3002 </li> </ul> <p>\u5bf9\u4e0a\u8ff0\u60c5\u51b5\u5206\u522b\u8f6c\u79fb\u5373\u53ef\uff0c\u6700\u540e\u6ce8\u610f\u5230 \\(i\\) \u8fd9\u4e00\u7ef4\u53ef\u4ee5\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^2L)\\) \u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define vi vector&lt;int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ALL(x) x.begin(),x.end()\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int MN=105,ML=1005,P=1e9+7;\nvoid upd(int &amp;a,int b){a+=b;if(a&gt;P)a-=P;}\nint N,L,A[MN],f[2][3][MN][ML],ans;\n#define now (i&amp;1)\n#define pre (now^1)\nint main(){\n    N=read(),L=read();\n    rep(i,1,N)A[i]=read();\n    if(N==1){puts(\"1\");return 0;}\n    sort(A+1,A+N+1);\n    A[0]=0;\n    f[0][0][0][0]=1;\n    rep(i,1,N){\n        rep(s,0,2)rep(j,0,i-1)rep(k,0,L)f[now][s][j][k]=0;\n        rep(j,0,i-1)rep(s,0,min(2,2*j)){\n            int w=(2*j-s)*(A[i]-A[i-1]);\n            rep(k,0,L-w){\n                int val=f[pre][s][j][k];\n                if(!val)continue;\n                upd(f[now][s][j+1][k+w],1ll*(j+1-s)*val%P);\n                if(j&gt;1)upd(f[now][s][j-1][k+w],1ll*(j-1)*val%P);\n                if(j&amp;&amp;s&lt;2)upd(f[now][s+1][j][k+w],1ll*(2-s)*val%P);\n                if(s&lt;2)upd(f[now][s+1][j+1][k+w],1ll*(2-s)*val%P);\n                if(j)upd(f[now][s][j][k+w],1ll*(2*j-s)*val%P);\n            }\n        }\n    }\n    rep(i,0,L)upd(ans,f[N&amp;1][2][1][i]);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E3%80%8CeJOI2021%E3%80%8D%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"\u300ceJOI2021\u300d\u505a\u9898\u8bb0\u5f55","text":""},{"location":"Old%20Posts/%E3%80%8CeJOI2021%E3%80%8D%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#k","title":"\u52a0K","text":"<p>\u9996\u5148\u770b\u67e5\u8be2\u64cd\u4f5c\uff0c\u8bbe  \u90a3\u4e48\u5bf9\u4e8e \\(r-l+1 &lt; m\\) \uff0c\u663e\u7136\u6709 \\(f(l,r,m)=0\\) \u3002\u5426\u5219\u62c6\u8d21\u732e\uff0c\u53ef\u4ee5\u770b\u4f5c  \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 \\(B,C\\) \u5373\u53ef\u3002</p>"},{"location":"Old%20Posts/%E3%80%8CeJOI2021%E3%80%8D%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#k_1","title":"K \u5212\u5206","text":"<p>\u7531\u5b9a\u4e49\uff0c\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(K\\) \u7684\u533a\u95f4\u53ef\u4ee5\u88ab\u5212\u5206\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e00\u6bb5\u7684\u548c \\(S\\) \u4e3a\u5076\u6570\u4e14\u53ef\u4ee5\u53d6\u51fa\u4e00\u4e9b\u6570\u6ee1\u8db3\u548c\u4e3a \\(S/2\\) \u3002\u6211\u4eec\u8bb0 \\(dp[i]\\) \u4e3a\u6700\u53f3\u7684\u4f4d\u7f6e\u4f7f\u5f97\u5b58\u5728\u4ece\u8be5\u4f4d\u7f6e\u5f00\u59cb\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u548c\u4e3a \\(i\\) \u3002\u5f53\u6211\u4eec\u8003\u8651\u5230 \\(A_n\\) \u65f6\uff0c\u6709\u8f6c\u79fb\uff1a  \u6bcf\u6b21\u66f4\u65b0\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\u5f53\u524d\u53ef\u80fd\u7684\u6240\u6709 \\(K\\) \u5206\u522b\u5224\u5b9a\u5373\u53ef\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(\\frac{N\\sum{A_i}}{2})\\) \u7684\u3002</p>"},{"location":"Old%20Posts/%E5%9C%86%E6%96%B9%E6%A0%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","title":"P5236 \u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c","text":"<p>\u9898\u89e3\uff1a</p> <p>\u5efa\u5706\u65b9\u6811\uff0c\u5bf9\u4e8e\u6811\u4e0a\u7684\\(u\\rightarrow v\\)\u8fb9\u6743\uff1a</p> <ul> <li>\\(u,v\\)\u5747\u4e3a\u5706\u70b9\u5219\u4e3a\u539f\u56fe\u8fb9\u6743</li> <li>\\(u\\)\u4e3a\u65b9\u70b9\u5219\u4e3a\\(v\\)\u5230\\(u\\)\u7236\u4eb2\u7684\u6700\u77ed\u8def</li> <li>\u5426\u5219\u6743\u503c\u4e3a\\(0\\)</li> </ul> <p>\u627e\u6811\u4e0a\u6700\u77ed\u8def\u65f6\u8003\u8651\u5bf9\\(p=lca(u,v)\\)\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\\(p\\)\u4e3a\u5706\u70b9\uff0c\u5219\u76f4\u63a5\u505a\u6811\u4e0a\u8ddd\u79bb</li> <li>\\(p\\)\u4e3a\u65b9\u70b9\uff0c\u5219\u9700\u8981\u627e\u51fa\\(p\\)\u7684\u4e24\u4e2a\u513f\u5b50\\(A,B\\)\uff0c\u5206\u522b\u4e3a\\(u,v\\)\u7956\u5148\u3002\u7531\u4e8e\\(A,B\\)\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c\u53ef\u4ee5\u76f4\u63a5\u6c42\\(dis(A,B)\\)\u3002\u7b54\u6848\u5c31\u662f\\(dis(A,B)+dis(A,u)+dis(B,v)\\)</li> </ul> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nstruct edge{\n    int v,w;\n    edge(int v=0,int w=0):v(v),w(w){}\n};\nusing namespace std;\nconst int N=1e5+5;\nint n,m,q,ans;\nint dfn[N],low[N],dfc,cnt;\nint fa[N],top[N],son[N],size[N],dep[N],b[N],sum[N],dis[N];\nvector&lt;edge&gt; G[N],T[N&lt;&lt;1];\ninline int min(int a,int b){return a&lt;b?a:b;}\ninline void solve(int u,int v,int w){\n    ++cnt;\n    int pw,pre=w,i=v;\n    while(i!=fa[u]){\n        sum[i]=pre;\n        pre+=b[i];\n        i=fa[i];\n    }\n    sum[cnt]=sum[u];//\u628a\u6574\u4e2a\u73af\u7684\u8fb9\u6743\u548c\u5b58\u5230\u65b9\u70b9\u4e0a\n    sum[u]=0;\n    i=v;\n    while(i!=fa[u]){\n        pw=min(sum[i],sum[cnt]-sum[i]);\n        //\u627e\u6700\u77ed\u8def\u5efa\u6811\u8fb9\n        T[cnt].push_back({i,pw});\n        T[i].push_back({cnt,pw});\n        i=fa[i];\n    }\n}\nvoid Tarjan(int u,int f) {\n    low[u] = dfn[u] = ++dfc;\n    int v,w,l=G[u].size();\n    for (int i=0;i&lt;l;i++) {\n        v=G[u][i].v;\n        if(v==f)continue;\n        w=G[u][i].w;\n        if (!dfn[v]) {\n            fa[v]=u,b[v]=w;//\u628au-&gt;v\u7684\u8fb9\u6743\u5b58\u5230v\u4e0a\n            Tarjan(v,u);\n            low[u] = min(low[u], low[v]);\n        } else low[u] = min(low[u], dfn[v]);\n        if(low[v]&lt;=dfn[u])continue;\n        //\u5706\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9,\u4fdd\u7559\u539f\u56fe\u4e2d\u6570\u636e\n        T[u].push_back({v,w});T[v].push_back({u,w});\n    }\n    for(int i=0;i&lt;l;i++){\n        v=G[u][i].v;\n        if(fa[v]==u||dfn[v]&lt;=dfn[u])continue;\n        //\u627e\u5230\u975e\u6811\u8fb9,\u7136\u540e\u5efa\u65b9\u70b9\u5e76\u8fde\u8fb9\n        solve(u,v,G[u][i].w);\n    }\n}\nvoid dfs1(int u,int f){\n    fa[u] = f;\n    dep[u] = dep[f]+1;\n    size[u] = 1;\n    int v,t = -1,l = T[u].size();\n    for(int i=0;i&lt;l;++i){\n        v = T[u][i].v;\n        if(v==f) continue;\n        dis[v] = dis[u]+T[u][i].w;\n        dfs1(v,u);\n        size[u] += size[v];\n        if(size[v]&gt;t){\n            t = size[v];\n            son[u] = v;\n        }\n    }\n}\n\nvoid dfs2(int u,int f){\n    top[u] = f;\n    if(son[u]==0) return;\n    dfs2(son[u],f);\n    int v,l = T[u].size();\n    for(int i=0;i&lt;l;++i){\n        v = T[u][i].v;\n        if(v==fa[u]||v==son[u]) continue;\n        dfs2(v,v);\n    }\n}\ninline int lca(int u,int v){\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);\n        u=fa[top[u]];\n    }\n    return dep[u]&lt;dep[v]?u:v;\n}\ninline int find(int u,int f){\n    int res;\n    while(top[u]!=top[f]){\n        res=top[u];\n        u=fa[top[u]];\n    }\n    return u==f?res:son[f];\n}\nint main(){\n    n=read(),m=read(),q=read();\n    cnt=n;\n    rep(i,1,m){\n        int u=read(),v=read(),w=read();\n        G[u].push_back({v,w});G[v].push_back({u,w});\n    }\n    Tarjan(1,0);\n    dfs1(1,0);\n    dfs2(1,1);\n    while(q--){\n        int u=read(),v=read();\n        int p=lca(u,v);\n        if(p&lt;=n)ans=dis[u]+dis[v]-dis[p]*2;//lca\u4e3a\u5706\u70b9\n        else{\n            int A=find(u,p),B=find(v,p);//\u627e\u5230\u513f\u5b50A,B\n            ans=dis[u]+dis[v]-dis[A]-dis[B];\n            if(sum[A]&lt;sum[B])swap(A,B);\n            ans+=min(sum[A]-sum[B],sum[p]+sum[B]-sum[A]);\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E5%9C%86%E6%96%B9%E6%A0%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#p5058-zjoi2004","title":"P5058 [ZJOI2004]\u55c5\u63a2\u5668","text":"<p>\u9898\u89e3\uff1a</p> <p>\u4ece\\(a\\)\u5f00\u59cbTarjan\uff0c\u8fc7\u7a0b\u4e2d\u627e\u51fa\u4e0d\u4e3a\\(a\\)\u7684\u4e00\u4e2a\u5272\u70b9\uff0c\u5e76\u4e14\u5224\u65ad\\(b\\)\u662f\u5426\u88ab\u641c\u5230\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nvector&lt;int&gt;G[N];\nint n,a,b,dfn[N],low[N],cut[N],tim;\nvoid tarjan(int u){\n    dfn[u]=low[u]=++tim;\n    for(int i=0;i&lt;G[u].size();i++){\n        int v=G[u][i];\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n            if(low[v]&gt;=dfn[u]&amp;&amp;u!=a&amp;&amp;dfn[b]&gt;=dfn[v]){\n                cut[u]=1;\n            }\n        }else low[u]=min(low[u],dfn[v]);\n    }\n}\nint main(){\n    n=read();\n    int u=read(),v=read();\n    while(!(u==0&amp;&amp;v==0)){\n        G[u].push_back(v);G[v].push_back(u);\n        u=read(),v=read();\n    }\n    a=read(),b=read();\n    tarjan(a);\n    rep(i,1,n){\n        if(cut[i]){\n            printf(\"%d\\n\",i);\n            return 0;\n        }\n    }\n    puts(\"No solution\");\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20CF367E/","title":"\u9898\u89e3 CF367E","text":"<p>\u4f20\u9001\u95e8</p> <p>\u9996\u5148 \\(n&gt;m\\) \u65f6\u663e\u7136\u65e0\u89e3\u3002\u7531\u539f\u9898\u7684\u6570\u636e\u8303\u56f4\u53ef\u5f97 \\(n\\le \\sqrt{10^5}\\) \u3002</p> <p>\u8003\u8651\u5982\u4f55\u6784\u9020\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684 \\(n\\) \u4e2a\u533a\u95f4\u3002\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u533a\u95f4 \\([l_i,r_i],[l_j,r_j]\\) \uff0c\u90fd\u6709 \\(l_i&lt;l_j,r_i&lt;r_j\\) \u5373\u53ef\u3002\u90a3\u4e48\u6211\u4eec\u5982\u679c\u9009\u53d6\u4e86 \\(n\\) \u4e2a\u5de6\u7aef\u70b9\u548c \\(n\\) \u4e2a\u53f3\u7aef\u70b9\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u79cd\u6ee1\u8db3\u9898\u610f\u7684\u6784\u9020\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u5c06\u5de6\u53f3\u7aef\u70b9\u5206\u522b\u6392\u5e8f\u540e\u6309\u5e8f\u53f7\u5339\u914d\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u603b\u65b9\u6848\u6570\u3002\u5b9a\u4e49 \\(dp[i][j][k]\\) \u4e3a\u8003\u8651\u5b8c\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u76ee\u524d\u6709 \\(j\\) \u4e2a\u5de6\u7aef\u70b9\u88ab\u9009\u62e9\uff0c\\(k\\) \u4e2a\u53f3\u7aef\u70b9\u88ab\u9009\u62e9\u3002\u800c\u53f3\u7aef\u70b9\u603b\u662f\u8981\u4e0e\u5de6\u7aef\u70b9\u5339\u914d\uff0c\u6240\u4ee5\u9700\u8981\u4fdd\u8bc1 \\(j\\ge k\\) \u3002\u6ce8\u610f\u5230\u5173\u952e\u70b9\u65f6\u53ea\u80fd\u8003\u8651\u5411 \\(k+1\\) \u8f6c\u79fb\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(mn^2)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5,P=1e9+7;\nint n,m,x,fac[N];\ninline void Add(int &amp;x,const int &amp;y){x+=y;if(x&gt;P)x-=P;}\nint main(){\n    n=read(),m=read(),x=read();\n    if(n&gt;m)return puts(\"0\"),0;\n    int dp[2][n+5][n+5];\n    memset(dp,0,sizeof(dp));\n    dp[0][0][0]=1;\n    rep(i,1,m){\n        int now=i&amp;1,pre=now^1;\n        memset(dp[now],0,sizeof(dp[now]));\n        rep(j,0,n)rep(k,0,j){//\u7b2ci\u4e2a\u4f4d\u7f6e\uff0cj\u4e2a\u5de6\u62ec\u53f7\uff0ck\u4e2a\u53f3\u62ec\u53f7\n            if(j&gt;k&amp;&amp;i!=x)Add(dp[now][j][k+1],dp[pre][j][k]);\n            Add(dp[now][j+1][k],dp[pre][j][k]);\n            Add(dp[now][j+1][k+1],dp[pre][j][k]);\n            if(i!=x)Add(dp[now][j][k],dp[pre][j][k]);\n        }\n    }\n    fac[0]=1;\n    rep(i,1,n)fac[i]=1ll*fac[i-1]*i%P;\n    printf(\"%lld\\n\",1ll*dp[m&amp;1][n][n]*fac[n]%P);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20CF466D/","title":"\u9898\u89e3 CF466D","text":"<p>\u4f20\u9001\u95e8</p> <p>\u601d\u7ef4\u9898\u3002</p> <p>\u9996\u5148\u53ef\u4ee5\u8bbe \\(a'_i=h-a_i\\) \u4e3a\u6bcf\u4e2a\u6570\u79bb \\(h\\) \u5dee\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u800c\u6211\u4eec\u60f3\u901a\u8fc7\u82e5\u5e72\u6b21\u5de6\u53f3\u7aef\u70b9\u4e0d\u91cd\u5408\u7684\u533a\u95f4 \\(-1\\) \u6765\u4f7f \\(a'_i=0\\) \u3002\u8003\u8651\u533a\u95f4 \\(-1\\) \u6240\u5e26\u6765\u7684\u5f71\u54cd\uff0c\u8bbe\u8fd9\u6bb5\u533a\u95f4\u4e3a \\([l,r]\\) \uff0c\u5b9e\u8d28\u4e0a\u4e3a\u5c06\u5dee\u5206\u6570\u7ec4 \\(d\\) \u4e2d\u7684 \\(d_l\\) \u51cf\u4e00\uff0c\\(d_{r+1}\\) \u52a0\u4e00\u3002\u800c\u6700\u7ec8\u6240\u6709\u5143\u7d20\u503c\u76f8\u7b49\u5219\u7b49\u4ef7\u4e8e\u5c06\u5dee\u5206\u6570\u7ec4\u8f6c\u4e3a\u5168 \\(0\\) \uff0c\u6545\u4e0b\u9762\u53ea\u8003\u8651\u5dee\u5206\u6570\u7ec4\u4e0a\u7684\u64cd\u4f5c\u3002</p> <p>\u518d\u770b\u5de6\u53f3\u7aef\u70b9\u4e0d\u91cd\u5408\u7684\u6761\u4ef6\uff0c\u8fd9\u8bf4\u660e\u4e86\u4e00\u4e2a\u503c\u548c\u539f\u6765\u76f8\u6bd4\uff0c\u53ea\u6709 \\(+1,-1\\) \u6216\u4e0d\u53d8\u4e09\u79cd\u3002\u6240\u4ee5\u5982\u679c\u5dee\u5206\u6570\u7ec4\u4e2d\u67d0\u4e2a\u503c\u7684\u7edd\u5bf9\u503c\u5927\u4e8e \\(1\\) \uff0c\u663e\u7136\u65e0\u89e3\u3002\u6700\u540e\u505a\u533a\u95f4\u7aef\u70b9\u5339\u914d\u5373\u53ef\uff0c\u5177\u4f53\u5730\uff1a</p> <ul> <li>\u5dee\u5206\u503c\u4e3a \\(1\\) \u5219\u653e\u8fdb\u5de6\u7aef\u70b9\u4e2d</li> <li>\u4e3a \\(0\\) \u53ef\u4ee5\u4e0d\u64cd\u4f5c\uff0c\u6216\u8005\u540c\u65f6\u4e3a\u5de6\u53f3\u7aef\u70b9</li> <li>\u4e3a \\(-1\\) \u5219\u662f\u53f3\u7aef\u70b9\uff0c\u4e0e\u524d\u9762\u6709\u7684\u4efb\u610f\u5de6\u7aef\u70b9\u5339\u914d\u3002</li> </ul> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+5,mod=1e9+7;\nint n,h,a[N],d[N],num;\nll ans=1;\nint main(){\n    n=read(),h=read();\n    rep(i,1,n)a[i]=h-read();\n    rep(i,1,n+1){\n        d[i]=a[i]-a[i-1];\n        if(abs(d[i])&gt;1)return puts(\"0\"),0;\n    }\n    rep(i,1,n+1){\n        if(d[i]==1)++num;\n        if(d[i]==0){\n            ans=ans*(num+1)%mod;\n        }\n        if(d[i]==-1){\n            ans=ans*num%mod;--num;\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20P4184%20%5BUSACO18JAN%5DSprinklers%20P/","title":"\u9898\u89e3 P4184 [USACO18JAN]Sprinklers P","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u7ed9\u4e00\u5757 \\(N\\times N\\) \u7684\u7f51\u683c\uff0c\u5176\u4e2d\u6709 \\(N\\) \u4e2a\u7279\u6b8a\u683c\u5b50\uff0c\u6240\u5728\u7684\u884c\u548c\u5217\u4e92\u4e0d\u76f8\u540c\u3002\u4e00\u4e2a\u4f4d\u4e8e \\((i,j)\\) \u7684\u7279\u6b8a\u683c\u6709\u4ee5\u4e0b\u6548\u679c\uff1a</p> <ul> <li>\u5bf9\u6240\u6709 \\(0\\le x\\le i,0\\le y\\le j\\) \u7684 \\((x,y)\\) \u5e26\u6765\u6548\u679c \\(1\\) \u3002</li> <li>\u5bf9\u6240\u6709 \\(i\\le x\\le N,j\\le y\\le N\\) \u7684 \\((x,y)\\) \u5e26\u6765\u6548\u679c \\(2\\) \u3002</li> </ul> <p>\u95ee\u7f51\u683c\u4e2d\u6709\u591a\u5c11\u4e2a\u5b50\u77e9\u5f62\uff0c\u6ee1\u8db3\u6240\u6709\u683c\u90fd\u88ab\u6548\u679c \\(1\\) \u548c \\(2\\) \u8986\u76d6\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le N\\le 10^5\\) .</p> <p>\u9898\u76ee\u96be\u5ea6\uff1a\u7701\u9009/USACO Platinum</p> <p>\u77e5\u8bc6\u50a8\u5907\uff1a\u57fa\u7840\u7b97\u6cd5</p> <p>\u89e3\u6790\uff1a</p> <p>\u9996\u5148\u8003\u8651\u6bcf\u4e00\u884c\u4e2d\u54ea\u4e9b\u683c\u5b50\u4f1a\u540c\u65f6\u53d7\u5230\u6548\u679c \\(1\\) \u548c \\(2\\) \u3002\u7531\u4e8e\u6bcf\u6b21\u5f71\u54cd\u7684\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u663e\u7136\u884c\u4e0a\u540c\u65f6\u53d7\u5230\u5f71\u54cd\u7684\u533a\u95f4\u4e5f\u662f\u8fde\u7eed\u7684\u3002\u8bbe \\(l_i,r_i\\) \u4e3a\u8fd9\u6bb5\u533a\u95f4\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0 \\(l_i\\) \u4e3a\u7b2c \\(i\\) \u884c\u4ee5\u4e0a\u6700\u9760\u5de6\u7684\u7279\u6b8a\u683c\u6a2a\u5750\u6807\uff0c\\(r_i\\) \u4e3a\u7b2c \\(i\\) \u884c\u4ee5\u4e0b\u6700\u9760\u53f3\u7684\u7279\u6b8a\u683c\u6a2a\u5750\u6807\u3002\u53ef\u4ee5\u7b80\u5355\u9884\u5904\u7406\u51fa\u6240\u6709\u884c\u7684 \\(l_i,r_i\\) \u3002</p> <p>\u679a\u4e3e\u77e9\u5f62\u7684\u53f3\u4e0b\u89d2 \\((i,j)\\) \u548c\u5de6\u4e0a\u89d2 \\((x,y)\\) \uff0c\u6709  \u7b80\u5355\u63a8\u4e00\u4e0b\u5f0f\u5b50\u4f18\u5316\uff1a  \u524d\u7f00\u548c\u4f18\u5316\u5373\u53ef \\(O(N)\\) \u8ba1\u7b97\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N)\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5,P=1e9+7;\nint n,a[N],sum1[N],sum2[N];\nint ans,l[N],r[N],up[N];\nint main(){\n    n=read();\n    rep(i,1,n){\n        int x=read()+1,y=read()+1;\n        a[x]=y;\n    }\n    l[0]=n,r[n+1]=0;\n    rep(i,1,n)l[i]=min(l[i-1],a[i]);\n    per(i,n,1)r[i]=max(r[i+1],a[i]);\n    int pos=r[1];\n    rep(i,1,n){\n        while(pos&amp;&amp;pos&gt;=l[i]){\n            up[pos]=i,pos--;\n        }\n    }\n    rep(i,1,n)sum1[i]=(sum1[i-1]+up[i])%P;\n    rep(i,1,n)sum2[i]=(sum2[i-1]+1ll*i*up[i]%P)%P;\n    rep(i,1,n){\n        ans=(ans+1ll*i*(1ll*(r[i]-l[i])*(r[i]-l[i]+1)/2ll%P)%P\n        -1ll*(sum1[r[i]-1]-sum1[l[i]-1]+P)%P*r[i]%P+\n        (sum2[r[i]-1]-sum2[l[i]-1]+P)%P)%P;\n    }\n    printf(\"%d\\n\",(ans+P)%P);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20P4374%20%5BUSACO18OPEN%5DDisruption%20P/","title":"\u9898\u89e3 P4374 [USACO18OPEN]Disruption P","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u7ed9\u4e00\u68f5 \\(N\\) \u4e2a\u70b9\u7684\u6811\u548c \\(M\\) \u6761\u7279\u6b8a\u8fb9\uff0c\u7279\u6b8a\u8fb9\u6709\u8fb9\u6743\u3002\u5e0c\u671b\u6c42\u51fa\u53bb\u6389\u6811\u4e0a\u4efb\u610f\u4e00\u6761\u8fb9\u540e\uff0c\u52a0\u4e00\u6761\u7279\u6b8a\u8fb9\u4f7f\u56fe\u8fde\u901a\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(2\\le N\\le 5\\times 10^4,M\\le 5\\times10^4\\) .</p> <p>\u77e5\u8bc6\u50a8\u5907\uff1a\u5e76\u67e5\u96c6\uff0c\u500d\u589eLCA</p> <p>\u9898\u76ee\u96be\u5ea6\uff1a\u7701\u9009/USACO Platinum</p> <p>\u89e3\u6790\uff1a</p> <p>\uff08\u8fd9\u9053\u9898\u7a0d\u4e3a\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u8003\u8651\u7279\u6b8a\u8fb9\u80fd\u7ed9\u54ea\u4e9b\u8fb9\u7684\u7b54\u6848\u5e26\u6765\u8d21\u732e\uff0c\u5e76\u7528\u6811\u5256+\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u8fd9\u79cd\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u662f \\(O(N\\log^2 N)\\) \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002 \u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u66f4\u4e3a\u7cbe\u5999\u7684\u79bb\u7ebf\u505a\u6cd5\u3002\uff09</p> <p>\u5bf9\u7279\u6b8a\u8fb9\u6309\u8fb9\u6743\u5347\u5e8f\u6392\u5e8f\u3002\u8003\u8651\u7279\u6b8a\u8fb9 \\((u,v)\\) \u80fd\u6210\u4e3a\u54ea\u4e9b\u6811\u4e0a\u8fb9\u7684\u7b54\u6848\u3002\u53bb\u6389\u4e00\u6761\u8fb9\u52a0\u4e0a \\((u,v)\\) \u540e\u539f\u56fe\u4ecd\u4e3a\u6811\uff0c\u4e0d\u96be\u53d1\u73b0\u53bb\u6389\u7684\u8fd9\u6761\u8fb9\u5fc5\u987b\u5728 \\([u,v]\\) \u7684\u6811\u4e0a\u8def\u5f84\u4e0a\u3002\u5176\u6b21\uff0c\u5f53\u8fd9\u6761\u6811\u8fb9\u7684\u7b54\u6848\u5df2\u7ecf\u786e\u5b9a\u540e\uff0c\u4e0d\u9700\u8981\u518d\u8003\u8651\u8fd9\u6761\u8fb9\u65ad\u5f00\u7684\u60c5\u51b5\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u5408\u5e76\u4e24\u4e2a\u7aef\u70b9\u3002</p> <p>\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u9884\u5904\u7406\u500d\u589e LCA \uff0c\u4ece\u5c0f\u5230\u5927\u904d\u5386\u7279\u6b8a\u8fb9\uff0c\u5bf9\u6811\u4e0a\u8fb9\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(M\\alpha(n))\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ll long long\nusing namespace std;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,m,fa[N][20],Log[N],pos[N],dep[N];\nint dsu[N],ans[N];\nint find(int x){return x==dsu[x]?x:dsu[x]=find(dsu[x]);}\nstruct Edge{\n    int u,v,w;\n    bool operator &lt;(const Edge a)const{\n        return w&lt;a.w;\n    }\n}e[N];\nvector &lt;pii&gt; G[N];\nvoid dfs(int u,int f){\n    dep[u]=dep[f]+1,fa[u][0]=f;\n    for(auto x:G[u]){\n        if(x.fi==f)continue;\n        pos[x.se]=x.fi;\n        dfs(x.fi,u);\n    }\n}\nint lca(int x,int y) {\n    if(dep[x]&lt;dep[y])swap(x,y);\n    while(dep[x]&gt;dep[y]){\n        x=fa[x][Log[dep[x]-dep[y]]];\n    }\n    if(x==y)return x;\n    for(int i=Log[dep[x]];i&gt;=0;i--){\n        if(fa[x][i]!=fa[y][i]){\n            x=fa[x][i];\n            y=fa[y][i];\n        }\n    }\n    return fa[x][0];\n}\nvoid init(){\n    Log[0]=-1;\n    rep(i,1,n){\n        Log[i]=Log[i&gt;&gt;1]+1;\n        ans[i]=-1;\n        dsu[i]=i;\n    }\n    rep(i,1,16){\n        rep(j,1,n)fa[j][i]=fa[fa[j][i-1]][i-1];\n    }\n    sort(e+1,e+m+1);\n}\nint main(){\n    //freopen(\"disrupt.in\",\"r\",stdin);\n    //freopen(\"disrupt.out\",\"w\",stdout);\n    n=read(),m=read();\n    rep(i,1,n-1){\n        int u=read(),v=read();\n        G[u].pb({v,i}),G[v].pb({u,i});\n    }\n    dfs(1,0);\n    rep(i,1,m){\n        e[i]={read(),read(),read()};\n    }\n    init();\n    rep(i,1,m){\n        int u=e[i].u,v=e[i].v,w=e[i].w;\n        int L=lca(u,v);\n        for(u=find(u);dep[u]&gt;dep[L];u=find(fa[u][0])){\n            ans[u]=w,dsu[u]=fa[u][0];\n        }\n        for(v=find(v);dep[v]&gt;dep[L];v=find(fa[v][0])){\n            ans[v]=w,dsu[v]=fa[v][0];\n        }\n    }\n    rep(i,1,n-1)printf(\"%d\\n\",ans[pos[i]]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20P5203%20%5BUSACO19JAN%5DExercise%20Route%20P/","title":"\u9898\u89e3 P5203 [USACO19JAN]Exercise Route P","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u7ed9\u5b9a \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\uff0c\u5176\u4e2d \\(n-1\\) \u6761\u8fb9\u4e3a\u666e\u901a\u8fb9\uff0c\u8fd9\u4e9b\u666e\u901a\u8fb9\u6784\u6210\u4e86\u4e00\u68f5\u6811\uff0c\u5269\u4e0b\u7684\u8fb9\u4e3a\u7279\u6b8a\u8fb9\u3002\u95ee\u56fe\u4e2d\u6709\u591a\u5c11\u7b80\u5355\u73af\u6070\u5305\u542b\u4e24\u6761\u7279\u6b8a\u8fb9\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le n\\le 2\\times10^5,1\\le m\\le 2\\times 10^5,m\\ge n-1,1\\le a_i,b_i\\le n\\) .</p> <p>\u77e5\u8bc6\u50a8\u5907\uff1aLCA</p> <p>\u9898\u76ee\u96be\u5ea6\uff1a\u7701\u9009/USACO Platinum</p> <p>\u89e3\u6790\uff1a</p> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u7b80\u5355\u73af\u7684\u5f62\u5f0f\u662f\u4e24\u6761\u7279\u6b8a\u8fb9\u52a0\u4e0a\u82e5\u5e72\u6811\u4e0a\u8fb9\u3002\u5982\u679c\u8bbe\u8fd9\u4e24\u6761\u7279\u6b8a\u8fb9\u4e3a  \\((u_1,v_1),(u_2,v_2)\\) \uff0c\u5f53\u4e14\u4ec5\u5f53\u6811\u4e0a\u8def\u5f84 \\([u_1,v_1],[u_2,v_2]\\) \u6709\u8fb9\u91cd\u5408\u65f6\u624d\u80fd\u6784\u9020\u51fa\u7b80\u5355\u73af\u3002</p> <p>\u4e0b\u9762\u601d\u8003\u5982\u4f55\u5bf9\u91cd\u5408\u7684\u6811\u4e0a\u8def\u5f84\u8fdb\u884c\u8ba1\u6570\u3002\u5148\u8003\u8651\u4e00\u6761\u94fe\u4e0a\u7684\u60c5\u51b5\uff0c\u5373\u5e8f\u5217\u4e0a\u8ba1\u7b97\u91cd\u5408\u533a\u95f4\u7684\u6570\u91cf\u3002\u53ef\u4ee5\u626b\u4e00\u904d\u5e8f\u5217\uff0c\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4 \\([l_i,r_i]\\) \uff0c\u8ba1\u7b97\u5176\u4ed6\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u88ab\u8be5\u533a\u95f4\u5305\u542b\u7684\u6570\u91cf\u5373\u53ef\u3002</p> <p>\u6811\u4e0a\u8def\u5f84\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u5c06 \\([u,v]\\) \u62c6\u5206\u4e3a \\([u,L],[v,L]\\) \uff0c\u5176\u4e2d \\(L\\) \u4e3a \\(u,v\\) \u7684 LCA \u3002\u8fd9\u6837\u6bcf\u4e2a \\([u,v]\\) \u5c31\u88ab\u62c6\u5206\u4e3a\u4e86\u4e24\u4e2a\u94fe\u4e0a\u7684\u60c5\u51b5\uff0c\u7c7b\u4f3c\u5904\u7406\u5e8f\u5217\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8ba1\u6570\u3002</p> <p>\u7136\u800c\u8fd9\u53ef\u80fd\u5e26\u6765\u4e00\u5b9a\u91cd\u590d\uff1a</p> <ul> <li>\\([u_i,v_i],[u_j,v_j]\\) \u5728\u4e24\u6761\u94fe\u4e0a\u90fd\u6709\u4ea4\uff1a</li> </ul> <p>\u8003\u8651 \\([u,L],[v,L]\\) \u94fe\u4e0a \\(L\\) \u7684\u513f\u5b50 topx, topy \uff0c\u90a3\u4e48\u4e24\u6761\u94fe\u90fd\u6709\u4ea4\u7b49\u4ef7\u4e8e \\(i,j\\) \u7684 topx, topy \u76f8\u540c\u3002\u7528 map \u5b58\u6709\u76f8\u540c topx, topy \u7684 \\([u,v]\\) \u6570\u91cf \\(k\\) \uff0c\u7b54\u6848\u51cf\u53bb \\(\\binom{k}{2}\\) \u5373\u53ef\u3002</p> <ul> <li>\u67d0\u6761\u94fe\u4e0a\u7684\u8d77\u59cb\u70b9\u76f8\u540c\uff1a</li> </ul> <p>\u82e5\u8fd9\u4e2a\u8d77\u59cb\u70b9\u6709 \\(k\\) \u6761\u94fe\uff0c\u90a3\u4e48\u4f1a\u7b97 \\(k^2\\) \u6b21\uff0c\u6211\u4eec\u5e0c\u671b\u7b97 \\(\\binom k2\\) \u6b21\uff0c\u51cf\u53bb\u7b97\u591a\u7684\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n\\log n)\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ll long long\nusing namespace std;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e5+5;\nint n,m,fa[N][20],Log[N],dep[N];\nint a[N],b[N],L[N],siz[N],sum[N];\nll ans;\nvector &lt;int&gt; G[N];\nvoid dfs(int u,int f){\n    dep[u]=dep[f]+1,fa[u][0]=f;\n    for(int x:G[u])if(x!=f)dfs(x,u);\n}\nint lca(int x,int y) {\n    if(dep[x]&lt;dep[y])swap(x,y);\n    while(dep[x]&gt;dep[y]){\n        x=fa[x][Log[dep[x]-dep[y]]];\n    }\n    if(x==y)return x;\n    per(i,18,0){\n        if(fa[x][i]!=fa[y][i]){\n            x=fa[x][i];\n            y=fa[y][i];\n        }\n    }\n    return fa[x][0];\n}\nint Top(int x,int anc){\n    if(x==anc)return -1;\n    per(i,18,0){\n        if(dep[fa[x][i]]&gt;dep[anc])x=fa[x][i];\n    }\n    return x;\n}\nmap &lt;pii,int&gt; mp;\nvoid dfs2(int u,int f,int now){\n    siz[u]=now;\n    for(int v:G[u])if(v!=f){\n        dfs2(v,u,now+sum[v]);\n    }\n}\nvoid init(){\n    Log[0]=-1;\n    rep(i,1,n)Log[i]=Log[i&gt;&gt;1]+1;\n    rep(i,1,18){\n        rep(j,1,n)fa[j][i]=fa[fa[j][i-1]][i-1];\n    }\n}\nint main(){\n    //freopen(\"disrupt.in\",\"r\",stdin);\n    //freopen(\"disrupt.out\",\"w\",stdout);\n    n=read(),m=read();\n    rep(i,1,n-1){\n        int u=read(),v=read();\n        G[u].pb(v),G[v].pb(u);\n    }\n    dfs(1,0);\n    init();\n    rep(i,n,m){\n        a[i]=read(),b[i]=read();\n        L[i]=lca(a[i],b[i]);\n    }\n    rep(i,n,m){\n        int topx=Top(a[i],L[i]),topy=Top(b[i],L[i]);\n        if(topx!=-1){\n            sum[topx]++;\n            ans-=sum[topx];\n        }\n        if(topy!=-1){\n            sum[topy]++;\n            ans-=sum[topy];\n        }\n        if(topx!=-1&amp;&amp;topy!=-1){\n            if(topx&gt;topy)swap(topx,topy);\n            ans-=mp[{topx,topy}];\n            mp[{topx,topy}]++;\n        }\n        //cout&lt;&lt;i&lt;&lt;\" \"&lt;&lt;topx&lt;&lt;\" \"&lt;&lt;topy&lt;&lt;\" \"&lt;&lt;ans&lt;&lt;endl;\n    }\n    dfs2(1,0,0);\n    rep(i,n,m){\n        ans+=siz[a[i]]+siz[b[i]]-2*siz[L[i]];\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20P5243%20%5BUSACO19FEB%5DMoorio%20Kart%20P/","title":"\u9898\u89e3 P5243 [USACO19FEB]Moorio Kart P","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a \\(N\\) \u4e2a\u70b9 \\(M\\) \u6761\u8fb9\u7684\u68ee\u6797\uff0c\u8fb9\u6709\u957f\u5ea6\u3002\u5047\u8bbe\u56fe\u4e2d\u6709 \\(K\\) \u4e2a\u6811\uff0c\u6211\u4eec\u5e0c\u671b\u4ece\u6bcf\u4e2a\u6811\u4e2d\u9009\u53d6\u4e00\u6761\u8def\u5f84\uff0c\u5e76\u7528 \\(K\\) \u6761\u957f\u5ea6\u4e3a \\(X\\) \u7684\u8fb9\u5c06\u5176\u8fde\u6210\u73af\u3002\u95ee\u80fd\u7ec4\u6210\u591a\u5c11\u79cd\u957f\u5ea6\u81f3\u5c11\u4e3a \\(Y\\) \u7684\u73af\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le N\\le 1500,1\\le M\\le N-1,0\\le X,Y\\le 2500\\) .</p> <p>\u77e5\u8bc6\u50a8\u5907\uff1a\u6811\u5f62dp</p> <p>\u9898\u76ee\u96be\u5ea6\uff1a\u7701\u9009/USACO Platinum</p> <p>\u89e3\u6790\uff1a</p> <p>\u53d1\u73b0\u53ef\u4ee5\u5bf9\u6bcf\u68f5\u6811 \\(O(n^2)\\) dfs \u6765\u7edf\u8ba1\u6811\u4e0a\u7684\u8def\u5f84\u957f\u5ea6\u4ee5\u53ca\u8be5\u957f\u5ea6\u7684\u6570\u91cf\u3002\u5408\u5e76\u6bcf\u9897\u6811\u4e0a\u7684\u7b54\u6848\u7c7b\u4f3c\u5377\u79ef\uff0c\u4e5f\u53ef\u4ee5 \\(O(K^2)\\) \u6c42\u51fa\u3002\u5177\u4f53\u5730\uff0c\u8bbe \\(f_{i,0/1}\\) \u4e3a\u603b\u957f\u5ea6\u4e3a \\(i\\) \u7684\u65b9\u6848\u6570/\u957f\u5ea6\u548c\uff0c\\(g_{i,0/1}\\) \u4e3a\u6811\u4e0a\u7684\u957f\u5ea6\u4e3a \\(i\\) \u7684\u8def\u5f84\u6570/\u957f\u5ea6\u548c\uff0c\u6709\uff1a   \u66b4\u529b\u8f6c\u79fb\u5373\u53ef\uff0c\u8003\u8651\u8fd9\u6837\u66b4\u529b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u901a\u8fc7\u3002\u9996\u5148\u6211\u4eec\u53ea\u5173\u6ce8\u603b\u957f\u5ea6\u662f\u5426\u8d85\u8fc7 \\(Y\\) \uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u6240\u6709\u957f\u5ea6 \\(\\ge Y\\) \u7684\u8bb0\u5728\u4e00\u8d77\u3002\u5e76\u4e14\u6bcf\u9897\u6811\u4e0a\u6700\u591a \\(n^2\\) \u4e2a\u4e0d\u540c\u957f\u5ea6\u7684\u8def\u5f84\uff0c\u8bbe\u7b2c \\(i\\) \u9897\u6811\u7684\u5927\u5c0f\u4e3a \\(n_i\\) \u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5219\u4e3a \\(O(\\sum n_i^2+Ymin(Y,n_i^2))=O(NY\\sqrt Y)\\) \uff0c\u5f53 \\(n_1=n_2=\\cdots=\\sqrt Y\\) \u65f6\u53d6\u6700\u5927\u503c\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NY\\sqrt Y)\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2505,P=1e9+7;\nint ecnt,head[N];\nstruct Edge{\n    int to,nxt,w;\n}e[N&lt;&lt;1];\ninline void add(int u,int v,int w){\n    e[++ecnt]={v,head[u],w};head[u]=ecnt;\n}\nint n,m,X,Y,cnt,fa[N],col[N];\nll ans,f[N][2],g[N][2],sum[N][N],tot[N][N];\nint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\nvoid color(int u,int f,int id){//\u5bf9\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u67d3\u8272\n    col[u]=id;\n    for(int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v==f)continue;\n        color(v,u,id);\n    }\n}\nvoid dfs(int u,int f,int len){//\u5355\u4e2a\u6811\u4e0a\u8def\u5f84\u7edf\u8ba1\n    if(f){\n        int c=col[u],l=min(len,Y);\n        sum[c][l]=(sum[c][l]+len)%P;\n        ++tot[c][l];\n    }\n    for(int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v==f)continue;\n        dfs(v,u,len+e[i].w);\n    }\n}\nint main(){\n    //freopen(\"mooriokart.in\",\"r\",stdin);\n    //freopen(\"mooriokart.out\",\"w\",stdout);\n    n=read(),m=read(),X=read(),Y=read();\n    rep(i,1,n)fa[i]=i;\n    rep(i,1,m){\n        int u=read(),v=read(),w=read();\n        add(u,v,w);add(v,u,w);\n        fa[find(u)]=find(v);\n    }\n    rep(i,1,n)if(i==find(i))color(i,0,++cnt);\n    rep(i,1,n)dfs(i,0,0);\n    //dp(\u5377\u79ef\u5408\u5e76\u7b54\u6848)\n    int cur=min(cnt*X,Y);\n    f[cur][0]=1,f[cur][1]=X*cnt;\n    rep(i,1,cnt){\n        rep(j,cur,Y){\n            g[j][0]=f[j][0],g[j][1]=f[j][1];\n            f[j][0]=f[j][1]=0;\n        }\n        rep(j,0,Y){\n            if(!tot[i][j])continue;\n            rep(k,cur,Y){\n                if(!g[k][0])continue;\n                int l=min(j+k,Y);\n                f[l][0]=(f[l][0]+tot[i][j]*g[k][0]%P)%P;\n                f[l][1]=(f[l][1]+sum[i][j]*g[k][0]%P+tot[i][j]*g[k][1])%P;\n            }\n        }\n    }\n    ans=f[Y][1];\n    rep(i,1,cnt-1)ans=ans*i%P;\n    printf(\"%lld\\n\",ans*((P+1)/2)%P);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20P6143%20%5BUSACO20FEB%5DEquilateral%20Triangles%20P/","title":"\u9898\u89e3 P6143 [USACO20FEB]Equilateral Triangles P","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u7ed9\u4e00\u4e2a \\(N\\times N\\) \u7684\u65b9\u9635\uff0c\u91cc\u9762\u6709\u82e5\u5e72\u4e2a\u70b9\uff0c\u95ee\u8fd9\u4e9b\u70b9\u5728\u66fc\u54c8\u987f\u8ddd\u79bb\u610f\u4e49\u4e0b\u80fd\u6784\u6210\u591a\u5c11\u4e2a\u7b49\u8fb9\u4e09\u89d2\u5f62\uff1f</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le N\\le 300\\) .</p> <p>\u77e5\u8bc6\u50a8\u5907\uff1a\u524d\u7f00\u548c\uff0c\u66fc\u54c8\u987f\u8ddd\u79bb</p> <p>\u9898\u76ee\u96be\u5ea6\uff1a\u63d0\u9ad8+/\u7701\u9009-</p> <p>\u89e3\u6790\uff1a</p> <p>\uff08\u66fc\u54c8\u987f\u8ddd\u79bb\u4e0e\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u7684\u4e92\u76f8\u8f6c\u5316\u662f\u5173\u952e\u601d\u60f3\u3002\uff09</p> <p>\u5148\u6784\u9020\u51e0\u4e2a\u7b49\u8fb9\u4e09\u89d2\u5f62\uff0c\u4e0d\u96be\u53d1\u73b0\u6709\u4e00\u6761\u8fb9\u4e00\u5b9a\u4e0e\u5750\u6807\u8f74\u6210 \\(45^\\circ\\) \u5ea6\u89d2\u3002\u56fa\u5b9a\u8fd9\u6761\u8fb9\u627e\u7b2c\u4e09\u70b9\uff0c\u53d1\u73b0\u7b2c\u4e09\u70b9\u4e00\u5b9a\u5728\u4ee5\u8fd9\u6761\u8fb9\u4e3a\u8fb9\u957f\u7684\u6b63\u65b9\u5f62\u4e0a\uff0c\u4e14\u5728\u8fd9\u6761\u8fb9\u7684\u5bf9\u8fb9\u3002\u6bd4\u5982\u5bf9\u4e8e \\(A(0,2),B(2,0)\\) \uff0c\u82e5 \\(C\\) \u5728 \\(AB\\) \u4e0a\u65b9\uff0c\u80fd\u6784\u6210\u7b49\u8fb9\u4e09\u89d2\u5f62\u7684 \\(C\\) \u53ea\u80fd\u5728 \\((4,2),(3,3),(2,4)\\) \u8fd9\u4e9b\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u4ee5\u901a\u8fc7\u66fc\u54c8\u987f\u8ddd\u79bb\u8f6c\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u66f4\u52a0\u65b9\u4fbf\u7684\u5f97\u51fa\u3002</p> <p>\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u5904\u7406\u6bcf\u4e2a\u659c\u7ebf\u4e0a\u7684\u70b9\u6570\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2a\u659c\u8fb9 \\(AB\\) \u90fd\u53ef\u4ee5 \\(O(1)\\) \u7b97\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684 \\(C\\) \u3002\u5bf9\u4e24\u79cd\u659c\u7ebf\u90fd\u8981\u7b97\u4e00\u6b21\uff0c\u540c\u65f6\u4e5f\u8981\u6ce8\u610f\u53bb\u6389\u91cd\u590d\u60c5\u51b5\uff0c\u5269\u4e0b\u7684\u7b80\u5355\u679a\u4e3e\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^3)\\) .</p>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20P7156%20%5BUSACO20DEC%5D%20Cowmistry%20P/","title":"\u9898\u89e3 P7156 [USACO20DEC] Cowmistry P","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u7ed9 \\(N\\) \u4e2a\u533a\u95f4 \\([l_i,r_i]\\) \uff0c\u95ee\u5728\u6240\u6709\u533a\u95f4\u7684\u5e76\u4e2d\u6709\u591a\u5c11\u4e2a\u4e09\u5143\u7ec4 \\((a,b,c)\\) \uff0c\u6ee1\u8db3\uff1a</p> <ul> <li>\\(a,b,c\\) \u4e92\u4e0d\u76f8\u540c .</li> <li>\\(a\\oplus b,a\\oplus c,b\\oplus c\\le K\\) .</li> </ul> <p>\u8f93\u51fa\u5bf9 \\(10^9+7\\) \u53d6\u6a21\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le N\\le 2\\times 10^4,1\\le K\\le 10^9\\) .</p> <p>\u9898\u76ee\u96be\u5ea6\uff1aNOI/NOI+/CTSC</p> <p>\u89e3\u6790\uff1a</p> <p>\u6ca1\u4eba\u5199\u5b98\u65b9\u9898\u89e3\u601d\u8def\u554a\uff0c\u90a3\u6211\u5199\u4e00\u624b</p> <p>\u9996\u5148\u5bf9 \\(K+1\\) \u8fd9\u6837\u5c31\u628a \\(\\le\\) \u8f6c\u5316\u6210\u4e86 \\(&lt;K\\) \u3002\u5b9a\u4e49 \\(P\\) \u4e3a\u6700\u5c0f\u7684 \\(2\\) \u7684\u6b21\u5e42\u4f7f\u5f97 \\(P&gt;K\\) \uff0c\u90a3\u4e48\u663e\u7136 \\((a,b,c)\\) \u5fc5\u987b\u6ee1\u8db3\uff08\u5426\u5219\u4f1a\u6709 \\(&gt;K\\) \u4e14\u4e0d\u4e3a 0 \u7684\u4f4d\u51fa\u73b0\uff09\uff1a   \u63a5\u4e0b\u6765\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ol> <li>\\(\\lfloor\\frac{a}{P/2}\\rfloor=\\lfloor\\frac{b}{P/2}\\rfloor=\\lfloor\\frac{c}{P/2}\\rfloor\\)</li> </ol> <p>\u6b64\u65f6 \\(a\\oplus b\\) \u5728 \\(P/2\\) \u4ee5\u4e0a\u7684\u4f4d\u5747\u4e3a \\(0\\) \uff0c\u663e\u7136\u6ee1\u8db3\u8981\u6c42\uff0c\u7edf\u8ba1\u76f8\u7b49\u7684\u6570\u91cf\u5e76\u5bf9\u7b54\u6848\u52a0\u4e0a \\(\\binom{cnt}{3}\\) \u5373\u53ef\u3002</p> <ol> <li>\u5176\u4ed6\u60c5\u51b5</li> </ol> <p>\u7531\u4e8e \\(P\\) \u4ee5\u4e0a\u7684\u4e8c\u8fdb\u5236\u4f4d\u503c\u90fd\u4e00\u6837\uff0c\u62bd\u5c49\u539f\u7406\u5f97\u51fa\u5fc5\u6709\u4e24\u9879 \\(a,b\\) \u6ee1\u8db3 \\(\\lfloor\\frac{a}{P/2}\\rfloor=\\lfloor\\frac{b}{P/2}\\rfloor\\) \u3002\u4e0d\u59a8\u8003\u8651 \\(\\lfloor\\frac{a}{P/2}\\rfloor=\\lfloor\\frac{b}{P/2}\\rfloor&gt;\\lfloor\\frac{c}{P/2}\\rfloor\\) \u65f6\u7684\u60c5\u51b5\uff0c\u7531\u4e8e\u663e\u7136\u6709 \\(a\\oplus b&lt;P/2&lt;K\\) \uff0c\u53ea\u7528\u8003\u8651\u5bf9\u6bcf\u4e2a \\(c\\) \u6c42\u6240\u6709\u6ee1\u8db3 \\(c\\oplus a&lt;K\\) \u7684 \\(a\\) \u3002</p> <p>\u5177\u4f53\u5730\uff0c\u6709 \\(c\\in[Pt+P/2,Pt+P)\\) \uff0c\u96c6\u5408 \\(S\\) \u4e3a \u6240\u6709 \\(x\\in[Pt,Pt+P/2)\\) \u4e14 \\(x\\oplus c&lt;K\\) \u7684 \\(x\\) \uff0c\u5bf9\u4e8e\u8be5 \\(c\\) \u7684\u7b54\u6848\u5c31\u662f \\(\\binom{|S|}{2}\\) \u3002</p> <p>\u4e0b\u9762\u8003\u8651\u5982\u4f55\u5b9e\u73b0\uff0c\u9996\u5148\u6211\u4eec\u5c06\u6bcf\u4e2a\u539f\u533a\u95f4\u6309\u4e0a\u8ff0\u8ba8\u8bba\u62c6\u4e3a\u957f\u5ea6\u4e3a \\(P\\) \u7684\u6574\u5757\u548c\u4e0d\u5230 \\(P\\) \u7684\u6563\u5757\u3002\u5bf9\u4e8e\u957f\u5ea6\u4e3a \\(P\\) \u7684\u5757\uff0c\u7b54\u6848\u4e3a  \u63a5\u4e0b\u6765\u628a\u6563\u5757\u79bb\u7ebf\u5904\u7406\uff0c</p> <pre><code>void solve(vector &lt;pii&gt; v){\n    int p2=p/2;\n    vector&lt;pii&gt;tot[2];\n    for(auto&amp; t:v){\n        if(t.fi/p2&lt;t.se/p2){\n            tot[0].push_back({t.fi,p2-1});\n            tot[1].push_back({0,t.se-p2});\n        }else\n            tot[t.fi/p2].push_back({t.fi%p2,t.se%p2});\n    }\n    rep(i,0,1){\n        add(ans,c3(totlen(tot[i])));//\u7b2c\u4e00\u7c7b\n        solve2(tot[i],tot[i^1],p2,0);//\u7b2c\u4e8c\u7c7b\n    }\n}\n</code></pre> <p>\u7b2c\u4e00\u7c7b\u7684\u7b54\u6848\u5f88\u597d\u7edf\u8ba1\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u7b2c\u4e8c\u7c7b\u3002\u53ef\u4ee5\u5c06\u7b2c\u4e8c\u7c7b\u5212\u5206\u4e3a\u66f4\u5c0f\u7684\u4e24\u4e2a\u533a\u95f4\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u6837\u7684\u5206\u6cbb\u6700\u591a\u8fdb\u884c \\(O(\\log K)\\) \u5c42\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N\\log K)\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int M=1e9+7,i6=166666668;\nint n,k,p=1;\nll ans;\nll c2(ll x){return 1ll*x*(x-1)/2%M;}\nll c3(ll x){return 1ll*x*(x-1)%M*(x-2)%M*i6%M;}\ninline void add(ll &amp;a,const ll b){a=(a+b)%M;}\ninline ll totlen(const vector&lt;pii&gt;&amp;v){\n    ll len=0;for(auto &amp;t:v)len+=t.se-t.fi+1;\n    return len;\n}\nvoid solve2(const vector&lt;pii&gt;&amp;a,const vector&lt;pii&gt;&amp;b,int block,int cur){\n    //\u57fa\u672c\u60c5\u51b5\n    if(!(int)a.size())return;\n    if(!(int)b.size()){\n        ans=(ans+c2(cur)*totlen(a)%M)%M;\n        return;\n    }\n    vector&lt;pii&gt; des{{0,block-1}};\n    if (b == des) { // b = [0,block)\n        cur =(cur+((block-1)&amp;k))%M;\n        ans=(ans+c2(cur)*totlen(a)%M)%M;\n        return;\n    }\n    //\u7ee7\u7eed\u5f80\u4e0b\u5206\u6cbb\n    vector&lt;pii&gt; A[2], B[2];\n    auto ad = [&amp;](vector&lt;pii&gt;&amp; v,pii p) {\n        p.fi=max(p.fi,0),p.se=min(p.se,block/2-1);\n        if (p.fi &gt; p.se) return;\n        v.push_back(p);\n    };\n    for (auto&amp; t: a) ad(A[0],t), ad(A[1],{t.fi-block/2,t.se-block/2});\n    for (auto&amp; t: b) ad(B[0],t), ad(B[1],{t.fi-block/2,t.se-block/2});\n    if (k&amp;(block/2)) {\n        for(int i=0; i&lt;2; ++i) solve2(A[i],B[i^1],block/2,(cur+totlen(B[i]))%M);\n    } else {\n        for(int i=0; i&lt;2; ++i) solve2(A[i],B[i],block/2,cur);\n    }\n}\n//\u5904\u7406a/P\u76f8\u7b49\u7684\u6563\u5757\nvoid solve(vector &lt;pii&gt; v){\n    int p2=p/2;\n    vector&lt;pii&gt;tot[2];\n    for(auto&amp; t:v){\n        if(t.fi/p2&lt;t.se/p2){\n            tot[0].push_back({t.fi,p2-1});\n            tot[1].push_back({0,t.se-p2});\n        }else\n            tot[t.fi/p2].push_back({t.fi%p2,t.se%p2});\n    }\n    rep(i,0,1){\n        add(ans,c3(totlen(tot[i])));//\u7b2c\u4e00\u7c7b\n        solve2(tot[i],tot[i^1],p2,0);//\u7b2c\u4e8c\u7c7b\n    }\n}\nint main(){\n    n=read(),k=read();\n    ++k;while(p&lt;=k)p&lt;&lt;=1;\n    k=k-p/2;\n    ll sum=(p*c2(k)%M+2*c3(p/2)%M)%M;//\u6574\u5757\u7b54\u6848\u76f4\u63a5\u7edf\u8ba1\n    map&lt;int,vector&lt;pii&gt;&gt;todo;\n    rep(i,1,n){\n        int l=read(),r=read();\n        int LL=l/p,RR=r/p;\n        if(LL!=RR){\n            add(ans,sum*(RR-LL-1)%M);\n            todo[LL].push_back({l%p,p-1});\n            todo[RR].push_back({0,r%p});\n        }else todo[LL].push_back({l%p,r%p});\n    }\n    for(auto&amp; t:todo)solve(t.se);\n    printf(\"%lld\\n\",ans%M);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20P7295%20%5BUSACO21JAN%5D%20Paint%20by%20Letters%20P/","title":"\u9898\u89e3 P7295 [USACO21JAN] Paint by Letters P","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a \\(n\\times m\\) \u7684\u7f51\u683c\u56fe\uff0c\u6bcf\u4e2a\u683c\u5b50\u6709\u4e00\u4e2a\u989c\u8272\uff0c\u82e5\u76f8\u90bb\u683c\u5b50\u989c\u8272\u76f8\u540c\u5219\u8fde\u4e00\u6761\u8fb9\u3002\u4e00\u5171\u6709 \\(q\\) \u4e2a\u8be2\u95ee\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee \\((x_1,y_1,x_2,y_2)\\) \uff0c\u5e0c\u671b\u6c42\u51fa\u8be5\u5b50\u77e9\u5f62\u4e2d\u8fde\u901a\u5757\u7684\u6570\u91cf\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le n,m,q\\le 1000,1\\le x_1\\le x_2\\le N,1\\le y_1\\le y_2\\le M\\) .</p> <p>\u77e5\u8bc6\u50a8\u5907\uff1a\u5e73\u9762\u56fe\u6b27\u62c9\u5b9a\u7406</p> <p>\u5b9a\u4e49 \\(F\\) \u4e3a \\(G\\) \u7684\u9762\u6570\uff0c\\(E\\) \u4e3a\u8fb9\u6570\uff0c\\(V\\) \u4e3a\u9876\u70b9\u6570\uff0c\\(C\\) \u4e3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\uff0c\u6211\u4eec\u6709  </p> <p>\u9898\u76ee\u96be\u5ea6\uff1a\u7701\u9009+/USACO Platinum+</p> <p>\u89e3\u6790\uff1a</p> <p>\u4e00\u9053\u7ed3\u8bba\u9898...\u6ca1\u6709\u5b66\u8fc7\u76f8\u5173\u77e5\u8bc6\u70b9\u53ea\u80fd\u653e\u5f03\uff0c\u4e86\u89e3\u7684\u8bdd\u5c31\u4e0d\u7b97\u592a\u96be\u3002</p> <p>\u7531\u4e0a\u8ff0\u5b9a\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u6b63\u5e38\u8fde\u8fb9\u6c42\u8fde\u901a\u5757\u6570\uff0c\u4e5f\u53ef\u4ee5\u8003\u8651\u4e0b\u9762\u8fd9\u79cd\u5efa\u56fe\u65b9\u6cd5\uff0c\u601d\u8def\u5927\u9898\u76f8\u540c\u3002</p> <p>\u82e5\u76f8\u90bb\u4e24\u683c\u989c\u8272\u4e0d\u540c\uff0c\u5219\u5728\u8fb9\u754c\u5904\u8fde\u4e00\u6761\u8fb9\u3002\u4f8b\u5982\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684 \\(3\\times 3\\) \u7684\u753b\u5e03\uff0c</p> <pre><code>AAB\nBBA\nBBB\n</code></pre> <p>\u5efa\u56fe\u540e\u5219\u4f1a\u53d8\u4e3a</p> <pre><code>.-.-.-.\n|   | |\n.-.-.-.\n|   | |\n. . .\u2014.\n|     |\n.-.-.-.\n</code></pre> <p>\u6b64\u65f6\u6709  \u4e0d\u96be\u53d1\u73b0\u9700\u8981\u53bb\u6389\u56fe\u5f62\u5916\u9762\u7684\u90a3\u9762\uff0c\u4e8e\u662f\u7b54\u6848\u4e3a \\(F-1=E-V+C\\) . \u800c \\(E\\) \u53ef\u4ee5\u5efa\u56fe\u540e\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u6c42\u51fa\uff0c\\(V\\) \u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5982\u4f55\u5904\u7406 \\(C\\) .</p> <p>\u6807\u8bb0\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u6700\u5de6\u4e0a\u7684\u70b9\u4e3a\u7279\u6b8a\u70b9\uff0c\u7136\u540e\u8be2\u95ee\u4e2d\u7684\u77e9\u5f62\u5185\u6807\u8bb0\u70b9\u7684\u4e2a\u6570\u4e5f\u53ef\u4ee5\u4e8c\u7ef4\u524d\u7f00\u548c\u89e3\u51b3\u3002\u7136\u800c\u8fd9\u4e5f\u7b97\u5165\u4e86\u8fde\u901a\u5206\u91cf\u4e0d\u5b8c\u5168\u5c5e\u4e8e\u8be5\u533a\u57df\uff0c\u800c\u6807\u8bb0\u70b9\u5c5e\u4e8e\u8be5\u533a\u57df\u7684\u70b9\u3002\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u8fde\u901a\u5206\u91cf\u4e00\u5b9a\u8fc7\u8fb9\u754c\u4e0a\u67d0\u4e2a\u70b9\uff0c\u904d\u5386\u8fb9\u754c\u5e76\u4ece \\(C\\) \u4e2d\u51cf\u53bb\u5b83\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(nm+(n+m)q)\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define per(i,a,b) for(int i=(a);i&gt;=(b);--i)\n#define pii pair&lt;int,int&gt;\n#define fi first\n#define se second\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=2e3+5,d[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\nint n,m,q;\nchar col[N][N];\npii spe[N][N];\nint s[N][N],v[N][N],h[N][N];\nbool in(int x,int y,int nx,int ny){\n    if(nx&lt;0||ny&lt;0||nx&gt;n+1||ny&gt;m+1)return 0;\n    if(nx==x+1)return col[x][y]!=col[x][y-1];\n    if(nx==x-1)return col[nx][y]!=col[nx][y-1];\n    if(ny==y+1)return col[x][y]!=col[x-1][y];\n    return col[x][ny]!=col[x-1][ny];\n}\nvoid dfs(int x,int y){//\u5efa\u56fe\n    rep(i,0,3){\n        int nx=x+d[i][0],ny=y+d[i][1];\n        if(in(x,y,nx,ny)){//\u5982\u679c\u4e24\u70b9\u95f4\u6709\u8fb9\n            if(nx==x+1)v[x][y]=1;\n            else if(nx==x-1)v[nx][y]=1;\n            else if(ny==y+1)h[x][y]=1;\n            else h[x][ny]=1;\n            if(!spe[nx][ny].fi){\n                spe[nx][ny]=spe[x][y];\n                dfs(nx,ny);\n            }\n        }\n    }\n}\nint sum(int f[N][N],int x,int y,int a,int b){\n    return f[a][b]+f[x][y]-f[x][b]-f[a][y];\n}\nbool flg[N][N];\nbool out(int i,int j,int x,int y,int a,int b){\n    int nx=spe[i][j].fi,ny=spe[i][j].se;\n    if(nx&gt;x&amp;&amp;nx&lt;=a&amp;&amp;ny&gt;y&amp;&amp;ny&lt;=b&amp;&amp;!flg[nx][ny]){\n        flg[nx][ny]=1;\n        return 1;\n    }\n    return 0;\n}\nvoid rem(int x,int y){\n    int nx=spe[x][y].fi,ny=spe[x][y].se;\n    flg[nx][ny]=0;\n}\nint main(){\n    n=read(),m=read(),q=read();\n    rep(i,1,n){\n        scanf(\"%s\",col[i]+1);\n    }\n    rep(i,1,n+1)rep(j,1,m+1){\n        if(!spe[i][j].fi){\n            s[i][j]=1;\n            spe[i][j]={i,j};\n            dfs(i,j);\n        }\n    }\n    rep(i,1,n+1)rep(j,1,m+1){\n        s[i][j]+=s[i][j-1];\n        h[i][j]+=h[i][j-1];\n        v[i][j]+=v[i][j-1];\n    }\n    rep(i,1,n+1)rep(j,1,m+1){\n        s[i][j]+=s[i-1][j];\n        h[i][j]+=h[i-1][j];\n        v[i][j]+=v[i-1][j];\n    }\n    while(q--){\n        int x=read(),y=read(),a=read(),b=read();\n        //\u8fd9\u91cc E \u548c V \u5747\u53bb\u6389\u4e86\u5916\u9762\u4e00\u5708\uff0c\u7b54\u6848\u4e0d\u53d8\n        int E=sum(v,x-1,y,a,b)+sum(h,x,y-1,a,b);\n        int V=(a-x)*(b-y),C=sum(s,x,y,a,b);\n        rep(i,x,a+1){\n            if(out(i,b+1,x,y,a,b))C--;\n            if(out(i,y,x,y,a,b))C--;\n        }\n        rep(i,y,b+1){\n            if(out(a+1,i,x,y,a,b))C--;\n            if(out(x,i,x,y,a,b))C--;\n        }\n        rep(i,x,a+1){\n            rem(i,b+1);rem(i,y);\n        }\n        rep(i,y,b+1){\n            rem(x,i);rem(a+1,i);\n        }\n        //printf(\"%d %d %d\\n\",E,V,C);\n        printf(\"%d\\n\",E-V+C+1);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20P7416%20%5BUSACO21FEB%5D%20No%20Time%20to%20Dry%20P/","title":"\u9898\u89e3 P7416 [USACO21FEB] No Time to Dry P","text":"<p>\u8003\u8651\u4e00\u6bb5\u533a\u95f4 \\([l,r]\\) \u6700\u591a\u8981\u6d82 \\(r-l+1\\) \u7b14\uff0c\u7136\u800c\u6709\u4e9b\u7b14\u662f\u201c\u591a\u4f59\u7684\u201d\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u5bf9 \\((x,y)\\) \u6ee1\u8db3 \\(A_x=A_y&lt;\\min_{x&lt;i&lt;y}A_i\\) \uff08\u4e00\u5bf9\u76f8\u540c\u989c\u8272\u4e14\u4e2d\u95f4\u7684\u989c\u8272\u66f4\u6df1\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5c11\u6d82\u4e00\u7b14\u3002\u90a3\u4e48\u8bb0\u533a\u95f4\u5185\u7684 \\((x,y)\\) \u5bf9\u4e2a\u6570\u4e3a\\(cnt\\)\uff0c\u6240\u6c42\u7684\u7b54\u6848\u5c31\u662f \\(r-l+1-cnt\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u627e\u51fa\u6240\u6709\u8fd9\u6837\u7684\u70b9\u5bf9\uff0c\u6808\u5185\u5143\u7d20\u5355\u8c03\u9012\u589e\u3002\u5982\u679c\u65b0\u63d2\u5165\u7684\u5143\u7d20\u548c\u6808\u9876\u5143\u7d20\u76f8\u7b49\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u4e00\u5bf9\u7b26\u5408\u8981\u6c42\u7684\u70b9\uff0c\u66f4\u65b0 \\(cnt\\) \u548c\u6808\u9876\u3002\u6700\u540e\u5bf9\u8fd9\u4e9b\u8be2\u95ee\u6309\u7167\u53f3\u7aef\u70b9\u5750\u6807\u6392\u5e8f\uff0c \u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u4e00\u6bb5\u524d\u7f00\u7684 \\(cnt\\) \uff0c\u79bb\u7ebf\u5904\u7406\u6bcf\u7ec4\u8be2\u95ee\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O((N+Q)\\log N)\\) \u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define f first\n#define s second\n#define pi pair&lt;int,int&gt;\nusing namespace std;\nconst int N=2e5+5;\nint n,q,a[N],stk[N],top,ans[N],bit[N];\ninline void I(int x){for(;x&lt;=n;x+=(x&amp;-x))bit[x]++;}\ninline int Q(int x){int res=0;for(;x;x-=(x&amp;-x))res+=bit[x];return res;}\nvector &lt;pi&gt; query[N];\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;q);\n    for(int i=1;i&lt;=n;i++)scanf(\"%d\",&amp;a[i]);\n    for(int i=1,l,r;i&lt;=q;i++){\n        scanf(\"%d%d\",&amp;l,&amp;r);\n        query[r].push_back({l,i});\n    }\n    for(int i=1;i&lt;=n;i++){\n        while(top&amp;&amp;a[stk[top]]&gt;a[i])top--;\n        if(top&amp;&amp;a[stk[top]]==a[i]){\n            I(stk[top]);\n            stk[top]=i;\n        }else stk[++top]=i;\n        if(query[i].size()){\n            for(int j=0;j&lt;query[i].size();j++){\n                pi t=query[i][j];\n                ans[t.s]=i-t.f+1-(Q(i)-Q(t.f-1));\n            }\n        }\n    }\n    for(int i=1;i&lt;=q;i++)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n</code></pre>"},{"location":"Old%20Posts/%E9%A2%98%E8%A7%A3%20%5B%E7%9C%81%E9%80%89%E8%81%94%E8%80%83%202021%20A%3AB%20%E5%8D%B7%5D%20%E6%BB%9A%E6%A6%9C/","title":"\u9898\u89e3 [\u7701\u9009\u8054\u8003 2021 A:B \u5377] \u6eda\u699c","text":"<p>\u9898\u76ee\u5927\u610f\uff1a</p> <p>\u7ed9\u5b9a \\(n,m\\) \u548c\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(a_i\\) \u3002\u95ee\u6709\u591a\u5c11\u79cd\u6392\u5217 \\(p_n\\) \uff0c\u4f7f\u5f97\u5b58\u5728\u6570\u7ec4 \\(b_i\\) \uff0c\u6ee1\u8db3</p> <ul> <li>\\(b_i\\) \u5355\u8c03\u4e0d\u51cf</li> <li>\\(\\sum_{i=1}^n b_i=m\\)</li> <li>\u4f9d\u6b21\u5bf9 \\(a_{p_i}\\) \u52a0\u4e0a \\(b_i\\) \uff0c\u6ee1\u8db3\u64cd\u4f5c\u540e \\(a_{p_i}\\) \u4e3a\u6700\u5927\u5143\u7d20\u3002</li> </ul> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le n\\le 13,1\\le m\\le 500,0\\le a_i\\le 10^4\\) .</p> <p>\u77e5\u8bc6\u50a8\u5907\uff1a\u72b6\u6001\u538b\u7f29\uff0c\u5dee\u5206</p> <p>\u9898\u76ee\u96be\u5ea6\uff1a\u7701\u9009/USACO Platinum</p> <p>\u89e3\u6790\uff1a</p> <p>\uff08\u4ece\u6570\u636e\u8303\u56f4\u4e0d\u96be\u60f3\u5230\u8fd9\u662f\u72b6\u538bdp\uff0c\u90a3\u4e48\u5982\u4f55\u8bbe\u8ba1\u72b6\u6001\u548c\u4f18\u5316dp\u5c31\u662f\u89e3\u9898\u7684\u5173\u952e\u3002\uff09</p> <p>\u9996\u5148\u60f3\u5230\u8fd9\u6837\u7684 dp \uff0c \\(f_{S,i,j}\\) \u4e3a\u524d\u9762\u9009\u53d6\u7684\u72b6\u6001\u4e3a \\(S\\) \uff0c\u4e0a\u4e00\u4e2a\u6570\u4e3a \\(i\\) \uff0c\u5f53\u524d\u7684 \\(\\sum b_i\\) \u4e3a \\(j\\) \u3002\u7136\u800c\u4e3a\u4e86\u4fdd\u8bc1 \\(b_i\\) \u7684\u5355\u8c03\u6027\uff0c\u6211\u4eec\u8fd8\u8981\u52a0\u4e00\u7ef4 \\(k\\) \u7528\u6765\u8bb0\u5f55\u4e0a\u4e00\u4e2a \\(b_i\\) \u7684\u503c\u3002\u6ce8\u610f\u5230\u6211\u4eec\u8981\u6c42\u6392\u5217\u7684\u65b9\u6848\u6570\uff0c\u4e8e\u662f\u53ef\u4ee5\u8d2a\u5fc3\u53d6 \\(b_i\\) \u6765\u5c3d\u91cf\u6ee1\u8db3\u6027\u8d28\u3002\u66b4\u529b\u8f6c\u79fb\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(2^nn^2m^2)\\) \u3002</p> <p>\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a dp \u751a\u81f3\u4e0d\u5982\u8d2a\u5fc3\u66b4\u529b\u8dd1\u5168\u6392\u5217\uff0c\u540e\u8005\u80fd\u5f97\u5230 60 pts \u7684\u597d\u6210\u7ee9</p> <p>\u8003\u8651\u4f18\u5316 dp \u72b6\u6001\uff0c\u800c \\(S,i,j\\) \u5bf9\u4e8e\u6211\u4eec\u8003\u8651\u8f6c\u79fb\u662f\u5fc5\u987b\u7684\uff0c\u6240\u4ee5\u60f3\u53bb\u6389 \\(k\\) \u8fd9\u4e00\u7ef4\u3002\\(b_i\\) \u5355\u8c03\u4e0d\u51cf\u7684\u6027\u8d28\u63d0\u793a\u4e86\u5dee\u5206\uff0c\u8fd0\u7528\u7684\u601d\u60f3\u548c\u4e0b\u9762\u8fd9\u9053\u9898\u7c7b\u4f3c\u3002</p> <p>CF626F Group Projects</p> <p>\u4e8e\u662f\u8bbe \\(d_i=b_i-b_{i-1}\\ge 0\\) \uff0c\u6709 \\(d_i=\\max(a_{p_{i-1}}-a_{p_i},0)\\) \uff0c\u5e76\u4e14   \u8f6c\u5316\u540e\uff0c\u4ee3\u7801\u5b9e\u73b0\u5c31\u76f8\u5bf9\u7b80\u5355\u4e86\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(2^nn^2m)\\) .</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a);i&lt;=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=14,M=505;\nint n,m,a[N],c[N][N],ppc[1&lt;&lt;N],id[1&lt;&lt;N],mx;\nll ans,f[1&lt;&lt;N][N][M];\nint main(){\n    n=read(),m=read();\n    rep(i,1,n){\n        a[i]=read();\n        if(a[i]&gt;a[mx])mx=i;\n        id[1&lt;&lt;(i-1)]=i;\n    }\n    rep(i,1,n)rep(j,1,n){\n        c[i][j]=max(0,a[i]-a[j]+(i&lt;j));//\u6ce8\u610f\u7f16\u53f7\u5c0f\u7684\u961f\u4f0d\u6392\u540d\u9760\u524d\n    }\n    rep(i,1,n){\n        int sum=n*(a[mx]-a[i]+(mx&lt;i));\n        if(sum&lt;=m)f[1&lt;&lt;(i-1)][i][sum]=1;\n    }\n    int up=(1&lt;&lt;n)-1;\n    rep(i,1,up)ppc[i]=ppc[i&gt;&gt;1]+(i&amp;1);\n    rep(S,1,up){\n        for(int t=S;t;t-=t&amp;-t){\n            int pos=id[t&amp;-t];\n            rep(sum,0,m)rep(i,1,n){\n                if((S&gt;&gt;(i-1))&amp;1)continue;\n                int k=sum+(n-ppc[S])*c[pos][i];\n                if(k&lt;=m)f[S|1&lt;&lt;(i-1)][i][k]+=f[S][pos][sum];\n            }\n        }\n    }\n    rep(i,1,n)rep(j,0,m)ans+=f[up][i][j];\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"Physics/Binet%20Equation/","title":"Binet Equation","text":""},{"location":"Physics/Binet%20Equation/#binet-equation","title":"Binet Equation","text":"<p>The shape of an orbit is often described in terms of relative distance \\(r\\) as a function of \\(\\theta\\) . By Binet Equation, we can solve for the force in terms of the function \\(u(\\theta)\\) , where \\(u = \\frac{1}{r}, h = L/m\\) is the special angular momentum. </p> \\[ F=-mh^2u^2(\\frac{d^2u}{d\\theta^2}+u) \\]"},{"location":"Physics/Binet%20Equation/#derivation","title":"Derivation","text":"<p>Newton's Second law for purely central force is</p> \\[ F(r)=m(\\ddot{r}-r\\dot{\\theta}^2) \\] <p>The conservation of momentum requires that</p> \\[ r^2\\dot{\\theta}=h=\\text{constant} \\] <p>Rewrite the derivative of \\(r\\) with respect to time as derivatives of \\(u=1/r\\) with respect to angle:</p> \\[ \\frac{du}{d\\theta}=\\frac{d}{dt}\\bigg(\\frac1r\\bigg)\\frac{dt}{d\\theta}=\\frac{-\\dot{r}}{r^2\\dot{\\theta}}=-\\frac{\\dot{r}}{h} \\] \\[ \\frac{d^2u}{d\\theta^2}=\\frac{d}{d\\theta}\\bigg(-\\frac{\\dot{r}}{h}\\bigg)=-\\frac{1}h\\frac{d\\dot{r}}{dt}\\frac{dt}{d\\theta}=-\\frac{\\ddot{r}}{h\\dot{\\theta}}=-\\frac{\\ddot{r}}{h^2u^2} \\] <p>Thus,</p> \\[ \\dot{r}=-h\\frac{du}{d\\theta} \\] \\[ \\ddot{r}=-h^2u^2\\frac{d^2u}{d\\theta^2} \\] <p>Replace it back into the original equation for our central force, we get the Binet Equation as desired.</p>"},{"location":"Physics/F%3Dma%20Guide/","title":"F=ma Guide","text":"<p>The syllabus is inspired by the video F=ma Complete Guide. First, there are some helpful things to know about before taking the F=ma exam:</p> <ul> <li>75 minutes, 25 questions</li> <li>Calculators are allowed</li> <li>5 choices per question</li> <li>1 point per correct question, no penalty for guessing.</li> <li>Score 14-18 to qualify for USAPhO</li> <li>400 out of 6000 qualify</li> <li>Average score = 8/25</li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#math","title":"Math","text":"<p>Below are some math prerequisites ranked based on their importance in F=ma:</p>"},{"location":"Physics/F%3Dma%20Guide/#vectors","title":"Vectors","text":"<p>Vectors are very important math tools in physics. We can see most of the physical quantities, like force, displacement, velocity, etc., as vectors.</p> <ul> <li>Vector addition: \\((x_1,y_1,z_1)+(x_2,y_2,z_2)=(x_1+x_2,y_1+y_2,z_1+z_2)\\)</li> <li>Magnitude of a vector satisfies Pythagorean theorem,  so for \\(v_1=(x_1,y_1,z_1)\\), \\(|v_1|=\\sqrt{x_1^2+y_1^2+z_1^2}\\)</li> <li>We can express a 2D-vector as its magnitude and its direction.</li> <li>Dot product: \\((x_1,y_1,z_1)\\cdot (x_2,y_2,z_2)=x_1x_2+y_1y_2+z_1z_2\\), it also satisfies distributivity, so that \\(a\\cdot (b+c)=a\\cdot b + a\\cdot c\\)</li> <li>\\(v_1\\cdot v_2=|v_1||v_2|\\cos\\theta\\), where \\(\\theta\\) is the angle between to vectors.</li> <li>Cross product: \\((x_1,y_1,z_1)\\times (x_2,y_2,z_2)=(y_1z_2-y_2z_1,z_1x_2-z_2x_1,x_1y_2-x_2y_1)\\)</li> <li>\\(|v_1\\times v_2|=|v_1||v_2|\\sin\\theta\\)</li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#trigonometry","title":"Trigonometry","text":"<ul> <li>\\(\\sin(\\alpha\\pm \\beta) =\\sin\\alpha\\cos\\beta\\pm\\cos\\alpha\\sin\\beta\\)</li> <li>\\(\\cos(\\alpha\\pm\\beta)=\\cos\\alpha\\cos\\beta\\mp\\sin\\alpha\\sin\\beta\\)</li> <li>\\(\\tan(\\alpha\\pm\\beta)=\\dfrac{\\tan\\alpha\\pm\\tan\\beta}{1\\mp\\tan\\alpha\\tan\\beta}\\)</li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#basic-calculus","title":"Basic Calculus","text":"<p>You don't need to know this to solve 95% of F=ma problems, but it could be helpful in some problems:</p> <ul> <li>\\((x^n)'= nx^{n-1},(\\sin x)'=-\\cos x,(\\cos x)'=\\sin x,(e^x)'=e^x,(\\ln x)'=1/x\\)</li> <li>\\((f+g)'=f'+g'\\)</li> <li>\\((f\\cdot g)'=f\\cdot g'+f'\\cdot g\\)</li> <li>\\((f/g)'=(f'\\cdot g-g'\\cdot f)/g^2\\)</li> <li>\\(f(g(x))'=f'(g(x))\\times g'(x)\\) or simply \\(\\dfrac{dy}{dx}=\\dfrac{dy}{du}\\dfrac{du}{dx}\\)</li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#taylor-series","title":"Taylor series","text":"\\[ F(x)=F(x_0)+\\sum F^{(n)}(x_0)(x-x_0)^n/n! \\] <p>In cases when \\(x-x_0\\ll 1\\), we can take linear approximation:</p> \\[ F(x)=F(x_0)+F'(x_0)(x-x_0) \\] <p>Some useful examples:</p> \\[\\sin x= x,\\cos x = 1-x^2/2,e^x=1+x,\\ln(1+x)=x,(1+x)^n=1+nx\\]"},{"location":"Physics/F%3Dma%20Guide/#dimensional-analysis","title":"Dimensional Analysis","text":"<p>Dimensional Analysis is very useful in both physics and engineering. It is the analysis of the relationships between different physical quantities (e.g acceleration, pressure, velocity, force) by identifying their base quantities (e.g. length, mass, time) and their units (meters, kilograms, seconds). It is important to remember how units are related through formulas!</p> <p>For example, in kinematics, we use the equations of motion to describe the motion of an object. One of the equations is:</p> \\[ x = x_0 + v_0t + (1/2)at^2 \\] <p>Where \\(x\\) is the final position of the object, \\(x_0\\) is the initial position, \\(v_0\\) is the initial velocity, \\(t\\) is the time, and \\(a\\) is the acceleration.</p> <p>We can use dimensional analysis to check that the units of the different terms in the equation are consistent. The units of \\(x\\), \\(x_0\\) are length (e.g. meters), the unit of \\(v_0\\) is length over time (e.g. meters per seconds), the units of \\(t\\) is time (e.g. seconds), and the units of \\(a\\) are length per time squared (e.g. meters per second squared).</p> <p>So we can check that the equation is dimensionally consistent by making sure that the units on both sides of the equation are the same.  On both sides of the equation, we have length units, which means that the equation is dimensionally consistent and it's a correct equation of motion.</p>"},{"location":"Physics/F%3Dma%20Guide/#error-propagation","title":"Error Propagation","text":"<p>In statistics, propagation of uncertainty (or propagation of error) is the effect of variables' uncertainties on the uncertainty of a function based on them.</p> <p>The uncertainty u can be expressed in a number of ways. e.g. the absolute error \\(\\delta x\\) , the relative error \\(\\delta x/x\\).</p> <p>If \\(x\\) has uncertainty (error) \\(\\delta x\\) , then \\(cx\\) has uncertainty \\(c\\delta x\\) .</p> <p>If \\(x\\) and \\(y\\) have independent random errors \\(\\delta x\\) and \\(\\delta y\\) , then the error in \\(z=x+y\\) is</p> \\[ \\delta z=\\sqrt{\\delta x^2+\\delta y^2} \\] <p>the error in \\(z=x\\times y\\) or \\(z=x/y\\) is:</p> \\[ \\frac{\\delta z}{z}=\\sqrt{(\\frac{\\delta x}{x})^2+(\\frac{\\delta y}{y})^2} \\] <p>If \\(z=f(x)\\) for some function \\(f\\), then</p> \\[ \\delta z=|f'(x)|\\delta x \\] <p>Thus, \\(x^n\\) has relative uncertainty:</p> \\[ \\delta(x^n)/x^n=|n|\\delta x/x \\] <p>Practice problems: 2018AP12,2018AP25,2019AP11,2019AP16,2019BP18,2021P8,2020AP23,2020BP25</p> <p>Challenge problem:2019BP25</p>"},{"location":"Physics/F%3Dma%20Guide/#kinematics","title":"Kinematics","text":"<p>All formulas in kinematics is essentially just:</p> \\[ v=\\dfrac{dx}{dt},a=\\dfrac{dv}{dt}=\\dfrac{d^2x}{dt^2} \\] <p>If you have some knowledge of calculus, then you don't even need to memorize any other formulas! But I will still put some useful formulas in constant acceleration motion below:</p> <ul> <li>The relationship between initial and final velocity: \\(v_f=v_0+at,v_f^2-v_0^2=2ax\\)</li> <li>finding distance: \\(x=v_0t+\\frac 12at^2,x=(v_0+v_f)t/2\\)</li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#projectile-motion","title":"Projectile Motion","text":"<p>In projectile motion, the horizontal motion and the vertical motion are independent of each other; that is, neither motion affects the other. When we analyze these problems, we try to separate the \\(x\\) and \\(y\\) components, set the equations up, solve them separately and combine our answers.</p> <p>Here are some useful formulas to memorize, but make sure you do know how to derive them! However, what usually matters more is how well you understand them instead of memorization.</p> <p>Time of flight</p> \\[ t=\\dfrac{2v_0\\sin\\theta}g \\] <p>Maximum height reached</p> \\[ y_{max}=\\dfrac{v_0^2\\sin^2\\theta}{2g} \\] <p>Horizontal range</p> \\[ R=\\dfrac{v_0^2\\sin(2\\theta)}{g} \\] <p>Derivation</p> <p>Let the projectile be launched with an initial velocity \\(v_0\\) at angle \\(\\theta\\) with respect to the horizontal surface, then its \\(x\\) and \\(y\\) components will be:</p> \\[ v_{0x}=v_0\\cos\\theta,v_{0y}=v_0\\sin\\theta \\] <p>The object reaches the highest point when its \\(v_y\\) gets to zero. Thus:</p> \\[ t=v_{0y}/g,y_{max}=v_{0y}t-\\frac12gt^2=\\frac{v_{0y}^2}{2g}=\\dfrac{v_0^2\\sin^2\\theta}{2g} \\] <p>When reaching the farthest point in \\(x\\) direction, the object falls on the ground, by symmetry we know that this process takes twice the time of reaching the highest point, so:</p> \\[ R=v_{0x}\\times 2t=\\frac{2v_{0x}v_{0y}}{g}=\\frac{v_0^2\\times 2\\cos\\theta\\sin\\theta}{g}=\\frac{v_0^2\\sin(2\\theta)}{g} \\] <p>The last step is done with double angle formula \\(2\\cos\\theta\\sin\\theta =\\sin(2\\theta)\\) .</p> <p>When we are throwing an object up to a ramp with angle \\(\\phi\\), things will be more complicated. In this case, we can think of the projectile motion as a quadratic function and solve for the intersection. An alternative solution would be shifting the axis of our plane so that the \\(x\\) axis is the ramp and \\(y\\) axis perpendicular to it. </p>"},{"location":"Physics/F%3Dma%20Guide/#forces-and-newtons-laws","title":"Forces and Newton's Laws","text":"<p>Common forces that you need to consider in your free body diagram:</p> <ul> <li>Gravitational force \\(mg\\)</li> <li>Spring force \\(-kx\\)</li> <li>Centripetal force \\(mv^2/r\\)</li> <li>normal force \\(N\\)</li> <li>friction force \\(f\\le \\mu N\\) opposes the motion of the body</li> </ul> <p>Some common models that you want to be familiar with:</p> <ul> <li>inclined plane\uff1a\\(N=mg\\sin\\theta,f=\\mu N,F_x=mg\\cos\\theta-\\mu mg\\sin\\theta\\)</li> <li>rolling without slipping \\(v=\\omega r\\)</li> <li>tension \\(T\\) is always along the direction of rope</li> </ul> <p>We can focus on these relations to set up our equations:</p> <ul> <li>force balance \\(F_{net}=ma\\)</li> <li>torque balance \\(\\tau = I\\alpha\\)</li> <li>Conservation of momentum &amp; angular momentum &amp; energy</li> </ul> <p>If the system consists of mass points \\(m_i\\):</p> <ul> <li>coordinate of center of mass \\(\\vec{r_c}=\\sum m_i\\vec{r_i}/\\sum m_j\\)</li> <li>total momentum \\(\\vec{P}=\\sum m_i\\vec{v_i}\\)</li> <li>total angular momentum \\(\\vec{L}=\\sum m_i\\vec{r_i}\\times \\vec{v_i}\\)</li> <li>kinetic energy \\(K=\\sum m_iv_i^2/2\\)</li> </ul> <p>In the frame \\(S'\\) where the mass center's velocity is \\(\\vec{v_c}\\):</p> \\[\\vec{L}=\\vec{L_c}+M\\sum \\vec{r_c}\\times\\vec{v_c},K=K_c+\\dfrac12Mv_c^2,\\vec{P}=\\vec{P_c}+M\\vec{v_c}\\]"},{"location":"Physics/F%3Dma%20Guide/#elastic-collision","title":"Elastic Collision","text":"<p>For two objects with initial velocity \\(v_1,v_2\\) and mass \\(m_1,m_2\\), after elastic collision their mass.</p> \\[ v_1'=\\dfrac{m_1-m_2}{m_1+m_2}v_1+\\dfrac{2m_2}{m_1+m_2}v_2 \\] <p>Derivation</p> <p>By conservation of momentum, our center of mass moves at a constant velocity:</p> \\[ v_c=\\frac{m_1v_1+m_2v_2}{m_1+m_2} \\] <p>We will work at the frame of reference where the center of mass is at rest. In this frame, our total momentum is zero! Thus \\(p_1'+p_2'=p_1+p_2=0\\). By conservation of energy, we also have:</p> \\[ \\frac12m_1v_1'^2+\\frac12m_2v_2'^2=\\frac{p_1'^2}{2m_1}+\\frac{p_2'^2}{2m_2}=\\frac{p_1^2}{2m_1}+\\frac{p_2^2}{2m_2} \\] <p>Plug in \\(p_1'=-p_2'\\), it's not hard to see for this quadratic equation, the other solution have to be \\(p_1'=-p_1=p_2\\) . Thus, in this frame we have</p> \\[ v_1'=\\dfrac{p_1'}{m_1}=\\dfrac{m_2(v_2-v_c)}{m_1}=\\dfrac{m_2}{m_1}\\dfrac{m_1(v_2-v_1)}{m_1+m_2}=\\dfrac{m_2(v_2-v_1)}{m_1+m_2} \\] <p>by velocity addition we can get mass \\(1\\)'s velocity in our original frame:</p> \\[ v_1'=\\dfrac{m_2(v_2-v_1)}{m_1+m_2}+\\frac{m_1v_1+m_2v_2}{m_1+m_2}=\\dfrac{m_1-m_2}{m_1+m_2}v_1+\\dfrac{2m_2}{m_1+m_2}v_2 \\]"},{"location":"Physics/F%3Dma%20Guide/#work-and-energy","title":"Work and Energy","text":"<ul> <li>Work: \\(W=F\\cdot s=Fs\\cos\\theta\\)</li> <li>Kinetic energy: \\(E_k=\\frac12mv^2=p^2/2m\\)</li> <li>Gravitational potential energy: \\(E_p = mgh\\)</li> <li>Spring potential energy: \\(U=\\frac12kx^2\\)</li> <li> <p>Potential energy-force relationship: \\(F=-\\dfrac{dU}{dx}\\)</p> </li> <li> <p>Work-energy theorem: \\(W=\\Delta K\\)</p> </li> <li> <p>An object is at equilibrium if \\(dU/dx= 0\\). An equilibrium is stable if the potential energy is at local minimum, otherwise it's unstable.</p> </li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#rotating-objects","title":"Rotating Objects","text":"<ul> <li>torque \\(\\tau=r\\times F\\)</li> <li>angular momentum \\(L=r\\times p = mvr_\\theta\\)</li> <li>moment of inertia \\(I=\\sum r^2dm\\), which can be derived by hand but it's faster to remember the values:</li> </ul> <ul> <li>Parallel axis theorem: the moment of inertia about a parallel axis is the center of mass moment plus the moment of inertia of the entire object treated as a point mass at the center of mass.</li> </ul> \\[ I=I_{cm}+Md^2 \\] <ul> <li>Perpendicular axis theorem: \\(I_z=I_x+I_y=\\int(x^2+y^2)dm\\)</li> <li>rotational kinetic energy \\(K_r=\\dfrac12I\\omega^2\\)</li> </ul> <p>People often get confused about rotational object, however, it's actually very similar to linear motion. We can draw comparison between these quantities:</p> <ul> <li>angle \\(\\theta\\) to displacement \\(x\\)</li> <li>angular velocity \\(\\omega\\) to velocity \\(v\\)</li> <li>torque \\(\\tau\\) to force \\(F\\)</li> <li>angular momentum \\(L\\) to momentum \\(p\\)</li> <li>moment of inertia \\(I\\) to mass \\(m\\)</li> <li>rotational kinetic energy \\(\\dfrac 12 I\\omega^2=\\dfrac{L^2}{2I}\\) to kinetic energy \\(\\dfrac12 mv^2=\\dfrac{p^2}{2m}\\)</li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#gravitation","title":"Gravitation","text":"\\[ F=G\\frac{Mm}{r^2},U(r)=-\\int_\\infty^r Fdr=-\\frac{GMm}{r} \\] <ul> <li>Kepler's First Law: a planet moves around a star in an elliptical orbit</li> <li>Kepler's Second Law: a line connecting the planet and the star sweeps out equal area in equal times.</li> <li>Kepler's Third Law: square of the orbital period is proportional to cube of the semimajor axis. \\(T^2\\propto a^3\\)</li> </ul> <p>Remark: The second law is a result of conservation of angular momentum, while the other two laws requires the gravitational force to be exactly inverse proportional to square of the distance between two stars. (\\(F\\propto r^{-2}\\))</p>"},{"location":"Physics/F%3Dma%20Guide/#circular-orbit","title":"Circular Orbit","text":"<ul> <li>velocity: \\(\\(mv^2/R=GMm/R^2\\implies v= \\sqrt{GM/R}\\)\\)</li> <li>kinetic energy: \\(\\dfrac12mv^2=\\dfrac{GMm}{2R}\\)</li> <li>total energy: \\(\\dfrac 12mv^2-\\dfrac{GMm}{R}= -\\dfrac{GMm}{2R}\\)</li> <li>angular momentum: \\(L=mvR = m\\sqrt{GMR}\\)</li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#escape-velocity","title":"Escape Velocity","text":"<p>By conservation of energy, we would have</p> \\[\\dfrac12mv_e^2-\\dfrac{GMm}{R}=0\\implies v_e=\\sqrt{\\dfrac{2GM}{R}}\\]"},{"location":"Physics/F%3Dma%20Guide/#elliptical-orbit","title":"Elliptical Orbit","text":"<p>First, we would like to prove that the orbit of a planet of mass \\(m\\) is indeed elliptical and the big mass \\(M\\) is the focus of the eclipse. (by big mass, we mean \\(m\\ll M\\)) By Newton's second law,</p> \\[ m\\dfrac{d\\vec{v}}{dt}=-\\dfrac{GMm}{r^2}\\hat{r} \\] <p>Apply chain rules \\(\\dfrac{d\\vec{v}}{dt}=\\dfrac{d\\vec{v}}{d\\theta}\\dfrac{d\\theta}{dt}\\) , also conservation of angular momentum tells us that \\(mr^2\\dfrac{d\\theta}{dt}=L\\). Then</p> \\[ \\dfrac{d\\vec{v}}{d\\theta}=-\\dfrac{GMm}{L}\\hat{r} \\] <p>Define \\(\\hat{\\theta}\\) to be the unit vector perpendicular to \\(\\hat{r}\\) pointing in the direction \\(\\hat{r}\\) moves with increasing \\(\\theta\\) . By some geometry, it's not hard to see that:</p> \\[ \\dfrac{d\\hat{\\theta}}{d\\theta}=\\hat{r} \\] <p>Plug it back and we now have:</p> \\[ \\dfrac{d}{d\\theta}(\\vec{v}-\\dfrac{GMm}{L}\\hat{\\theta})=0 \\] <p>Thus, the quantity \\(\\vec{v}-\\dfrac{GMm}{L}\\hat{\\theta}=\\vec{u}\\) is a constant independent of \\(\\theta\\) . WLOG, assume that \\(\\vec{u} = u\\hat{j}\\) . Then:</p> \\[ v_{\\theta} =\\vec{v}\\cdot\\hat{\\theta} = \\dfrac{GMm}{L}+u\\cos\\theta \\] <p>Since \\(\\vec{L}=\\vec{r}\\times\\vec{p}=mrv_\\theta\\), we can substitute and get:</p> \\[ \\dfrac{L}{mr}=\\dfrac{GMm}{L}+u\\cos\\theta \\] <p>Simplifying this and we can solve for \\(r\\) with respect to angle \\(\\theta\\):</p> \\[ r(\\theta) = \\dfrac{L^2/GMm^2}{1+(Lu/GmM)\\cos\\theta} \\] <p>This is the equation for an eclipse with eccentricity \\(Lu/GmM\\) with the focus at the origin.</p>"},{"location":"Physics/F%3Dma%20Guide/#keplers-third-law-derivation","title":"Kepler's Third Law Derivation","text":"<p>For an elliptical orbit with semimajor axis length \\(a\\) and semiminor axis length \\(b\\), its eccentricity \\(e\\) is defined as \\(a^2+(ae)^2=b^2\\), or \\(e=\\sqrt{1-(b/a)^2}\\) . By geometry, we know the closest distance to the focus \\(r_1=a(1-e)\\) and the furthest distance \\(r_2=a(1+e)\\). Thus:</p> <ul> <li>\\(r_1r_2=a^2(1-e^2)=b^2\\)</li> <li>\\(r_1+r_2=2a\\)</li> </ul> <p>Suppose the velocity at these two points are \\(v_1,v_2\\), respectively, by energy and angular momentum conservation we have:</p> \\[mv_1r_1=mv_2r_2=L\\] \\[\\dfrac12mv_1^2-\\dfrac{GMm}{r_1}=\\dfrac12mv_2^2-\\dfrac{GMm}{r_2}=E\\] <p>Rewrite \\(v_1=L/mr_1,v_2=L/mr_2\\) and plug it in the second equation:</p> \\[ \\dfrac{L^2}{2m^2}(\\dfrac1{r_1^2}-\\dfrac{1}{r_2^2})=GM(\\dfrac1{r_1}-\\dfrac{1}{r_2}) \\] <p>Simplify:</p> \\[ \\dfrac{L^2}{2m^2}=\\dfrac{GM}{1/r_1+1/r_2}=\\dfrac{GMr_1r_2}{r_1+r_2}=\\dfrac{GMb^2}{2a} \\] <p>Notice that \\(L/2m=vr/2\\) is the sweeping rate of the eclipse area in Kepler's second law and the eclipse's area is \\(\\pi ab\\), then</p> \\[ T^2=(\\dfrac{\\pi ab}{L/2m})^2=\\dfrac{2(\\pi ab)^2}{GMb^2/2a}=\\dfrac{4\\pi^2 a^3}{GM}\\propto a^3 \\]"},{"location":"Physics/F%3Dma%20Guide/#orbital-energy","title":"Orbital Energy","text":"<p>Moreover, we can derive that the total energy only depends on the major axis \\(a\\)! To see this, we add the energy at those two points together:</p> \\[ \\begin{aligned} 2E&amp;=\\dfrac{L^2}{2m}(\\dfrac{1}{r_1^2}+\\dfrac{1}{r_2^2})-GMm(\\dfrac1{r_1}+\\dfrac{1}{r_2}) \\\\ &amp;= \\dfrac{GMmb^2}{2a}((\\dfrac{1}{r_1}+\\dfrac{1}{r_2})^2-\\dfrac{2}{r_1r_2})-GMm(\\dfrac1{r_1}+\\dfrac{1}{r_2})\\\\ &amp;= \\dfrac{GMmb^2}{2a}(4a^2/b^4-2/b^2)-GMm(2a/b^2)\\\\ &amp;=-\\dfrac{GMm}{a}\\\\ \\implies E&amp;=-\\dfrac{GMm}{2a}\\\\ \\end{aligned} \\]"},{"location":"Physics/F%3Dma%20Guide/#orbital-velocity","title":"Orbital Velocity","text":"<p>By energy conservation, we can get the velocity</p> \\[v^2=GM(\\dfrac{2}r-\\dfrac 1a)\\] <p>Remarks: The orbital energy is determined only by the semimajor axis, whereas the angular momentum requires us to know both the semimajor and semiminor axis.</p>"},{"location":"Physics/F%3Dma%20Guide/#fluids","title":"Fluids","text":"<ul> <li>Archimedes principle states that the upward buoyant force that is exerted on a body in a fluid is equal to the weight of the fluid that the body displaces. \\(F_b=\\rho_lVg\\), where \\(\\rho_l\\) is the density of the fluid and \\(V\\) is the volume of the fluid that the body displaces.</li> <li>Continuity equation: basically it means that the volume flow in equals the volume flow out in any period of time. \\(\\rho_1A_1v_1=\\rho_2A_2v_2\\). Most of the time we are dealing with incompressible liquids, so we can drop the density factor and get \\(A_1v_1=A_2v_2\\).</li> <li>Bernoulli equation: the energy version of continuity equation  \\(P_1+\\dfrac12\\rho v_1^2+\\rho gh_1=P_2+\\dfrac12\\rho v_2^2+\\rho gh_2\\)</li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#oscillations","title":"Oscillations","text":""},{"location":"Physics/F%3Dma%20Guide/#simple-harmonic-motion","title":"Simple harmonic motion","text":"\\[ x(t)=A\\cos(\\omega t+\\phi) \\] <p>Where \\(t\\) is the time, \\(x\\) is the displacement, \\(\\omega\\) is the angular frequency, \\(A\\) is the amplitude, and \\(\\phi\\) is the phase shift measured in radians. This is a solution to the differential equation in either of the following forms:</p> \\[ \\begin{aligned} a=\\frac{d^2x}{dt^2}=-\\omega^2x\\\\ x^2+\\frac{v^2}{\\omega^2}=A^2\\\\ \\end{aligned} \\] <p>The first equation is derived from Newton's second law while the second one is a result of energy conservation. They are both very important to know about.</p>"},{"location":"Physics/F%3Dma%20Guide/#mass-on-a-spring","title":"Mass on a spring","text":"<p>Take the most classical example of a mass \\(m\\) that moves horizontally while attaching to a spring with spring constant \\(k\\). If the system is left at rest at the equilibrium position, then no net force is acting on the mass. Otherwise, we would have the restoring elastic force by the Hooke's law:</p> \\[ F=-kx \\] <p>Notice that from Newton's second law we also have \\(F=ma\\), then we can get:</p> \\[ a=-\\frac km x=-\\omega^2x,\\omega = \\sqrt{\\frac km} \\] <p>An alternative way is using the conservation of energy:</p> \\[ \\frac12mv^2+\\frac12kx^2=\\frac12mv_0^2+\\frac12kx_0^2=\\text{const} \\] <p>We can also get the angular frequency by dividing the factors of \\(x^2\\) by the factors of \\(v^2\\) in this formula.</p>"},{"location":"Physics/F%3Dma%20Guide/#mass-on-a-pendulum","title":"Mass on a pendulum","text":"<p>Another classical example will be the simple pendulum at small angle \\(\\theta\\ll 1\\). </p> <p></p> <p>By its free body diagram we can apply Newton's second law for rotational system:</p> \\[ \\tau = I\\alpha\\implies -mg\\sin\\theta L = (mL^2)\\dfrac{d^2\\theta}{dt^2} \\] <p>Plug in small angle approximation \\(\\sin\\theta\\approx \\theta\\):</p> \\[ \\dfrac{d^2\\theta}{dt^2}+\\dfrac gL\\theta=0 \\] <p>By our previous knowledge we know that the angular frequency \\(\\omega = \\sqrt{g/L}\\).</p> <p>If we have a physical pendulum with moment of inertia around our pivot \\(I\\), then \\(\\omega = \\sqrt{mgL/I}\\) .</p> <p>Below are some more formulas for some terms we use in oscillation:</p> <ul> <li>period \\(T\\) of an oscillation: \\(T=2\\pi/\\omega\\)</li> <li>frequency \\(f\\): \\(f=\\omega/2\\pi\\)</li> </ul> <p>A system of \\(N\\) coupled oscillators has \\(N\\) different eigenmodes when all the oscillatros oscillate with the same frequency \\(\\omega_i,x_j=x_{j0}\\sin(\\omega_i t+\\varphi_{ij})\\) and \\(N\\) eigen-frequencies \\(\\omega_i\\) (which can be multiple, \\(\\omega_i=\\omega_j\\)). General solution is a superposition of all the eigenmotions.</p>"},{"location":"Physics/F%3Dma%20Guide/#waves","title":"Waves","text":"<ul> <li>\\(v=\\lambda/T=\\lambda f\\)</li> <li>For waves on a string, \\(v=\\sqrt{T/\\mu}\\), where \\(T\\) is the tension along the string and \\(\\mu\\) is the linear density of the string.</li> <li>Doppler effect: \\(f_o=\\dfrac{v+v_o}{v+v_s}f_s\\)</li> </ul>"},{"location":"Physics/F%3Dma%20Guide/#rolling-without-slipping","title":"Rolling without slipping","text":"<p>Suppose we have a cylinder rolling without slipping on a ramp, how can we calculate it's speed?</p> <p>First, rolling without slipping implies that</p> <p>  By Newton's Second Law:</p> \\[ \\begin{aligned} mg\\sin\\theta - f = m\\alpha R\\\\ fR = I\\alpha \\implies \\alpha = \\frac{2f}{mR}\\\\ \\end{aligned} \\] <p>Combining these equations, we have</p> \\[ \\alpha = \\frac{2g\\sin\\theta}{3R} $$ Moreover, from energy conservation we have: $$ mgh=\\frac12mv^2+I\\omega^2 \\]"},{"location":"Physics/Theory%20of%20relativity/","title":"Theory of relativity","text":""},{"location":"Physics/Theory%20of%20relativity/#lorentz-transformation","title":"Lorentz Transformation","text":"<p>Let \\(S'\\) be a frame of a moving observer with velocity \\(v\\) in the x-direction with respect to the frame \\(S\\). Then the space-time coordinates in \\(S\\) and \\(S'\\) are related by the Lorentz Transformation. For our convenience, we express the velocity as \\(v=\\beta c\\) and the Lorentz factor is \\(\\gamma = (1-\\beta^2)^{-1/2}\\). </p> \\[ ct'=\\gamma(ct-\\beta x),x'=\\gamma(x-\\beta ct),y'=y,z'=z \\] \\[ p_x'=\\gamma(p_x-mv),m'=\\gamma(m-p_xv/c^2) \\]"},{"location":"Physics/Theory%20of%20relativity/#velocity-addition","title":"Velocity Addition","text":"\\[ u_x=\\dfrac{u_x'+v}{1+u_x'v/c^2},u_y=\\dfrac{u_y'}{\\gamma(1+u_x'v/c^2)} \\]"},{"location":"Physics/Theory%20of%20relativity/#doppler-effect","title":"Doppler effect","text":"\\[ \\nu'=\\nu_0\\sqrt{(1-\\beta)/(1+\\beta)} \\]"},{"location":"Physics/Theory%20of%20relativity/#4-vector","title":"4-vector","text":"\\[ s^2=(ct)^2-x^2-y^2-z^2\\\\ m_0^2c^2=m^2c^2-p_x^2-p_y^2-p_z^2 \\]"},{"location":"Physics/Thermodynamics/","title":"Thermodynamics","text":""},{"location":"Physics/Thermodynamics/#the-ideal-gas-law","title":"The Ideal Gas Law","text":"\\[ pV=nRT=Nk_BT,p=\\dfrac{\\rho k_BT}{m},U=\\alpha nRT \\] <p>where:</p> <ul> <li>\\(p\\) is the absolute pressure of the gas,</li> <li>\\(V\\) is the volume of the gas,</li> <li>\\(n\\) is the number of moles,</li> <li>\\(R\\) is the ideal gas constant,</li> <li>\\(k_B\\) is the Boltzmann constant,</li> <li>\\(N_A\\) is the Avogadro constant,</li> <li>\\(T\\) is the absolute temperature of the gas,</li> <li>\\(\\alpha\\) is the number of degrees of freedom divided by \\(2\\). (\\(\\alpha = 3/2\\) for monatomic gas, \\(\\alpha = 5/2\\) for diatomic gas).</li> <li>\\(N\\) is the number of particles.</li> </ul>"},{"location":"Physics/Thermodynamics/#van-der-waals-equation","title":"Van der Waals equation","text":"\\[ (p+\\dfrac{a}{V^2})(V-b)=RT,p=\\dfrac{RT}{V-b}-\\dfrac{a}{V^2} \\]"},{"location":"Physics/Thermodynamics/#the-first-law-of-thermodynamics","title":"The First Law of Thermodynamics","text":"\\[ dU= dW +dQ,dW=-pdV \\]"},{"location":"Physics/Thermodynamics/#the-second-law-of-thermodynamics","title":"The Second Law of Thermodynamics","text":"\\[ dS=\\dfrac{dQ}{T} \\]"},{"location":"Physics/Thermodynamics/#adiabatic-process","title":"Adiabatic Process","text":"\\[pV^\\gamma = \\text{constant}\\] \\[p^{1-\\gamma}T^\\gamma = \\text{constant}\\] \\[TV^{\\gamma - 1}=\\text{constant}\\] <p>where \\(\\gamma\\) is the adiabatic index or heat capacity ratio defined as:</p> \\[ \\gamma=\\dfrac{C_p}{C_V} = \\dfrac{f+2}{f} \\] <ul> <li>\\(C_p,C_V\\) is the specific heat for constant pressure, \\(C_V\\) is the specific heat for constant volume, and \\(f\\) is the number of degrees of freedom (3 for monoatomic gas, 5 for diatomic gas or a gas of linear molecules). </li> </ul> <p>Derivation for P-V relation:</p> <p>The adiabatic process is defined as a process where heat transfer is zero, then we can apply the first law of thermodynamics:</p> \\[ dQ=dU-dW=d(\\alpha pV)+pdV=(\\alpha +1)pdV+\\alpha Vdp=0 \\] <p>We can separate the variable:</p> \\[ -(\\alpha  + 1)\\dfrac{dV}V=\\alpha\\dfrac{dp}p \\] <p>Integrate on both sides:</p> \\[ \\ln(p/p_0)=-\\dfrac{\\alpha + 1}{\\alpha}(V/V_0) \\] <p>And then exponentiate them, substituting \\(\\gamma=\\dfrac{\\alpha + 1}{\\alpha}\\) .</p> <p>  Similar derivations can be done for Van der Waals equation.</p>"}]}